{"version":3,"sources":["webpack:///./src/components/button/index.js","webpack:///./src/components/notice/index.js","webpack:///./src/components/help/index.js","webpack:///./src/components/button/button.module.sass","webpack:///./src/pages/lex/help/index.js","webpack:///./src/components/notice/notice.module.sass"],"names":["Button","ver","onClick","id","small","type","role","route","link","children","assignClasses","classes","styles","btn","find","el","href","className","buttonLink","Notice","notice","PureHelp","data","toolInfo","metadata","site","siteMetadata","title","canonical","toolTitle","description","Help","props","useStaticQuery","module","exports","PureLexHelp","lex","LexHelp"],"mappings":"6IAoEeA,IA/DA,SAAC,GAUT,IATLC,EASI,EATJA,IACAC,EAQI,EARJA,QACAC,EAOI,EAPJA,GACAC,EAMI,EANJA,MACAC,EAKI,EALJA,KACAC,EAII,EAJJA,KACAC,EAGI,EAHJA,MACAC,EAEI,EAFJA,KACAC,EACI,EADJA,SAEMC,EAAgB,WACpB,IAAIC,EAAUC,IAAOC,IAUrB,MARI,CAAC,UAAW,UAAW,UAAUC,MAAK,SAAAC,GAAE,OAAIA,IAAOd,OACrDU,GAAO,IAAQC,IAAOX,IAGpBG,IACFO,GAAO,IAAQC,IAAOR,OAGjBO,GAGT,OAAIH,EAEA,mBACEQ,KAAI,IAAMT,EACVJ,GAAIA,EACJc,UAAcP,IAAL,IAAwBE,IAAOM,WAH1C,SAKGT,IAKH,wBACEP,QAASA,EACTC,GAAIA,EACJc,UAAWP,IACXL,KAAMA,GAAQ,SACdC,KAAMA,GAAQ,SALhB,SAOGG,M,mFCtCMU,IANA,SAAC,GAAD,IAAGV,EAAH,EAAGA,SAAH,OAAkB,mBAAGQ,UAAWL,IAAOQ,OAArB,SAA8BX,M,mICKlDY,EAAW,SAAC,GAAkC,IAAD,EAA/BC,EAA+B,EAA/BA,KAAMC,EAAyB,EAAzBA,SAAUd,EAAe,EAAfA,SACnCe,EAAWF,SAAH,UAAGA,EAAMG,YAAT,aAAG,EAAYC,aAE7B,OACE,eAAC,IAAD,WACE,cAAC,IAAD,CACEC,MAAK,IAAKH,aAAL,EAAKA,EAAUG,QAAQJ,aAAvB,EAAuBA,EAAUI,OAAjC,QACLC,WAAcL,aAAL,EAAKA,EAAUf,MAAf,UAEX,cAAC,IAAD,CAAQA,MAAI,EAACD,MAAOgB,aAAF,EAAEA,EAAUf,KAA9B,kBAGA,oBACES,UAAWL,IAAOiB,UADpB,aAEKL,aAFL,EAEKA,EAAUG,QAAQJ,aAFvB,EAEuBA,EAAUI,OAFjC,UAGA,mBAAGxB,GAAIS,IAAOkB,YAAd,aACMN,aADN,EACMA,EAAUG,QAAQJ,aADxB,EACwBA,EAAUI,OADlC,KAC2CJ,aAD3C,EAC2CA,EAAUO,eAEpDrB,MAmCQsB,IAdF,SAAAC,GACX,IAAMV,EAAOW,yBAAe,cAU5B,OAAO,cAACZ,EAAD,iBAAcW,EAAd,CAAqBV,KAAMA,O,uBC3DpCY,EAAOC,QAAU,CAAC,IAAM,4BAA4B,QAAU,gCAAgC,QAAU,gCAAgC,OAAS,+BAA+B,MAAQ,8BAA8B,WAAa,sC,qJCKtNC,EAAc,SAAC,GAAc,IAAD,IAAXd,EAAW,EAAXA,KACtBE,EAAWF,SAAH,UAAGA,EAAMG,YAAT,aAAG,EAAYC,aACvBH,EAAWC,SAAH,UAAGA,EAAUD,gBAAb,aAAG,EAAoBc,IAErC,OACE,eAAC,IAAD,CAAMd,SAAUA,EAAhB,UACE,cAAC,IAAD,8CACA,qBAAIpB,GAAG,QAAP,mBACSqB,aADT,EACSA,EAAUG,MAChBJ,aAFH,EAEGA,EAAUI,aA2BJW,UArBC,SAAAN,GACd,IAAMV,EAAOW,yBAAe,cAiB5B,OAAO,cAACG,EAAD,iBAAiBJ,EAAjB,CAAwBV,KAAMA,O,uBCtCvCY,EAAOC,QAAU,CAAC,OAAS,iC","file":"component---src-pages-lex-help-index-js-7fd300dc477c39d74b13.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport styles from './button.module.sass'\n\nconst Button = ({\n  ver,\n  onClick,\n  id,\n  small,\n  type,\n  role,\n  route,\n  link,\n  children\n}) => {\n  const assignClasses = () => {\n    let classes = styles.btn\n\n    if (['neutral', 'success', 'danger'].find(el => el === ver)) {\n      classes += ` ${styles[ver]}`\n    }\n\n    if (small) {\n      classes += ` ${styles.small}`\n    }\n\n    return classes\n  }\n\n  if (link) {\n    return (\n      <a\n        href={`/${route}`}\n        id={id}\n        className={`${assignClasses()} ${styles.buttonLink}`}\n      >\n        {children}\n      </a>\n    )\n  } else {\n    return (\n      <button\n        onClick={onClick}\n        id={id}\n        className={assignClasses()}\n        type={type || 'button'}\n        role={role || 'button'}\n      >\n        {children}\n      </button>\n    )\n  }\n}\n\nButton.propTypes = {\n  ver: PropTypes.oneOf(['neutral', 'success', 'danger']),\n  onClick: PropTypes.func,\n  id: PropTypes.string,\n  small: PropTypes.bool,\n  type: PropTypes.string,\n  role: PropTypes.string,\n  classes: PropTypes.object,\n  route: PropTypes.string,\n  link: PropTypes.bool,\n  children: PropTypes.string\n}\n\nexport default Button\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport styles from './notice.module.sass'\n\nconst Notice = ({ children }) => <p className={styles.notice}>{children}</p>\n\nNotice.propTypes = {\n  children: PropTypes.string\n}\n\nexport default Notice\n","import React from 'react'\nimport { graphql, useStaticQuery } from 'gatsby'\nimport PropTypes from 'prop-types'\n\nimport Layout from '../layout'\nimport SEO from '../seo'\nimport Button from '../button'\n\nimport styles from './help.module.sass'\n\nexport const PureHelp = ({ data, toolInfo, children }) => {\n  const metadata = data?.site?.siteMetadata\n\n  return (\n    <Layout>\n      <SEO\n        title={`${metadata?.title}${toolInfo?.title} Help`}\n        canonical={`${toolInfo?.link}/help`}\n      />\n      <Button link route={toolInfo?.link}>\n        Back\n      </Button>\n      <h2\n        className={styles.toolTitle}\n      >{`${metadata?.title}${toolInfo?.title} Help`}</h2>\n      <p id={styles.description}>\n        {`${metadata?.title}${toolInfo?.title} ${toolInfo?.description}`}\n      </p>\n      {children}\n    </Layout>\n  )\n}\n\nPureHelp.propTypes = {\n  data: PropTypes.object,\n  toolInfo: PropTypes.shape({\n    title: PropTypes.string,\n    link: PropTypes.string,\n    description: PropTypes.string\n  }).isRequired,\n  children: PropTypes.oneOfType([\n    PropTypes.element,\n    PropTypes.string,\n    PropTypes.arrayOf(\n      PropTypes.oneOfType([PropTypes.element, PropTypes.string])\n    )\n  ])\n}\n\nconst Help = props => {\n  const data = useStaticQuery(graphql`\n    query HelpTitleQuery {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n    }\n  `)\n\n  return <PureHelp {...props} data={data} />\n}\n\nexport default Help\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"button-module--btn--1Vo01\",\"neutral\":\"button-module--neutral--3CChK\",\"success\":\"button-module--success--MfUtK\",\"danger\":\"button-module--danger--3YJms\",\"small\":\"button-module--small--gFeIB\",\"buttonLink\":\"button-module--button-link--2l7Ks\"};","import React from 'react'\nimport { graphql, useStaticQuery } from 'gatsby'\n\nimport Notice from '../../../components/notice'\nimport Help from '../../../components/help'\n\nexport const PureLexHelp = ({ data }) => {\n  const metadata = data?.site?.siteMetadata\n  const toolInfo = metadata?.toolInfo?.lex\n\n  return (\n    <Help toolInfo={toolInfo}>\n      <Notice>This tool is still in planning.</Notice>\n      <h3 id='using'>\n        Using {metadata?.title}\n        {toolInfo?.title}\n      </h3>\n    </Help>\n  )\n}\n\nconst LexHelp = props => {\n  const data = useStaticQuery(graphql`\n    query LexHelpQuery {\n      site {\n        siteMetadata {\n          title\n          toolInfo {\n            lex {\n              title\n              link\n              description\n            }\n          }\n        }\n      }\n    }\n  `)\n\n  return <PureLexHelp {...props} data={data} />\n}\n\nexport default LexHelp\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"notice\":\"notice-module--notice--14xfk\"};"],"sourceRoot":""}