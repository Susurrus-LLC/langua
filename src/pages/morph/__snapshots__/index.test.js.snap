// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Morph renders accurately 1`] = `
<div
  className="app"
>
  <header
    className="header"
  >
    <div
      className="titleArea"
    >
      <h1
        className="siteTitle"
      >
        <a
          className="titleLink"
          href="/"
        />
      </h1>
      <p
        className="subtitle"
      />
    </div>
    <nav
      className="nav"
    >
      <ul
        className="menu"
      >
        <li
          className="navLink"
        >
          <a
            href="/gen"
          >
            Gen
          </a>
        </li>
        <li
          className="navLink disabled"
        >
          <a
            href="/morph"
          >
            Morph
          </a>
        </li>
        <li
          className="navLink"
        >
          <a
            href="/deriv"
          >
            Deriv
          </a>
        </li>
        <li
          className="navLink"
        >
          <a
            href="/frequen"
          >
            Frequen
          </a>
        </li>
        <li
          className="navLink disabled"
        >
          <a
            href="/tree"
          >
            Tree
          </a>
        </li>
        <li
          className="navLink disabled"
        >
          <a
            href="/lex"
          >
            Lex
          </a>
        </li>
      </ul>
    </nav>
  </header>
  <main
    className="main"
  >
    <a
      className="btn buttonLink"
      href="/morph/help"
    >
      Help
    </a>
    <h2
      className="toolTitle"
    >
      undefinedMorph
    </h2>
    <p
      className="notice"
    >
      This tool is still in development.
    </p>
    <form
      className="form"
      name="morph-form"
    >
      <div
        className="section"
      >
        <div
          className="categories inputSection part"
        >
          <h5
            className="sectionTitle"
          >
            Categories
          </h5>
          <div
            className="container"
          >
            <textarea
              aria-label="Categories"
              className="categoriesInput dataInput"
              id="categories"
              name="categories"
              onChange={[Function]}
              value="V=ieaou
L=īēāōū
C=ptcqbdgmnlrhs
F=ie
B=ou
S=ptc
Z=bdg"
            />
            <div
              className="textAreaSpacer"
            >
              V=ieaou
L=īēāōū
C=ptcqbdgmnlrhs
F=ie
B=ou
S=ptc
Z=bdg
               
            </div>
          </div>
        </div>
        <div
          className="rewriteRules inputSection part"
        >
          <h5
            className="sectionTitle"
          >
            Rewrite Rules
          </h5>
          <div
            className="container"
          >
            <textarea
              aria-label="Rewrite rules"
              className="rewriteRulesInput dataInput"
              id="rewriteRules"
              name="rewriteRules"
              onChange={[Function]}
              value="lh=lj"
            />
            <div
              className="textAreaSpacer"
            >
              lh=lj
               
            </div>
          </div>
        </div>
        <div
          className="soundChanges inputSection part"
        >
          <h5
            className="sectionTitle"
          >
            Sound Changes
          </h5>
          <div
            className="container"
          >
            <textarea
              aria-label="Sound changes"
              className="soundChangesInput dataInput"
              id="soundChanges"
              name="soundChanges"
              onChange={[Function]}
              value="[sm]//_#
i/j/_V
L/V/_
e//Vr_#
v//V_V
u/o/_#
gn/nh/_
S/Z/V_V
c/i/F_t
c/u/B_t
p//V_t
ii/i/_
e//C_rV"
            />
            <div
              className="textAreaSpacer"
            >
              [sm]//_#
i/j/_V
L/V/_
e//Vr_#
v//V_V
u/o/_#
gn/nh/_
S/Z/V_V
c/i/F_t
c/u/B_t
p//V_t
ii/i/_
e//C_rV
               
            </div>
          </div>
        </div>
        <div
          className="lexicon inputSection part"
        >
          <h5
            className="sectionTitle"
          >
            Lexicon
          </h5>
          <div
            className="container"
          >
            <textarea
              aria-label="Lexicon"
              className="lexiconInput dataInput"
              id="lexicon"
              name="lexicon"
              onChange={[Function]}
              value="lector
doctor
focus
jocus
districtus
cīvitatem
adoptare
opera
secundus
fīliam
pōntem"
            />
            <div
              className="textAreaSpacer"
            >
              lector
doctor
focus
jocus
districtus
cīvitatem
adoptare
opera
secundus
fīliam
pōntem
               
            </div>
          </div>
        </div>
      </div>
      <div
        className="control part"
      >
        <div
          className="controlSide controlLeft"
        >
          <div
            className="controlPiece"
          >
            <button
              className="btn neutral"
              onClick={[Function]}
              role="button"
              type="submit"
            >
              Change
            </button>
          </div>
          <div
            className="controlPiece"
          >
            <label
              htmlFor="outputFormat"
            >
              output format:
            </label>
            <select
              id="outputFormat"
              name="outputFormat"
              onChange={[Function]}
              value="oo"
            >
              <option
                value="oo"
              >
                output
              </option>
              <option
                value="io"
              >
                input → output
              </option>
              <option
                value="oi"
              >
                output ← input
              </option>
            </select>
          </div>
          <div
            className="controlPiece"
          >
            <div>
              <label>
                <input
                  checked={true}
                  id="showChanges"
                  name="options"
                  onChange={[Function]}
                  type="checkbox"
                  value="showChanges"
                />
                 
                italicize changes
              </label>
              <br />
              <label>
                <input
                  checked={true}
                  id="showDiff"
                  name="options"
                  onChange={[Function]}
                  type="checkbox"
                  value="showDiff"
                />
                 
                bold differences
              </label>
            </div>
          </div>
          <div
            className="controlPiece"
          >
            <div>
              <label>
                <input
                  checked={true}
                  id="ruleReport"
                  name="options"
                  onChange={[Function]}
                  type="checkbox"
                  value="ruleReport"
                />
                 
                report applied rules
              </label>
              <br />
              <label>
                <input
                  checked={true}
                  id="rewriteOutput"
                  name="options"
                  onChange={[Function]}
                  type="checkbox"
                  value="rewriteOutput"
                />
                 
                rewrite on output
              </label>
            </div>
          </div>
        </div>
        <div
          className="controlSide controlRight"
        >
          <div
            className="controlPiece"
          >
            <button
              className="btn success"
              id="save"
              onClick={[Function]}
              role="button"
              type="button"
            >
              Save
            </button>
          </div>
          <div
            className="controlPiece"
          >
            <button
              className="btn"
              id="open"
              onClick={[Function]}
              role="button"
              type="button"
            >
              Open
            </button>
            <input
              className="hidden"
              id="file"
              name="file"
              onChange={[Function]}
              type="file"
            />
          </div>
        </div>
      </div>
    </form>
    <div
      className="results"
    >
      <div
        className="output"
      >
        <p
          className="outText"
        />
      </div>
      <div
        className="stats"
      >
        <p
          className="statsText"
        >
          0 of 0 words changed (undefined unchanged); 0 of 0 words different from last time (0 the same)
        </p>
      </div>
    </div>
    <div
      className="Toastify"
    />
  </main>
  <footer
    className="footer"
  >
    <p
      className="copyright"
    >
      <a
        href="undefined/blob/master/CHANGELOG.md"
        rel="noopener noreferrer"
        target="_blank"
      >
        Version 
        <i
          className="fas fa-code"
        />
         
      </a>
      . Built by
       
      <a
        rel="noopener noreferrer"
        target="_blank"
      />
      , copyright © 
      2017–2020
       under the
       
      <a
        href="https://choosealicense.com/licenses/agpl-3.0/"
        rel="noopener noreferrer"
        target="_blank"
      >
        AGPL-3.0 
        <i
          className="fas fa-gavel"
        />
         license
      </a>
      .
       
      <a
        rel="noopener noreferrer"
        target="_blank"
      >
        View this project on 
        <i
          className="fab fa-github"
        />
         GitHub.
      </a>
    </p>
  </footer>
</div>
`;
