{"version":3,"sources":["webpack://langua/./src/components/button/button.module.sass","webpack://langua/./src/components/button/index.js","webpack://langua/./src/components/form/form.module.sass","webpack://langua/./src/components/form/index.js","webpack://langua/./src/components/notice/notice.module.sass","webpack://langua/./src/components/notice/index.js","webpack://langua/./src/components/results/results.module.sass","webpack://langua/./src/components/results/index.js","webpack://langua/./src/components/tool/tool.module.sass","webpack://langua/./src/components/tool/index.js","webpack://langua/./src/pageComponents/lex/lexForm.js","webpack://langua/./src/pageComponents/lex/lexResults.js","webpack://langua/./src/pages/lex/index.js"],"names":["ver","onClick","id","small","type","role","route","link","external","children","assignClasses","classes","styles","find","el","href","className","Link","to","name","PureTool","data","toolInfo","metadata","site","siteMetadata","title","canonical","props","useStaticQuery","PureLex","lex"],"mappings":"mJACA,GAAgB,IAAM,4BAA4B,QAAU,gCAAgC,QAAU,gCAAgC,OAAS,+BAA+B,MAAQ,8BAA8B,WAAa,qC,UCkFjO,EA7Ee,SAAC,GAWT,IAVLA,EAUI,EAVJA,IACAC,EASI,EATJA,QACAC,EAQI,EARJA,GACAC,EAOI,EAPJA,MACAC,EAMI,EANJA,KACAC,EAKI,EALJA,KACAC,EAII,EAJJA,MACAC,EAGI,EAHJA,KACAC,EAEI,EAFJA,SACAC,EACI,EADJA,SAEMC,EAAgB,WACpB,IAAIC,EAAUC,MAUd,MARI,CAAC,UAAW,UAAW,UAAUC,MAAK,SAAAC,GAAE,OAAIA,IAAOd,OACrDW,GAAO,IAAQC,EAAOZ,IAGpBG,IACFQ,GAAO,IAAQC,SAGVD,GAGT,OAAIJ,EACEC,EAEA,qBACEO,KAAI,IAAMT,EACVJ,GAAIA,EACJc,UAAcN,IAAL,IAAwBE,cAEhCH,GAKH,gBAAC,EAAAQ,KAAD,CACEC,GAAE,IAAMZ,EACRJ,GAAIA,EACJc,UAAcN,IAAL,IAAwBE,cAEhCH,GAML,0BACER,QAASA,EACTC,GAAIA,EACJc,UAAWN,IACXN,KAAMA,GAAQ,SACdC,KAAMA,GAAQ,UAEbI,K,gFC9DT,EAAuB,2BCqBvB,EAjBa,SAAC,GAAD,IAAGU,EAAH,EAAGA,KAAMV,EAAT,EAASA,SAAT,OACX,wBAAMU,KAAMA,EAAMH,UAAWJ,GAC1BH,K,gFCNL,EAAyB,+BCUzB,EANe,SAAC,GAAD,IAAGA,EAAH,EAAGA,SAAH,OAAkB,qBAAGO,UAAWJ,GAAgBH,K,gFCJ/D,EAA0B,iCCkB1B,EAdgB,SAAC,GAAD,IAAGA,EAAH,EAAGA,SAAH,OACd,uBAAKO,UAAWJ,GAAiBH,K,wHCLnC,KCSaW,EAAW,SAAC,GAAkC,IAAD,EAA/BC,EAA+B,EAA/BA,KAAMC,EAAyB,EAAzBA,SAAUb,EAAe,EAAfA,SACnCc,EAAWF,SAAH,UAAGA,EAAMG,YAAT,aAAG,EAAYC,aAE7B,OACE,gBAAC,IAAD,KACE,gBAAC,IAAD,CACEC,MAAK,IAAKH,aAAL,EAAKA,EAAUG,OAAQJ,EAASI,MACrCC,UAAWL,EAASf,OAEtB,gBAAC,IAAD,CAAQA,MAAI,EAACD,MAAUgB,EAASf,KAAd,SAAlB,QAGA,sBACES,UAAWJ,aADb,IAEKW,aAFL,EAEKA,EAAUG,OAAQJ,EAASI,OAC/BjB,IA+BP,EAda,SAAAmB,GACX,IAAMP,GAAOQ,oBAAe,cAU5B,OAAO,gBAACT,EAAD,iBAAcQ,EAAd,CAAqBP,KAAMA,O,kKCxCpC,EANgB,kBAAM,gBAAC,IAAD,CAAMF,KAAK,c,UCMjC,EANmB,kBAAM,gBAAC,IAAD,OCIZW,EAAU,SAAC,GAAc,IAAD,MAAXT,EAAW,EAAXA,KAClBC,EAAWD,SAAH,UAAGA,EAAMG,YAAT,iBAAG,EAAYC,oBAAf,iBAAG,EAA0BH,gBAA7B,aAAG,EAAoCS,IAErD,OACE,gBAAC,IAAD,CAAMT,SAAUA,GACd,gBAAC,IAAD,wCACA,gBAAC,EAAD,MACA,gBAAC,EAAD,QAyBN,EApBY,SAAAM,GACV,IAAMP,GAAOQ,oBAAe,aAgB5B,OAAO,gBAACC,EAAD,iBAAaF,EAAb,CAAoBP,KAAMA","file":"component---src-pages-lex-index-js-06eb049580c330f789de.js","sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"btn\":\"button-module--btn--Hxea0\",\"neutral\":\"button-module--neutral--1Jfpx\",\"success\":\"button-module--success--3v2EC\",\"danger\":\"button-module--danger--UAgqr\",\"small\":\"button-module--small--aOOYC\",\"buttonLink\":\"button-module--button-link--kKU0I\"};","import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport styles from './button.module.sass'\nimport { Link } from 'gatsby'\n\nconst Button = ({\n  ver,\n  onClick,\n  id,\n  small,\n  type,\n  role,\n  route,\n  link,\n  external,\n  children\n}) => {\n  const assignClasses = () => {\n    let classes = styles.btn\n\n    if (['neutral', 'success', 'danger'].find(el => el === ver)) {\n      classes += ` ${styles[ver]}`\n    }\n\n    if (small) {\n      classes += ` ${styles.small}`\n    }\n\n    return classes\n  }\n\n  if (link) {\n    if (external) {\n      return (\n        <a\n          href={`/${route}`}\n          id={id}\n          className={`${assignClasses()} ${styles.buttonLink}`}\n        >\n          {children}\n        </a>\n      )\n    } else {\n      return (\n        <Link\n          to={`/${route}`}\n          id={id}\n          className={`${assignClasses()} ${styles.buttonLink}`}\n        >\n          {children}\n        </Link>\n      )\n    }\n  } else {\n    return (\n      <button\n        onClick={onClick}\n        id={id}\n        className={assignClasses()}\n        type={type || 'button'}\n        role={role || 'button'}\n      >\n        {children}\n      </button>\n    )\n  }\n}\n\nButton.propTypes = {\n  ver: PropTypes.oneOf(['neutral', 'success', 'danger']),\n  onClick: PropTypes.func,\n  id: PropTypes.string,\n  small: PropTypes.bool,\n  type: PropTypes.string,\n  role: PropTypes.string,\n  classes: PropTypes.object,\n  route: PropTypes.string,\n  link: PropTypes.bool,\n  external: PropTypes.bool,\n  children: PropTypes.string\n}\n\nexport default Button\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"form-module--form--1v7CZ\"};","import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport styles from './form.module.sass'\n\nconst Form = ({ name, children }) => (\n  <form name={name} className={styles.form}>\n    {children}\n  </form>\n)\n\nForm.propTypes = {\n  name: PropTypes.string,\n  children: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.element,\n    PropTypes.arrayOf(\n      PropTypes.oneOfType([PropTypes.string, PropTypes.element])\n    )\n  ])\n}\n\nexport default Form\n","// extracted by mini-css-extract-plugin\nexport default {\"notice\":\"notice-module--notice--1QCeC\"};","import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport styles from './notice.module.sass'\n\nconst Notice = ({ children }) => <p className={styles.notice}>{children}</p>\n\nNotice.propTypes = {\n  children: PropTypes.string\n}\n\nexport default Notice\n","// extracted by mini-css-extract-plugin\nexport default {\"results\":\"results-module--results--21auf\"};","import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport styles from './results.module.sass'\n\nconst Results = ({ children }) => (\n  <div className={styles.results}>{children}</div>\n)\n\nResults.propTypes = {\n  children: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.element,\n    PropTypes.arrayOf(\n      PropTypes.oneOfType([PropTypes.string, PropTypes.element])\n    )\n  ])\n}\n\nexport default Results\n","// extracted by mini-css-extract-plugin\nexport default {};","import React from 'react'\nimport { graphql, useStaticQuery } from 'gatsby'\nimport PropTypes from 'prop-types'\n\nimport Layout from '../layout'\nimport SEO from '../seo'\nimport Button from '../button'\n\nimport styles from './tool.module.sass'\n\nexport const PureTool = ({ data, toolInfo, children }) => {\n  const metadata = data?.site?.siteMetadata\n\n  return (\n    <Layout>\n      <SEO\n        title={`${metadata?.title}${toolInfo.title}`}\n        canonical={toolInfo.link}\n      />\n      <Button link route={`${toolInfo.link}/help`}>\n        Help\n      </Button>\n      <h2\n        className={styles.toolTitle}\n      >{`${metadata?.title}${toolInfo.title}`}</h2>\n      {children}\n    </Layout>\n  )\n}\n\nPureTool.propTypes = {\n  data: PropTypes.object,\n  toolInfo: PropTypes.objectOf(PropTypes.string).isRequired,\n  children: PropTypes.oneOfType([\n    PropTypes.element,\n    PropTypes.string,\n    PropTypes.arrayOf(\n      PropTypes.oneOfType([PropTypes.element, PropTypes.string])\n    )\n  ])\n}\n\nconst Tool = props => {\n  const data = useStaticQuery(graphql`\n    query ToolTitleQuery {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n    }\n  `)\n\n  return <PureTool {...props} data={data} />\n}\n\nexport default Tool\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport Form from '../../components/form'\n\n// import sharedStyles from '../../components/form/sharedForm.module.sass'\n\nconst LexForm = () => <Form name='lex-form' />\n\nLexForm.propTypes = {\n  styles: PropTypes.string\n}\n\nexport default LexForm\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport Results from '../../components/results'\n\n// import sharedStyles from '../../components/results/sharedResults.module.sass'\n\nconst LexResults = () => <Results />\n\nLexResults.propTypes = {\n  styles: PropTypes.string\n}\n\nexport default LexResults\n","import React from 'react'\nimport { graphql, useStaticQuery } from 'gatsby'\n\nimport Notice from '../../components/notice'\nimport Tool from '../../components/tool'\n\nimport LexForm from '../../pageComponents/lex/lexForm'\nimport LexResults from '../../pageComponents/lex/lexResults'\n\n// import styles from './lex.module.sass'\n\nexport const PureLex = ({ data }) => {\n  const toolInfo = data?.site?.siteMetadata?.toolInfo?.lex\n\n  return (\n    <Tool toolInfo={toolInfo}>\n      <Notice>This tool is still in planning.</Notice>\n      <LexForm />\n      <LexResults />\n    </Tool>\n  )\n}\n\nconst Lex = props => {\n  const data = useStaticQuery(graphql`\n    query LexToolQuery {\n      site {\n        siteMetadata {\n          toolInfo {\n            lex {\n              title\n              link\n              description\n            }\n          }\n        }\n      }\n    }\n  `)\n\n  return <PureLex {...props} data={data} />\n}\n\nexport default Lex\n"],"sourceRoot":""}