{"version":3,"sources":["registerServiceWorker.js","styles/functions.js","styles/variables.js","styles/global.js","styles/app.js","components/Header/styles.js","components/Header/index.js","components/Button/styles.js","components/Button/index.js","components/Button/Link.js","components/Tool/styles.js","components/Tool/index.js","components/Form/formStyles.js","components/Form/index.js","components/Form/sharedFormStyles.js","components/Control/styles.js","components/Control/index.js","components/Control/Side.js","components/Control/Piece.js","data/gen.js","routes/Gen/GenForm.js","components/Results/resultsStyles.js","components/Results/index.js","components/Results/sharedResultsStyles.js","routes/Gen/GenResults.js","data/deriv.js","data/frequen.js","data/morph.js","tools/dataProcessor.js","tools/fileProcessor.js","routes/Gen/GenService.js","routes/Gen/styles.js","routes/Gen/index.js","components/Notice/index.js","routes/Morph/MorphForm.js","routes/Morph/MorphResults.js","routes/Morph/MorphService.js","routes/Morph/styles.js","routes/Morph/index.js","routes/Deriv/DerivForm.js","routes/Deriv/DerivResults.js","routes/Deriv/DerivService.js","routes/Deriv/styles.js","routes/Deriv/index.js","routes/Frequen/FrequenForm.js","routes/Frequen/FrequenResults.js","routes/Frequen/FrequenService.js","routes/Frequen/styles.js","routes/Frequen/index.js","routes/Tree/TreeForm.js","routes/Tree/TreeResults.js","routes/Tree/styles.js","routes/Tree/index.js","routes/Lex/LexForm.js","routes/Lex/LexResults.js","routes/Lex/styles.js","routes/Lex/index.js","routes/Home/HomePanel.js","routes/Home/styles.js","routes/Home/index.js","components/Help/styles.js","components/Help/index.js","routes/Deriv/Help/index.js","routes/Frequen/Help/index.js","routes/Gen/Help/index.js","routes/Morph/Help/index.js","routes/Tree/Help/index.js","routes/Lex/Help/index.js","components/Main/styles.js","components/Main/index.js","components/Footer/styles.js","components/Footer/index.js","App.js","Router.js","index.js"],"names":["isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","toast","warn","autoClose","className","bodyClassName","progressClassName","console","log","success","catch","error","complement","color","rotate","isHighKeyValue","hue","isHighestKeyValue","harmoniousMix","colMix","base","isCoolColor","mix","mixNeutral","mainFont","headerFont","ms0","Math","pow","ms2","ms3","ms4","ms5","ms6","lnht","bluPmy","Color","ongPmy","redPmy","blu","darken","ong","red","bluNtl","ongNtl","redNtl","white","grayscale","lightness","black","styles","boxSizing","outline","width","style","v","alpha","string","body","margin","padding","paddingLeft","fontFamily","fontSize","lineHeight","backgroundColor","fontKerning","fontVariantLigatures","fontFeatureSettings","textRendering","top","right","bottom","left","marginTop","h1","h2","h3","h4","h5","h6","p","a","textDecoration","TextDecorationSkipInk","input","height","border","verticalAlign","textarea","overflow","select","button","cursor","background","borderRadius","boxShadow","inset","x","y","blur","spread","optgroup","lighten","app","maxWidth","marginLeft","marginRight","header","display","justifyContent","alignItems","borderBottom","titleArea","order","siteTitle","marginBottom","titleLink","siteSubtitle","fontStyle","nav","flexGrow","menu","textAlign","navLink","disabled","opacity","injectSheet","props","classes","to","activeClassName","classNames","btn","fontWeight","neutral","danger","buttonLink","float","small","ver","onClick","id","addClass","type","role","children","withRouter","buttonType","e","preventDefault","history","push","route","tool","Helmet","toolInfo","title","name","content","description","rel","href","canonical","link","form","sectionTitle","part","hidden","control","flexDirection","alignContent","flexWrap","controlLeft","controlRight","controlPiece","addedClasses","side","defData","subpatterns","selected","subpattern","pattern","words","newline","filterdupes","vars","sharedFormStyles","filePicker","React","createRef","selectOptions","map","variab","index","key","value","subpatternRows","data","subpsRow","onChange","change","aria-label","subpatternInput","clearButton","length","addingRow","addButton","patternInput","htmlFor","min","max","wordsInput","checked","current","click","ref","results","paddingTop","borderTop","resultsSection","table","borderCollapse","headerCell","tableBody","paddingBottom","dataCell","borderRight","stats","statsText","sharedResultsStyles","toLocaleString","maxWords","filteredWords","filtered","remainingWords","remaining","output","status","includes","filterResults","filterDupes","Array","from","Set","joinedResults","prototype","join","call","newLine","trim","outText","outputText","lexemes","lexeme","definition","derivations","derivation","gloss","undefined","corpus","consonants","vowels","distinguishCase","analyzed","hovered","filterSeg","filterSyll","filterWords","categories","rewriteRules","soundChanges","lexicon","outputFormat","showDiff","showChanges","ruleReport","rewriteOutput","dataProcessor","which","derivData","frequenData","genData","lexData","morphData","treeData","Storage","localStorage","getItem","JSON","parse","this","setStorage","setItem","stringify","fileProcessor","filetype","charAt","toUpperCase","substr","file","File","filename","saveAs","saveFile","info","callback","reader","FileReader","onload","result","readAsText","genService","item","getData","bind","save","open","changeSelect","changeSubpattern","clear","add","changePattern","wordNumChange","changeNewline","changeDupes","checkErrors","generate","build","response","openFile","endsWith","SubpatternSchema","schema","String","DataSchema","of","Number","parseInt","errors","val","newData","splice","toUse","i","used","j","idDeps","deps","checkCirc","refed","sp","getSp","circ","duplicates","dupes","defed","undefed","undefSet","undefs","chooseRand","floor","random","resolveVar","letter","getSubpattern","selection","resolveOpt","option","letters","test","split","pattArr","word","patt","count","optCount","addCount","multCount","k","duplicate","whiteSpace","genInfo","Gen","onChangeInput","target","tagName","setState","prevState","slice","files","Component","notice","section","inputSection","container","categoriesInput","dataInput","textAreaSpacer","rewriteRulesInput","soundChangesInput","lexiconInput","morph","check","resultsArr","diff","different","changed","format","totalWords","unchangedWords","differentWords","total","unchanged","same","countStats","morphService","removeResults","splitRewriteRules","rewriteCats","splitCategories","rewriteChanges","splitSoundChanges","rewriteLex","unrewriteLex","applyChanges","getResults","idDiff","dataNoResults","rules","splitRules","rewriteFrom","rewriteTo","cat","RegExp","replace","cats","assignments","rwSplit","thisCat","variable","newChange","prop","hasOwnProperty","changes","splitChanges","idChar","char","thisRule","changeFrom","changeTo","context","exec","exception","rwRule","changeFromArr","changeFromID","changeToArr","changeToID","contextArr","contextID","exceptionArr","exceptionID","lex","newLex","regRule","newResults","newWord","rpfc","rptc","rpe","reg","rwOutput","rwLexicon","allErrors","concat","position","resize","wordWrap","borderWidth","visibility","minWidth","morphInfo","Morph","onMorph","onCheck","onSave","onOpen","lexemeRows","derivRow","lexemeInput","lexemeDefInput","derivationRows","derivationInput","derivationGlossInput","derivationDefInput","columnLabel","wordLabel","definitionLabel","affixLabel","glossLabel","DerivResults","outputBox","hoverAffix","unhoverAffix","term","affixGloss","hoveredGloss","onMouseOver","onMouseOut","lexGloss","newWords","outputRow","rowNumber","prefix","suffix","affixDef","hoveredDef","possible","derivService","changeInput","derive","lexemeSchema","derivationSchema","num","filter","affix","circum","attachAffix","list","randInd","randAff","deriveFromSingleBase","der","randLex","deriveFromSingleDerivation","getUniqueItem","newItem","isUnique","deriveFromAny","textTransform","fontVariant","transition","property","duration","delay","derivInfo","Deriv","idNum","corpusInput","onAnalyze","FrequenResults","twoDecimals","whichData","headerCells","dataRows","round","toFixed","all","forEach","el","filterData","d","allData","sort","b","findPercent","arr","seg","segment","percent","consPercent","vowsPercent","dataRow","Fragment","axisStyle","text","fill","line","stroke","gridStyle","barChart","yType","onMouseLeave","tickFormat","t","orientation","animation","colorType","onValueMouseOver","dataTable","tableHead","headerRow","frequenService","analyze","resultSchema","splitBySlash","newArr","indexOf","makeSubArrays","flattenArrays","toLowerCase","sortArrays","consonantsFlat","vowelsFlat","rawResults","initResults","labelAllophones","elArr","allophoneOf","fullArr","sliceAndCount","assembleData","resArr","elObj","numToRemove","frequenInfo","Frequen","datapoint","treeInfo","lexInfo","HomePanel","linkTo","panel","toolTitle","toolDescription","grid","home","siteDescription","help","DerivHelp","FrequenHelp","GenHelp","MorphHelp","TreeHelp","LexHelp","main","minHeight","path","component","Tree","Lex","Home","draggablePercent","POSITION","BOTTOM_CENTER","Flip","footer","appGhURL","copyright","Date","getFullYear","toString","getCopyrightYear","links","search","thisLen","substring","basename","rootElement","document","getElementById","hasChildNodes","ReactDOM","hydrate","render","URL","process","origin","addEventListener","fetch","headers","get","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.106338d8.chunk.js","sourcesContent":["import { toast } from 'react-toastify'\n\n// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\nexport default function register () {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          toast.info('Langua is up-to-date and loading from your cache.', {\n            autoClose: 3000,\n            className: 'toast-cached',\n            bodyClassName: 'toast-cached-body',\n            progressClassName: 'toast-cached-progress'\n          })\n          // eslint-disable-next-line\n          console.log(\n            'This web app is being served cache-first by a service worker. To learn more, visit https://goo.gl/SC7cgQ'\n          )\n        })\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl)\n      }\n    })\n  }\n}\n\nfunction registerValidSW (swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              toast.warn(\n                'An update is available; please refresh the page to load it.',\n                {\n                  autoClose: false,\n                  className: 'toast-update',\n                  bodyClassName: 'toast-update-body',\n                  progressClassName: 'toast-update-progress'\n                }\n              )\n              // eslint-disable-next-line\n              console.log(\n                'An update is available; please refresh the page to load it.'\n              )\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              toast.success(\n                'Langua has been successfully cached. You can now use it offline.',\n                {\n                  autoClose: 5000,\n                  className: 'toast-cached',\n                  bodyClassName: 'toast-cached-body',\n                  progressClassName: 'toast-cached-progress'\n                }\n              )\n              // eslint-disable-next-line\n              console.log(\n                'Langua has been successfully cached. You can now use it offline.'\n              )\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      // eslint-disable-next-line\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker (swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  window\n    .fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl)\n      }\n    })\n    .catch(() => {\n      toast.info(\n        'No internet connection found; Langua is running in offline mode.',\n        {\n          autoClose: 5000,\n          className: 'toast-offline',\n          bodyClassName: 'toast-offline-body',\n          progressClassName: 'toast-offline-progress'\n        }\n      )\n      // eslint-disable-next-line\n      console.log(\n        'No internet connection found; Langua is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister () {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister()\n    })\n  }\n}\n","// Colors based on https://tallys.github.io/color-theory/\n\nexport const complement = color => {\n  return color.rotate(180)\n}\n\nconst isCoolColor = color => {\n  return color.hue() < 310 && color.hue() > 140\n}\n\nconst isHighKeyValue = color => {\n  return color.hue() > 20 && color.hue() < 190\n}\n\nconst isHighestKeyValue = color => {\n  return color.hue() > 30 && color.hue() < 90\n}\n\nexport const harmoniousMix = (colMix, base) => {\n  if (isCoolColor(colMix)) {\n    if (isHighKeyValue(base)) {\n      return base.mix(colMix, 0.11)\n    } else {\n      return base.mix(colMix, 0.16)\n    }\n  } else {\n    if (isHighKeyValue(base)) {\n      return base.mix(colMix, 0.13)\n    } else {\n      return base.mix(colMix, 0.23)\n    }\n  }\n}\n\nexport const mixNeutral = color => {\n  if (isHighestKeyValue(color)) {\n    if (isHighKeyValue(color)) {\n      return color.mix(complement(color), 0.19)\n    } else {\n      return color.mix(complement(color), 0.13)\n    }\n  } else if (isHighKeyValue(color)) {\n    if (isHighKeyValue(complement(color))) {\n      return color.mix(complement(color), 0.31)\n    } else {\n      return color.mix(complement(color), 0.23)\n    }\n  } else {\n    if (isHighestKeyValue(complement(color))) {\n      return color.mix(complement(color), 0.31)\n    } else if (isHighKeyValue(complement(color))) {\n      return color.mix(complement(color), 0.26)\n    } else {\n      return color.mix(complement(color), 0.23)\n    }\n  }\n}\n\nexport const pickContrastOf = color => {\n  const newColor = complement(color)\n  if (color.lightness() < 0.3) {\n    newColor.lightness(newColor.lightness() + 0.86)\n  } else if (color.lightness() > 0.7) {\n    newColor.lightness(newColor.lightness() - 0.68)\n  } else {\n    if (isHighKeyValue(color)) {\n      newColor.lightness(newColor.lightness() - 0.53)\n    } else {\n      newColor.lightness(newColor.lightness() + 0.53)\n    }\n  }\n  return newColor\n}\n","import Color from 'color'\nimport { harmoniousMix, mixNeutral } from './functions'\n\nexport const mainFont = '\"Noto Sans\", Helvetica, Arial, sans-serif'\nexport const headerFont = '\"Noto Serif\", \"Palatino Linotype\", Palatino, serif'\n\n/*\n * Modular Scale\n * https://alistapart.com/article/more-meaningful-typography\n * 1rem @ 1:1.333\n * 1.1665rem @ 1:1.333\n * http://www.modularscale.com/?1,1.1665&em&1.333\n */\n\n// All sizes are given as pure numbers, so must be given the unit 'rem'\n\nexport const ratio = 4.0 / 3.0\nexport const ms1 = 1.0\nexport const ms0 = ms1 / Math.pow(ratio, 1) // 0.750\nexport const ms2 = ms1 * Math.pow(ratio, 1) // 1.333\nexport const ms3 = ms1 * Math.pow(ratio, 2) // 1.777\nexport const ms4 = ms1 * Math.pow(ratio, 3) // 2.370\nexport const ms5 = ms1 * Math.pow(ratio, 4) // 3.160\nexport const ms6 = ms1 * Math.pow(ratio, 5) // 4.214\nexport const lnht = ms2 / 2 //                 0.6665\n\n// Colors based on https://tallys.github.io/color-theory/\n\nconst bluPmy = Color('hsl(196, 100%, 50%)')\nconst ongPmy = Color('hsl(36, 100%, 50%)')\nconst redPmy = Color('hsl(0, 100%, 50%)')\n\nexport const blu = harmoniousMix(ongPmy, bluPmy).darken(0.2)\nexport const ong = harmoniousMix(bluPmy, ongPmy)\nexport const red = harmoniousMix(bluPmy, redPmy)\nexport const bluNtl = mixNeutral(blu)\nexport const ongNtl = mixNeutral(ong)\nexport const redNtl = mixNeutral(red)\nexport const white = bluNtl.grayscale().lightness(99)\nexport const black = bluNtl.grayscale().lightness(4)\n","import * as v from './variables'\n\nconst styles = {\n  '@global': {\n    '*': {\n      boxSizing: 'border-box',\n      '&:focus': {\n        outline: {\n          width: 1,\n          style: 'solid',\n          color: v.blu\n            .darken(0.15)\n            .alpha(0.3)\n            .string()\n        }\n      }\n    },\n    body: {\n      margin: 0,\n      padding: 0,\n      paddingLeft: 'calc(100vw - 100%)',\n      fontFamily: v.mainFont,\n      fontSize: `${v.ms1}rem`,\n      lineHeight: v.lnht * 2,\n      backgroundColor: v.white.string(),\n      color: v.black.string(),\n      fontKerning: 'normal',\n      fontVariantLigatures: 'common-ligatures contextual',\n      fontFeatureSettings: ['\"kern\" 1', '\"liga\" 1', '\"clig\" 1', '\"calt\" 1']\n    },\n    'h1, h2, h3, h4, h5, h6': {\n      fontFamily: v.headerFont,\n      textRendering: 'optimizeLegibility',\n      margin: {\n        top: `${v.lnht * 2 * (v.ms1 * 2)}rem`, // base line height * double base font size\n        right: '0',\n        bottom: `${v.lnht * 2 * v.ms1}rem`, // base line height * font size\n        left: '0'\n      },\n      padding: 0\n    },\n    'h1, h2': {\n      marginTop: 0\n    },\n    h1: {\n      color: v.blu.darken(0.2).string(),\n      fontSize: `${v.ms5}rem`\n    },\n    h2: {\n      color: v.blu.darken(0.1).string(),\n      fontSize: `${v.ms4}rem`\n    },\n    h3: {\n      color: v.blu.darken(0.08).string(),\n      fontSize: `${v.ms3}rem`\n    },\n    h4: {\n      color: v.blu.darken(0.05).string(),\n      fontSize: `${v.ms2}rem`\n    },\n    h5: {\n      color: v.blu.darken(0.02).string(),\n      fontSize: `${v.ms1}rem`\n    },\n    h6: {\n      color: v.blu.string(),\n      fontSize: `${v.ms0}rem`\n    },\n    p: {\n      fontSize: `${v.ms1}rem`,\n      margin: {\n        top: '0',\n        right: '0',\n        bottom: `${v.lnht * 2 * v.ms1}rem`, // base line height * base font size\n        left: '0'\n      },\n      padding: 0\n    },\n    a: {\n      '&:link, &:visited, &:hover, &:active': {\n        textDecoration: 'underline',\n        TextDecorationSkipInk: 'auto'\n      },\n      '&:link, &:visited': {\n        color: v.blu.string()\n      },\n      '&:hover': {\n        color: v.blu.darken(0.15).string()\n      },\n      '&:active': {\n        color: v.ong.string()\n      },\n      '&.active': {\n        '&:link, &:visited': {\n          color: v.ong.string()\n        },\n        '&:hover': {\n          color: v.ong.darken(0.15).string()\n        },\n        '&:active': {\n          color: v.ong.darken(0.25).string()\n        }\n      }\n    },\n    input: {\n      fontFamily: v.mainFont,\n      fontSize: `${v.ms1}rem`,\n      boxSizing: 'border-box',\n      height: `${3 * v.lnht}rem`,\n      lineHeight: v.lnht * 2,\n      border: {\n        width: 1,\n        style: 'solid',\n        color: v.white.darken(0.3).string()\n      },\n      backgroundColor: 'white',\n      '&[type=checkbox], &[type=radio]': {\n        height: 'inherit',\n        verticalAlign: 'baseline'\n      }\n    },\n    textarea: {\n      fontFamily: v.mainFont,\n      fontSize: `${v.ms1}rem`,\n      boxSizing: 'border-box',\n      height: `${6 * v.lnht}rem`,\n      lineHeight: v.lnht * 2,\n      overflow: 'auto',\n      border: {\n        width: 1,\n        style: 'solid',\n        color: v.white.darken(0.3).string()\n      },\n      backgroundColor: 'white'\n    },\n    select: {\n      fontFamily: v.mainFont,\n      fontSize: `${v.ms1}rem`,\n      boxSizing: 'border-box',\n      height: `${3 * v.lnht}rem`,\n      lineHeight: v.lnht * 2,\n      border: {\n        width: 1,\n        style: 'solid',\n        color: v.white.darken(0.3).string()\n      },\n      backgroundColor: 'white'\n    },\n    button: {\n      fontFamily: v.mainFont,\n      fontSize: `${v.ms1}rem`,\n      cursor: 'pointer',\n      border: {\n        width: '1px',\n        style: 'solid',\n        color: v.blu\n          .darken(0.15)\n          .alpha(0.3)\n          .string()\n      },\n      background: 'none',\n      backgroundColor: v.white.darken(0.05).string(),\n      padding: `${v.lnht}rem`,\n      borderRadius: '3px',\n      '&:hover': {\n        backgroundColor: v.white.darken(0.1).string()\n      },\n      '&:active': {\n        backgroundColor: v.white.darken(0.15).string(),\n        boxShadow: {\n          inset: 'inset',\n          x: 0,\n          y: 0,\n          blur: `${v.lnht}rem`,\n          spread: null,\n          color: v.white.darken(0.25).string()\n        }\n      }\n    },\n    optgroup: {\n      fontFamily: v.mainFont,\n      fontSize: `${v.ms1}rem`\n    },\n    'code, kbd, samp, var': {\n      fontFamily: 'monospace, monospace',\n      backgroundColor: v.white.darken(0.1).string(),\n      color: v.black.lighten(5).string(),\n      padding: {\n        top: `${v.lnht / 7}rem`,\n        right: `${v.lnht / 2}rem`,\n        bottom: `${v.lnht / 7}rem`,\n        left: `${v.lnht / 2}rem`\n      }\n    },\n    '.toast-update, .toast-unsaved, .toast-unopened': {\n      backgroundColor: v.red\n        .darken(0.1)\n        .alpha(0.9)\n        .string()\n    },\n    '.toast-cached, .toast-opened': {\n      backgroundColor: v.blu\n        .darken(0.1)\n        .alpha(0.9)\n        .string()\n    },\n    '.toast-offline': {\n      backgroundColor: v.ong\n        .darken(0.1)\n        .alpha(0.9)\n        .string()\n    }\n  }\n}\n\nexport default styles\n","import * as v from './variables'\n\nconst styles = {\n  app: {\n    width: `${v.ms1 * Math.pow(v.ratio, 15)}rem`, // 74.551rem; 1192.8px\n    maxWidth: '92%',\n    marginLeft: 'auto',\n    marginRight: 'auto'\n  }\n}\n\nexport default styles\n","import * as v from '../../styles/variables'\n\nconst styles = {\n  header: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'baseline',\n    borderBottom: {\n      width: '1px',\n      style: 'solid',\n      color: v.blu.darken(0.15).string()\n    },\n    padding: {\n      top: `${2 * v.lnht}rem`,\n      right: 0,\n      bottom: `${2 * v.lnht}rem`,\n      left: 0\n    },\n    '& a, & a:link, & a:visited, & a:hover, & a:active': {\n      textDecoration: 'none'\n    }\n  },\n  titleArea: {\n    order: 0\n  },\n  siteTitle: {\n    marginBottom: `${v.lnht}rem`\n  },\n  titleLink: {\n    '&:link, &:visited, &:hover, &:active': {\n      color: v.blu.darken(0.3).string()\n    }\n  },\n  siteSubtitle: {\n    fontStyle: 'italic'\n  },\n  nav: {\n    order: 1,\n    flexGrow: 1\n  },\n  menu: {\n    textAlign: 'right',\n    fontFamily: v.headerFont\n  },\n  navLink: {\n    display: 'inline-block',\n    margin: [[0, `${v.lnht * 2}rem`]],\n    padding: 0,\n    fontSize: `${v.ms2}rem`,\n    lineHeight: `${v.lnht * 2}rem`\n  },\n  disabled: {\n    opacity: 0.5,\n    '&:hover': {\n      opacity: 0.8\n    }\n  }\n}\n\nexport default styles\n","import React from 'react'\nimport { Link, NavLink } from 'react-router-dom'\nimport injectSheet from 'react-jss'\nimport classNames from 'classnames'\nimport PropTypes from 'prop-types'\n\nimport styles from './styles'\n\nconst siteTitle = 'Langua'\nconst siteSubtitle = 'A suite of language tools'\n\nconst Header = props => (\n  <header>\n    <div className={props.classes.header}>\n      <div className={props.classes.titleArea}>\n        <h1 className={props.classes.siteTitle}>\n          <Link to='/' className={props.classes.titleLink}>\n            {siteTitle}\n          </Link>\n        </h1>\n        <p className={props.classes.siteSubtitle}>{siteSubtitle}</p>\n      </div>\n      <nav className={props.classes.nav}>\n        <ul className={props.classes.menu}>\n          <li className={props.classes.navLink}>\n            <NavLink to='/gen' activeClassName='active'>\n              Gen\n            </NavLink>\n          </li>\n          <li\n            className={classNames(\n              props.classes.navLink,\n              props.classes.disabled\n            )}\n          >\n            <NavLink to='/morph' activeClassName='active'>\n              Morph\n            </NavLink>\n          </li>\n          <li className={props.classes.navLink}>\n            <NavLink to='/deriv' activeClassName='active'>\n              Deriv\n            </NavLink>\n          </li>\n          <li className={props.classes.navLink}>\n            <NavLink to='/frequen' activeClassName='active'>\n              Frequen\n            </NavLink>\n          </li>\n          <li\n            className={classNames(\n              props.classes.navLink,\n              props.classes.disabled\n            )}\n          >\n            <NavLink to='/tree' activeClassName='active'>\n              Tree\n            </NavLink>\n          </li>\n          <li\n            className={classNames(\n              props.classes.navLink,\n              props.classes.disabled\n            )}\n          >\n            <NavLink to='/lex' activeClassName='active'>\n              Lex\n            </NavLink>\n          </li>\n        </ul>\n      </nav>\n    </div>\n  </header>\n)\n\nHeader.propTypes = {\n  classes: PropTypes.object\n}\n\nexport default injectSheet(styles)(Header)\n","import * as v from '../../styles/variables'\n\nconst styles = {\n  btn: {\n    border: {\n      width: 1,\n      style: 'solid',\n      color: v.blu\n        .darken(0.6)\n        .alpha(0.3)\n        .string()\n    },\n    background: 'none',\n    backgroundColor: v.white.darken(0.05).string(),\n    color: v.blu.string(),\n    fontWeight: 'bold',\n    padding: `${v.lnht}rem`,\n    borderRadius: 3,\n    '&:hover': {\n      backgroundColor: v.white.darken(0.1).string(),\n      color: v.blu.darken(0.15).string()\n    },\n    '&:active': {\n      backgroundColor: v.white.darken(0.2).string(),\n      boxShadow: {\n        inset: 'inset',\n        x: 0,\n        y: 0,\n        blur: `${v.lnht}rem`,\n        spread: null,\n        color: v.white.darken(0.3).string()\n      },\n      color: v.ong.string()\n    }\n  },\n  neutral: {\n    color: v.white.string(),\n    backgroundColor: v.ong.darken(0.15).string(),\n    border: {\n      width: 1,\n      style: 'solid',\n      color: v.ong\n        .darken(0.7)\n        .alpha(0.3)\n        .string()\n    },\n    '&:hover': {\n      backgroundColor: v.ong.darken(0.25).string(),\n      color: v.white.string()\n    },\n    '&:active': {\n      backgroundColor: v.ongNtl.darken(0.25).string(),\n      boxShadow: {\n        inset: 'inset',\n        x: 0,\n        y: 0,\n        blur: `${v.lnht}rem`,\n        spread: null,\n        color: v.ongNtl.darken(0.35).string()\n      },\n      color: v.white.string()\n    }\n  },\n  success: {\n    color: v.white.string(),\n    backgroundColor: v.blu.string(),\n    '&:hover': {\n      backgroundColor: v.blu.darken(0.1).string(),\n      color: v.white.string()\n    },\n    '&:active': {\n      backgroundColor: v.bluNtl.darken(0.1).string(),\n      boxShadow: {\n        inset: 'inset',\n        x: 0,\n        y: 0,\n        blur: `${v.lnht}rem`,\n        spread: null,\n        color: v.bluNtl.darken(0.2).string()\n      },\n      color: v.white.string()\n    }\n  },\n  danger: {\n    color: v.white.string(),\n    backgroundColor: v.red.darken(0.1).string(),\n    border: {\n      width: 1,\n      style: 'solid',\n      color: v.red\n        .darken(0.65)\n        .alpha(0.3)\n        .string()\n    },\n    '&:hover': {\n      backgroundColor: v.red.darken(0.2).string(),\n      color: v.white.string()\n    },\n    '&:active': {\n      backgroundColor: v.redNtl.darken(0.2).string(),\n      boxShadow: {\n        inset: 'inset',\n        x: 0,\n        y: 0,\n        blur: `${v.lnht}rem`,\n        spread: null,\n        color: v.redNtl.darken(0.3).string()\n      },\n      color: v.white.string()\n    }\n  },\n  buttonLink: {\n    float: 'right'\n  },\n  small: {\n    fontSize: `${v.ms0}rem`,\n    padding: `${v.ms1 / 2}rem`\n  }\n}\n\nexport default styles\n","import React from 'react'\nimport injectSheet from 'react-jss'\nimport classNames from 'classnames'\nimport PropTypes from 'prop-types'\n\nimport styles from './styles'\n\nconst Button = props => {\n  const filterClass = (ver, classes) => {\n    if (ver === 'neutral') {\n      return classes.neutral\n    } else if (ver === 'success') {\n      return classes.success\n    } else if (ver === 'danger') {\n      return classes.danger\n    } else {\n      return null\n    }\n  }\n\n  return (\n    <button\n      onClick={props.onClick}\n      id={props.id}\n      className={classNames(\n        props.classes.btn,\n        filterClass(props.ver, props.classes),\n        props.classes[props.addClass]\n      )}\n      type={props.type || 'button'}\n      role={props.role || 'button'}\n    >\n      {props.children}\n    </button>\n  )\n}\n\nButton.propTypes = {\n  ver: PropTypes.oneOf(['neutral', 'success', 'danger']),\n  onClick: PropTypes.func,\n  id: PropTypes.string,\n  addClass: PropTypes.string,\n  type: PropTypes.string,\n  role: PropTypes.string,\n  classes: PropTypes.object,\n  children: PropTypes.string\n}\n\nexport default injectSheet(styles)(Button)\n","import React from 'react'\nimport { withRouter } from 'react-router'\nimport PropTypes from 'prop-types'\n\nimport Button from '.'\n\nconst ButtonLink = props => {\n  const onClick = e => {\n    e.preventDefault()\n    props.history.push(props.route)\n  }\n\n  return (\n    <Button\n      ver={props.buttonType}\n      addClass={'buttonLink'}\n      onClick={onClick}\n      role='link'\n    >\n      {props.children}\n    </Button>\n  )\n}\n\nButtonLink.propTypes = {\n  buttonType: PropTypes.string,\n  children: PropTypes.string,\n  history: PropTypes.object,\n  route: PropTypes.string\n}\n\nexport default withRouter(ButtonLink)\n","const styles = {}\n\nexport default styles\n","import React from 'react'\nimport { Helmet } from 'react-helmet'\nimport injectSheet from 'react-jss'\nimport PropTypes from 'prop-types'\n\nimport ButtonLink from '../../components/Button/Link'\n\nimport styles from './styles'\n\nimport { canonical, siteTitle } from '../../App'\n\nconst Tool = props => (\n  <div className={props.classes.tool}>\n    <Helmet>\n      <title>\n        {siteTitle}\n        {props.toolInfo.title}\n      </title>\n      <meta\n        name='description'\n        content={`${siteTitle}${props.toolInfo.title} ${\n          props.toolInfo.description\n        }`}\n      />\n      <link rel='canonical' href={`${canonical}${props.toolInfo.link}/`} />\n    </Helmet>\n    <ButtonLink route={`/${props.toolInfo.link}/help`}>Help</ButtonLink>\n    <h2 className='toolTitle'>\n      {siteTitle}\n      {props.toolInfo.title}\n    </h2>\n    {props.children}\n  </div>\n)\n\nTool.propTypes = {\n  classes: PropTypes.object,\n  toolInfo: PropTypes.objectOf(PropTypes.string).isRequired,\n  children: PropTypes.oneOfType([\n    PropTypes.element,\n    PropTypes.string,\n    PropTypes.arrayOf(\n      PropTypes.oneOfType([PropTypes.element, PropTypes.string])\n    )\n  ])\n}\n\nexport default injectSheet(styles)(Tool)\n","import * as v from '../../styles/variables'\n\nconst styles = {\n  form: {\n    '& select, input': {\n      padding: 1,\n      margin: 1\n    },\n    '& select': {\n      textAlign: 'center'\n    },\n    '& label': {\n      marginLeft: `${v.lnht}rem`,\n      marginRight: `${v.lnht}rem`,\n      verticalAlign: 'middle'\n    }\n  }\n}\n\nexport default styles\n","import React from 'react'\nimport injectSheet from 'react-jss'\nimport PropTypes from 'prop-types'\n\nimport styles from './formStyles'\n\nconst Form = props => (\n  <form className={props.classes.form}>{props.children}</form>\n)\n\nForm.propTypes = {\n  classes: PropTypes.object,\n  children: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.element,\n    PropTypes.arrayOf(\n      PropTypes.oneOfType([PropTypes.string, PropTypes.element])\n    )\n  ])\n}\n\nexport default injectSheet(styles)(Form)\n","import * as v from '../../styles/variables'\n\nconst styles = {\n  sectionTitle: {\n    margin: 0\n  },\n  part: {\n    marginTop: `${v.lnht}rem`\n  },\n  hidden: {\n    display: 'none'\n  }\n}\n\nexport default styles\n","import * as v from '../../styles/variables'\n\nconst styles = {\n  control: {\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'baseline',\n    alignContent: 'space-between',\n    flexWrap: 'wrap'\n  },\n  controlLeft: {\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'baseline',\n    alignContent: 'space-between',\n    flexWrap: 'wrap'\n  },\n  controlRight: {\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'baseline',\n    alignContent: 'space-between'\n  },\n  controlPiece: {\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'baseline',\n    alignContent: 'space-between',\n    margin: `${v.lnht}rem`,\n    verticalAlign: 'middle'\n  }\n}\n\nexport default styles\n","import React from 'react'\nimport injectSheet from 'react-jss'\nimport classNames from 'classnames'\nimport PropTypes from 'prop-types'\n\nimport styles from './styles'\n\nconst Control = props =>\n  props.addedClasses ? (\n    <div className={classNames(props.classes.control, props.addedClasses)}>\n      {props.children}\n    </div>\n  ) : (\n    <div className={props.classes.control}>{props.children}</div>\n  )\n\nControl.propTypes = {\n  classes: PropTypes.object,\n  addedClasses: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.arrayOf(PropTypes.string)\n  ]),\n  children: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.element,\n    PropTypes.arrayOf(\n      PropTypes.oneOfType([PropTypes.string, PropTypes.element])\n    )\n  ])\n}\n\nexport default injectSheet(styles)(Control)\n","import React from 'react'\nimport injectSheet from 'react-jss'\nimport classNames from 'classnames'\nimport PropTypes from 'prop-types'\n\nimport styles from './styles'\n\nconst ControlSide = props => {\n  if (props.side === 'left') {\n    return props.addedClasses ? (\n      <div\n        className={classNames(props.classes.controlLeft, props.addedClasses)}\n      >\n        {props.children}\n      </div>\n    ) : (\n      <div className={props.classes.controlLeft}>{props.children}</div>\n    )\n  } else {\n    return props.addedClasses ? (\n      <div\n        className={classNames(props.classes.controlRight, props.addedClasses)}\n      >\n        {props.children}\n      </div>\n    ) : (\n      <div className={props.classes.controlRight}>{props.children}</div>\n    )\n  }\n}\n\nControlSide.propTypes = {\n  classes: PropTypes.object,\n  side: PropTypes.oneOf(['left', 'right']),\n  addedClasses: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.arrayOf(PropTypes.string)\n  ]),\n  children: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.element,\n    PropTypes.arrayOf(\n      PropTypes.oneOfType([PropTypes.string, PropTypes.element])\n    )\n  ])\n}\n\nexport default injectSheet(styles)(ControlSide)\n","import React from 'react'\nimport injectSheet from 'react-jss'\nimport classNames from 'classnames'\nimport PropTypes from 'prop-types'\n\nimport styles from './styles'\n\nconst ControlPiece = props =>\n  props.addedClasses ? (\n    <div className={classNames(props.classes.controlPiece, props.addedClasses)}>\n      {props.children}\n    </div>\n  ) : (\n    <div className={props.classes.controlPiece}>{props.children}</div>\n  )\n\nControlPiece.propTypes = {\n  classes: PropTypes.object,\n  addedClasses: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.arrayOf(PropTypes.string)\n  ]),\n  children: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.element,\n    PropTypes.arrayOf(\n      PropTypes.oneOfType([PropTypes.string, PropTypes.element])\n    )\n  ])\n}\n\nexport default injectSheet(styles)(ControlPiece)\n","export const defData = {\n  subpatterns: [\n    {\n      selected: 'V',\n      subpattern: 'a/e/i/o/u'\n    },\n    {\n      selected: 'C',\n      subpattern: 'p/t/k/b/d/g/s/m/n/l/r'\n    },\n    {\n      selected: 'N',\n      subpattern: 'm/n'\n    }\n  ],\n  pattern: 'V/CV/CVN/CVCV/CVCVN',\n  words: 100,\n  newline: false,\n  filterdupes: false\n}\n\nexport const vars = [\n  'A',\n  'B',\n  'C',\n  'D',\n  'E',\n  'F',\n  'G',\n  'H',\n  'I',\n  'J',\n  'K',\n  'L',\n  'M',\n  'N',\n  'O',\n  'P',\n  'Q',\n  'R',\n  'S',\n  'T',\n  'U',\n  'V',\n  'W',\n  'X',\n  'Y',\n  'Z'\n]\n","import React from 'react'\nimport injectSheet from 'react-jss'\nimport classNames from 'classnames'\nimport PropTypes from 'prop-types'\n\nimport Button from '../../components/Button'\nimport Form from '../../components/Form'\nimport sharedFormStyles from '../../components/Form/sharedFormStyles'\nimport Control from '../../components/Control'\nimport ControlSide from '../../components/Control/Side'\nimport ControlPiece from '../../components/Control/Piece'\n\nimport { vars } from '../../data/gen'\n\nconst GenForm = props => {\n  const filePicker = React.createRef()\n\n  const selectOptions = vars.map((variab, index) => (\n    <option key={index} value={variab}>\n      {variab}\n    </option>\n  ))\n\n  const subpatternRows = props.data.subpatterns.map((subpattern, index) => (\n    <div key={index} className={props.styles.subpsRow}>\n      <select\n        id={`v${index}`}\n        name={`v${index}`}\n        value={subpattern.selected}\n        onChange={props.change}\n        className={props.styles.select}\n        aria-label={`Variable name for subpattern ${index}`}\n      >\n        {selectOptions}\n      </select>\n      <input\n        type='text'\n        id={`p${index}`}\n        name={`p${index}`}\n        className={props.styles.subpatternInput}\n        value={subpattern.subpattern}\n        onChange={props.change}\n        aria-label={`Subpattern ${index}`}\n      />\n      <div className={props.styles.clearButton}>\n        <Button\n          id={`c${index}`}\n          onClick={props.change}\n          ver='danger'\n          addClass='small'\n          type='button'\n          aria-label={`Delete subpattern ${index}`}\n        >\n          Delete\n        </Button>\n      </div>\n    </div>\n  ))\n\n  const addButton = () => {\n    if (props.data.subpatterns.length < vars.length) {\n      return (\n        <div className={props.styles.addingRow}>\n          <Button\n            onClick={props.change}\n            id='add'\n            ver='success'\n            addClass='small'\n            type='button'\n            aria-label='Add a new subpattern'\n          >\n            Add\n          </Button>\n        </div>\n      )\n    }\n  }\n\n  const invokeFilePicker = e => {\n    e.preventDefault()\n    filePicker.current.value = ''\n    filePicker.current.click()\n  }\n\n  return (\n    <Form>\n      <div className={classNames(props.styles.subpatterns, props.classes.part)}>\n        <h5 className={props.classes.sectionTitle}>Subpatterns</h5>\n        {subpatternRows}\n        {addButton()}\n      </div>\n      <div className={classNames(props.styles.pattern, props.classes.part)}>\n        <h5 className={props.classes.sectionTitle}>Pattern</h5>\n        <input\n          type='text'\n          id='pattern'\n          name='pattern'\n          className={props.styles.patternInput}\n          value={props.data.pattern}\n          onChange={props.change}\n          aria-label='Pattern'\n        />\n      </div>\n      <Control addedClasses={props.classes.part}>\n        <ControlSide side='left'>\n          <ControlPiece>\n            <Button\n              id='generate'\n              onClick={props.change}\n              type='submit'\n              ver='neutral'\n            >\n              Generate\n            </Button>\n          </ControlPiece>\n          <ControlPiece>\n            <label htmlFor='words'>words:</label>\n            <input\n              type='number'\n              id='words'\n              name='words'\n              min='1'\n              max='9999'\n              className={props.styles.wordsInput}\n              value={props.data.words}\n              onChange={props.change}\n              aria-label='Number of words to generate'\n            />\n          </ControlPiece>\n          <ControlPiece>\n            <label>\n              <input\n                type='checkbox'\n                id='newline'\n                name='options'\n                value='newline'\n                checked={props.data.newline}\n                onChange={props.change}\n              />{' '}\n              new line each\n            </label>\n          </ControlPiece>\n          <ControlPiece>\n            <label>\n              <input\n                type='checkbox'\n                id='filterdupes'\n                name='options'\n                value='filterdupes'\n                checked={props.data.filterdupes}\n                onChange={props.change}\n              />{' '}\n              filter duplicates\n            </label>\n          </ControlPiece>\n        </ControlSide>\n        <ControlSide side='right'>\n          <ControlPiece>\n            <Button\n              id='save'\n              ver='success'\n              onClick={props.change}\n              type='button'\n            >\n              Save\n            </Button>\n          </ControlPiece>\n          <ControlPiece>\n            <Button id='open' onClick={invokeFilePicker} type='button'>\n              Open\n            </Button>\n            <input\n              id='file'\n              name='file'\n              className={props.classes.hidden}\n              type='file'\n              ref={filePicker}\n              onChange={props.change}\n            />\n          </ControlPiece>\n        </ControlSide>\n      </Control>\n    </Form>\n  )\n}\n\nGenForm.propTypes = {\n  classes: PropTypes.object,\n  styles: PropTypes.object,\n  data: PropTypes.shape({\n    subpatterns: PropTypes.arrayOf(\n      PropTypes.shape({\n        selected: PropTypes.string.isRequired,\n        subpattern: PropTypes.string.isRequired\n      })\n    ).isRequired,\n    pattern: PropTypes.string.isRequired,\n    words: PropTypes.number.isRequired,\n    newline: PropTypes.bool.isRequired,\n    filterdupes: PropTypes.bool.isRequired\n  }).isRequired,\n  change: PropTypes.func.isRequired\n}\n\nexport default injectSheet(sharedFormStyles)(GenForm)\n","import * as v from '../../styles/variables'\n\nconst styles = {\n  results: {\n    marginTop: `${v.lnht}rem`,\n    paddingTop: `${v.lnht}rem`,\n    borderTop: {\n      width: 1,\n      style: 'dotted',\n      color: v.bluNtl.string()\n    }\n  }\n}\n\nexport default styles\n","import React from 'react'\nimport injectSheet from 'react-jss'\nimport PropTypes from 'prop-types'\n\nimport styles from './resultsStyles'\n\nconst Results = props => (\n  <div className={props.classes.results}>{props.children}</div>\n)\n\nResults.propTypes = {\n  classes: PropTypes.object,\n  children: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.element,\n    PropTypes.arrayOf(\n      PropTypes.oneOfType([PropTypes.string, PropTypes.element])\n    )\n  ])\n}\n\nexport default injectSheet(styles)(Results)\n","import * as v from '../../styles/variables'\n\nconst styles = {\n  resultsSection: {\n    marginTop: `${v.ms2}rem`,\n    marginBottom: `${v.ms2}rem`\n  },\n  error: {\n    color: v.red.string()\n  },\n  table: {\n    width: '100%',\n    borderCollapse: 'collapse',\n    border: {\n      width: 1,\n      style: 'dotted',\n      color: v.ong.string()\n    }\n  },\n  headerCell: {\n    padding: `${v.lnht}rem`,\n    textAlign: 'center',\n    backgroundColor: v.ong.string(),\n    borderBottom: {\n      width: 1,\n      style: 'dotted',\n      color: v.ong.string()\n    }\n  },\n  tableBody: {\n    paddingTop: `${v.lnht}rem`,\n    paddingBottom: `${v.lnht}rem`\n  },\n  dataCell: {\n    borderRight: {\n      width: 1,\n      style: 'dotted',\n      color: v.ong.string()\n    },\n    '&:last-child': {\n      borderRight: 'none'\n    },\n    padding: {\n      top: 0,\n      right: `${v.lnht}rem`,\n      bottom: 0,\n      left: `${v.lnht}rem`\n    },\n    textAlign: 'center'\n  },\n  stats: {\n    paddingTop: `${v.lnht}rem`,\n    borderTop: {\n      width: 1,\n      style: 'dotted',\n      color: v.bluNtl.string()\n    }\n  },\n  statsText: {\n    fontSize: `${v.ms0}rem`,\n    fontStyle: 'italic'\n  }\n}\n\nexport default styles\n","import React from 'react'\nimport injectSheet from 'react-jss'\nimport PropTypes from 'prop-types'\n\nimport Results from '../../components/Results'\nimport sharedResultsStyles from '../../components/Results/sharedResultsStyles'\n\nconst GenResults = props => {\n  const words = props.stats.words.toLocaleString()\n  const maxWords = props.stats.maxWords.toLocaleString()\n  const filteredWords = props.stats.filtered.toLocaleString()\n  const remainingWords = props.stats.remaining.toLocaleString()\n\n  const outputText = styles => {\n    const filterResults = props.filterDupes\n      ? Array.from(new Set(props.results))\n      : props.results\n    const joinedResults = Array.prototype.join\n      .call(filterResults, `${props.newLine ? '\\n' : ' '}`)\n      .trim()\n\n    return <p className={styles.outText}>{joinedResults}</p>\n  }\n\n  const errorText = classes => {\n    if (props.status.includes('ok')) {\n      return null\n    } else {\n      return props.status.map((error, index) => (\n        <p key={index} className={classes.error}>\n          {error}\n        </p>\n      ))\n    }\n  }\n\n  const statsText = () => {\n    if (props.filterDupes) {\n      return `words: ${remainingWords} (${filteredWords} filtered out); maximum different words: ${maxWords}`\n    } else {\n      return `words: ${words}; maximum different words: ${maxWords}`\n    }\n  }\n\n  return (\n    <Results>\n      <div className={props.styles.output}>\n        {errorText(props.classes)}\n        {outputText(props.styles)}\n      </div>\n      <div className={props.classes.stats}>\n        <p className={props.classes.statsText}>{statsText()}</p>\n      </div>\n    </Results>\n  )\n}\n\nGenResults.propTypes = {\n  classes: PropTypes.object,\n  styles: PropTypes.object,\n  newLine: PropTypes.bool.isRequired,\n  filterDupes: PropTypes.bool.isRequired,\n  status: PropTypes.arrayOf(PropTypes.string).isRequired,\n  results: PropTypes.arrayOf(PropTypes.string).isRequired,\n  stats: PropTypes.shape({\n    words: PropTypes.number.isRequired,\n    maxWords: PropTypes.number.isRequired,\n    filtered: PropTypes.number.isRequired,\n    remaining: PropTypes.number.isRequired\n  }).isRequired\n}\n\nexport default injectSheet(sharedResultsStyles)(GenResults)\n","export const defData = {\n  words: 5,\n  type: 'any',\n  lexemes: [\n    {\n      lexeme: 'nzi',\n      definition: 'tree'\n    },\n    {\n      lexeme: 'ilu',\n      definition: 'flower'\n    },\n    {\n      lexeme: 'ru',\n      definition: 'person'\n    },\n    {\n      lexeme: 'kwərə',\n      definition: 'goat'\n    },\n    {\n      lexeme: 'lɛtsi',\n      definition: 'sword'\n    }\n  ],\n  derivations: [\n    {\n      derivation: '-vo',\n      gloss: 'person',\n      definition:\n        'Creates a noun referring to a person associated with the base.'\n    },\n    {\n      derivation: '-lu',\n      gloss: 'place',\n      definition: 'Creates a noun denoting the location of the base.'\n    },\n    {\n      derivation: 'ña-',\n      gloss: 'abstract',\n      definition: 'Creates an abstract noun.'\n    },\n    {\n      derivation: 'k-sa',\n      gloss: 'collective',\n      definition: 'Creates a noun referring to a collection of bases.'\n    }\n  ],\n  results: undefined\n}\n","export const defData = {\n  corpus:\n    'Nzɔ de’áxa Tsənaxa, ño lo sɛtsa’ɔk, ño lo de’áxa u Kasaga, ño lo mɛya ayru Tol o Əbe kwə, sa nzɔ xa mpaskale: Steyə rabɛ lu ñire lu mvunə poxe o lu pɛlɔ ah lo mɛwɛ axe, maxə ɔra latsi əbɔwə səyo.',\n  consonants:\n    'b/d/f/g/k/kw/l/m/mp/mv/n/nt/nts/nz/ñ/ŋk/ŋkw/p/r/s/t/ts/v/w/x,h/y/’',\n  vowels: 'a,á/ɛ,ɛ́/e,é/ə,ə́/i,í/ɔ,ɔ́/o,ó/u,ú',\n  distinguishCase: false,\n  analyzed: false,\n  results: undefined,\n  hovered: undefined,\n  filterSeg: 'all',\n  filterSyll: 'all',\n  filterWords: 'all'\n}\n","export const defData = {\n  categories: [\n    'V=ieaou',\n    'L=īēāōū',\n    'C=ptcqbdgmnlrhs',\n    'F=ie',\n    'B=ou',\n    'S=ptc',\n    'Z=bdg'\n  ],\n  rewriteRules: ['lh=lj'],\n  soundChanges: [\n    '[sm]//_#',\n    'i/j/_V',\n    'L/V/_',\n    'e//Vr_#',\n    'v//V_V',\n    'u/o/_#',\n    'gn/nh/_',\n    'S/Z/V_V',\n    'c/i/F_t',\n    'c/u/B_t',\n    'p//V_t',\n    'ii/i/_',\n    'e//C_rV'\n  ],\n  lexicon: [\n    'lector',\n    'doctor',\n    'focus',\n    'jocus',\n    'districtus',\n    'cīvitatem',\n    'adoptare',\n    'opera',\n    'secundus',\n    'fīliam',\n    'pōntem'\n  ],\n  outputFormat: 'oo',\n  showDiff: true,\n  showChanges: true,\n  ruleReport: true,\n  rewriteOutput: true,\n  results: undefined\n}\n","import { defData as derivData } from '../data/deriv'\nimport { defData as frequenData } from '../data/frequen'\nimport { defData as genData } from '../data/gen'\nimport { defData as lexData } from '../data/lex'\nimport { defData as morphData } from '../data/morph'\nimport { defData as treeData } from '../data/tree'\n\nclass DataProcessor {\n  defData (which) {\n    switch (which) {\n      case 'deriv':\n        return derivData\n      case 'frequen':\n        return frequenData\n      case 'gen':\n        return genData\n      case 'lex':\n        return lexData\n      case 'morph':\n        return morphData\n      case 'tree':\n        return treeData\n      default:\n    }\n  }\n\n  getData (which) {\n    let data\n\n    // Check if there's storage access\n    if (typeof Storage !== 'undefined') {\n      // If we can access storage, check if there is data in storage.\n      if (window.localStorage.getItem(which)) {\n        // If there's data in storage, pull it\n        data = JSON.parse(window.localStorage.getItem(which))\n      } else {\n        // If there's not data in storage, pull the default data\n        data = this.defData(which)\n        // Store the default data in storage\n        this.setStorage(data, which)\n      }\n    } else {\n      // If we can't access storage, use the default data\n      data = this.defData(which)\n    }\n\n    return data\n  }\n\n  setStorage (data, which) {\n    if (typeof Storage !== 'undefined') {\n      window.localStorage.setItem(which, JSON.stringify(data))\n    }\n  }\n}\n\nconst dataProcessor = new DataProcessor()\n\nexport default dataProcessor\n","import { toast } from 'react-toastify'\nimport saveAs from 'file-saver'\n\nimport dataProcessor from './dataProcessor'\n\nclass FileProcessor {\n  filetype (which) {\n    switch (which) {\n      case 'deriv':\n        return '.lngd'\n      case 'frequen':\n        return '.lngf'\n      case 'gen':\n        return '.lngg'\n      case 'lex':\n        return '.lngl'\n      case 'morph':\n        return '.lngm'\n      case 'tree':\n        return '.lngt'\n      default:\n        return '.lnga'\n    }\n  }\n\n  filename (which, filetype) {\n    return `Langua${which.charAt(0).toUpperCase()}${which.substr(1)}${filetype}`\n  }\n\n  saveFile (data, which) {\n    const file = new window.File(\n      [JSON.stringify(data, null, 2)],\n      this.filename(which, this.filetype(which)),\n      { type: 'application/json' }\n    )\n\n    saveAs(file)\n  }\n\n  save (data, which) {\n    // Save data to storage\n    dataProcessor.setStorage(data, which)\n    if (window.File) {\n      // If the browser has access to File, save the file locally\n      this.saveFile(data, which)\n    } else {\n      // If the browser can't access File, display a notification\n      toast.info(\n        'Your browser is unable to save files. The data has been saved to your browser’s local storage.',\n        {\n          autoClose: 5000,\n          className: 'toast-unsaved',\n          bodyClassName: 'toast-unsaved-body',\n          progressClassName: 'toast-unsaved-progress'\n        }\n      )\n    }\n  }\n\n  openFile (file, callback) {\n    const reader = new window.FileReader()\n\n    reader.onload = () => {\n      callback(reader.result)\n    }\n\n    reader.readAsText(file)\n  }\n}\n\nconst fileProcessor = new FileProcessor()\n\nexport default fileProcessor\n","import { toast } from 'react-toastify'\nimport schema from 'js-schema'\n\nimport dataProcessor from '../../tools/dataProcessor'\nimport fileProcessor from '../../tools/fileProcessor'\n\nimport { vars } from '../../data/gen'\n\nclass GenService {\n  constructor () {\n    this.item = 'gen'\n    this.getData = this.getData.bind(this)\n    this.setStorage = this.setStorage.bind(this)\n    this.save = this.save.bind(this)\n    this.open = this.open.bind(this)\n    this.changeSelect = this.changeSelect.bind(this)\n    this.changeSubpattern = this.changeSubpattern.bind(this)\n    this.clear = this.clear.bind(this)\n    this.add = this.add.bind(this)\n    this.changePattern = this.changePattern.bind(this)\n    this.wordNumChange = this.wordNumChange.bind(this)\n    this.changeNewline = this.changeNewline.bind(this)\n    this.changeDupes = this.changeDupes.bind(this)\n    this.checkErrors = this.checkErrors.bind(this)\n    this.generate = this.generate.bind(this)\n    this.build = this.build.bind(this)\n  }\n\n  // Get the data from storage or from the default data\n  getData () {\n    return dataProcessor.getData(this.item)\n  }\n\n  // Store the current data in storage\n  setStorage (data) {\n    dataProcessor.setStorage(data, this.item)\n  }\n\n  // Save the current state to storage and generate a file\n  save (data) {\n    fileProcessor.save(data, this.item)\n  }\n\n  // Open a file and parse it to restore a saved state\n  open (file, callback) {\n    let response\n\n    const processResults = result => {\n      // If correct filetype\n      if (file.name.endsWith(fileProcessor.filetype(this.item))) {\n        // Define correct file structure\n        const SubpatternSchema = schema({\n          selected: /[A-Z]/,\n          subpattern: String\n        })\n\n        const DataSchema = schema({\n          subpatterns: Array.of(1, 24, SubpatternSchema),\n          pattern: String,\n          words: Number.min(1).max(9999),\n          newline: Boolean,\n          filterdupes: Boolean\n        })\n\n        let content = JSON.parse(result)\n\n        content.words = parseInt(content.words, 10)\n\n        if (DataSchema(content)) {\n          // If the file's content contains valid Data, load it\n          toast.success(`Data loaded from ${file.name}.`, {\n            autoClose: 5000,\n            className: 'toast-opened',\n            bodyClassName: 'toast-opened-body',\n            progressClassName: 'toast-opened-progress'\n          })\n\n          this.setStorage(content)\n\n          response = content\n        } else {\n          // If the file's content does not contain valid Data, show an error\n          toast.info(`The content of ${file.name} is invalid.`, {\n            autoClose: 5000,\n            className: 'toast-unopened',\n            bodyClassName: 'toast-unopened-body',\n            progressClassName: 'toast-unopened-progress'\n          })\n\n          // eslint-disable-next-line\n          console.error(DataSchema.errors(content))\n\n          response = false\n        }\n      } else {\n        // If incorrect filetype\n        toast.info('Wrong filetype selected.', {\n          autoClose: 5000,\n          className: 'toast-unopened',\n          bodyClassName: 'toast-unopened-body',\n          progressClassName: 'toast-unopened-progress'\n        })\n\n        response = false\n      }\n\n      callback(response)\n    }\n\n    if (window.FileReader) {\n      // If the browser has access to the File APIs, open the file\n      fileProcessor.openFile(file, processResults)\n    } else {\n      // If the browser can't access the File APIs, display a notification\n      toast.info('Your browser is unable to open files.', {\n        autoClose: 5000,\n        className: 'toast-unopened',\n        bodyClassName: 'toast-unopened-body',\n        progressClassName: 'toast-unopened-progress'\n      })\n\n      response = false\n      callback(response)\n    }\n  }\n\n  // When a Subpattern variable is changed, create a new version of state\n  changeSelect (id, val, data) {\n    let newData = JSON.parse(JSON.stringify(data))\n    newData.subpatterns[id].selected = val\n    return newData\n  }\n\n  // When a Subpattern is changed, create a new version of state\n  changeSubpattern (id, val, data) {\n    let newData = JSON.parse(JSON.stringify(data))\n    newData.subpatterns[id].subpattern = val\n    return newData\n  }\n\n  // When a Subpattern is cleared, create a new version of state\n  clear (id, data) {\n    let newData = JSON.parse(JSON.stringify(data))\n    newData.subpatterns.splice(id, 1)\n    return newData\n  }\n\n  // When a Subpattern is added, create a new version of state\n  add (data) {\n    let toUse = ''\n    let newData = JSON.parse(JSON.stringify(data))\n\n    // Identify the first unused Subpattern variable and select it\n    for (let i = 0; i < vars.length; i++) {\n      let used = false\n      for (let j = 0; j < newData.subpatterns.length; j++) {\n        if (newData.subpatterns[j].selected === vars[i]) {\n          used = true\n          break\n        } else {\n          continue\n        }\n      }\n      if (!used) {\n        toUse = vars[i]\n        break\n      } else {\n        continue\n      }\n    }\n\n    if (newData.subpatterns.length < vars.length) {\n      newData.subpatterns.push({ selected: toUse, subpattern: '' })\n    }\n\n    return newData\n  }\n\n  // When the pattern is changed, create a new version of state\n  changePattern (val, data) {\n    let newData = JSON.parse(JSON.stringify(data))\n    newData.pattern = val\n    return newData\n  }\n\n  // When the number of desired words is changed, create a new version of state\n  wordNumChange (val, data) {\n    // Limit number entry to between 1 and 9999\n    if (val < 1) {\n      val = 1\n    } else if (val > 9999) {\n      val = 9999\n    }\n\n    // Only change state if the number is between 1 and 9999\n    if (val > 0 && val < 10000) {\n      let newData = JSON.parse(JSON.stringify(data))\n      newData.words = val\n      return newData\n    } else {\n      // Otherwise, keep state the same\n      return false\n    }\n  }\n\n  // If the selection for new lines is changed, create a new version of state\n  changeNewline (checked, data) {\n    let newData = JSON.parse(JSON.stringify(data))\n    newData.newline = checked\n    return newData\n  }\n\n  // If the selection for filtering duplicates is changed, create a new version of state\n  changeDupes (checked, data) {\n    let newData = JSON.parse(JSON.stringify(data))\n    newData.filterdupes = checked\n    return newData\n  }\n\n  // Check the input for errors\n  checkErrors (data) {\n    let status = []\n\n    // Check Subpattern for circular reference\n    const getSp = selected => {\n      let sp = ''\n      for (let i = 0; i < data.subpatterns.length; i++) {\n        if (data.subpatterns[i].selected === selected) {\n          sp = data.subpatterns[i].subpattern\n          break\n        }\n      }\n      return sp\n    }\n\n    const idDeps = subpattern => {\n      let deps = []\n      for (let i = 0; i < subpattern.length; i++) {\n        if (vars.includes(subpattern[i])) {\n          deps.push(subpattern[i])\n        }\n      }\n      return Array.from(new Set(deps))\n    }\n\n    const checkCirc = (selected, refed) => {\n      const sp = getSp(selected)\n      const deps = idDeps(sp)\n      let circ = false\n\n      if (deps.length > 0) {\n        if (deps.includes(selected) || refed.includes(selected)) {\n          circ = true\n        } else {\n          let i = 0\n          refed.push(selected)\n          while (!circ && i < deps.length) {\n            circ = checkCirc(deps[i], refed)\n            i++\n          }\n        }\n      }\n\n      return circ\n    }\n\n    for (let i = 0; i < data.subpatterns.length; i++) {\n      const deps = idDeps(data.subpatterns[i].subpattern)\n      let refed = []\n\n      if (deps.length > 0) {\n        for (let j = 0; j < deps.length; j++) {\n          if (checkCirc(deps[j], refed)) {\n            status.push('The Subpatterns contain a circular reference.')\n            break\n          }\n        }\n      }\n    }\n\n    // Check for duplicate Subpattern variable names\n    let duplicates = []\n    for (let i = 0; i < data.subpatterns.length; i++) {\n      let current = data.subpatterns[i].selected\n\n      for (let j = 0; j < data.subpatterns.length; j++) {\n        if (i === j) {\n          continue\n        } else {\n          if (data.subpatterns[j].selected === current) {\n            duplicates.push(current)\n          }\n        }\n      }\n    }\n\n    duplicates = Array.from(new Set(duplicates))\n    const dupes = duplicates.join(', ')\n\n    if (duplicates.length > 1) {\n      status.push(\n        `Some Subpattern variables (${dupes}) have been used multiple times.`\n      )\n    } else if (duplicates.length === 1) {\n      status.push(\n        `The Subpattern variable ${dupes} has been used multiple times.`\n      )\n    }\n\n    // Check Pattern for undefined variable\n    let defed = []\n    for (let i = 0; i < data.subpatterns.length; i++) {\n      defed.push(data.subpatterns[i].selected)\n    }\n\n    let undefed = []\n    for (let i = 0; i < data.pattern.length; i++) {\n      if (vars.includes(data.pattern[i])) {\n        if (!defed.includes(data.pattern[i])) {\n          undefed.push(data.pattern[i])\n        }\n      }\n    }\n    for (let i = 0; i < data.subpatterns.length; i++) {\n      for (let j = 0; j < data.subpatterns[i].subpattern.length; j++) {\n        if (vars.includes(data.subpatterns[i].subpattern[j])) {\n          if (!defed.includes(data.subpatterns[i].subpattern[j])) {\n            undefed.push(data.subpatterns[i].subpattern[j])\n          }\n        }\n      }\n    }\n\n    const undefSet = Array.from(new Set(undefed))\n    const undefs = undefSet.join(', ')\n\n    if (undefSet.length > 1) {\n      // Update this status message once escaping characters is enabled\n      status.push(\n        `Some capital A–Z letters (${undefs}) were used but not defined as variables. If your intention is to include these characters as a letter in the results, a future version will allow this using escaped characters.`\n      )\n    } else if (undefSet.length === 1) {\n      status.push(\n        `The capital letter ${undefs} was used but not defined as a variable. If your intention is to include this character as a letter in the results, a future version will allow this using escaped characters.`\n      )\n    }\n\n    status = Array.from(new Set(status))\n    return status\n  }\n\n  // Start the generation process\n  generate (data) {\n    const status = this.checkErrors(data)\n    let results\n\n    if (status.length > 0) {\n      results = {\n        status: status,\n        results: [],\n        stats: {\n          words: 0,\n          maxWords: 0,\n          filtered: 0,\n          remaining: 0\n        }\n      }\n    } else {\n      results = this.build(data, ['ok'])\n    }\n\n    return results\n  }\n\n  // Generate the output\n  build (data, status) {\n    let results = []\n    let newData = JSON.parse(JSON.stringify(data))\n\n    // Randomly choose from the items in an array\n    const chooseRand = length => {\n      return Math.floor(Math.random() * length)\n    }\n\n    // Get the subpattern for a variable\n    const getSubpattern = (subpatterns, selected) => {\n      let subpattern = []\n      for (let i = 0; i < subpatterns.length; i++) {\n        if (subpatterns[i].selected === selected) {\n          subpattern = subpatterns[i].subpattern\n          break\n        }\n      }\n      return subpattern\n    }\n\n    // If a chosen item is a defined variable, randomly choose from its own Subpattern\n    const resolveVar = (subpatterns, selected) => {\n      let letter = ''\n      if (vars.includes(selected)) {\n        const subpattern = getSubpattern(subpatterns, selected)\n        const selection = subpattern[chooseRand(subpattern.length)]\n        if (vars.includes(selection)) {\n          letter = resolveVar(subpatterns, selection)\n        } else {\n          letter = selection\n        }\n      } else {\n        letter = selected\n      }\n      if (letter.length > 1) {\n        letter = resolveOpt(subpatterns, letter)\n      }\n      return letter\n    }\n\n    const resolveOpt = (subpatterns, option) => {\n      let letters = ''\n      for (let i = 0; i < option.length; i++) {\n        if (/[()[\\]^*\"]/.test(option[i])) {\n          // For now, ignore the characters that will be used for operations\n          continue\n        } else {\n          letters += resolveVar(subpatterns, option[i])\n        }\n      }\n      return letters\n    }\n\n    // Split all the Subpatterns into arrays based on '/'\n    for (let i = 0; i < newData.subpatterns.length; i++) {\n      newData.subpatterns[i].subpattern = newData.subpatterns[\n        i\n      ].subpattern.split('/')\n    }\n\n    // Split the Pattern into an array based on '/'\n    const pattArr = newData.pattern.split('/')\n\n    // Generate the number of words requested in the settings\n    for (let i = 0; i < newData.words; i++) {\n      let word = ''\n\n      // If the Pattern has options, choose one\n      const patt = pattArr[chooseRand(pattArr.length)]\n\n      word += resolveOpt(newData.subpatterns, patt)\n\n      results.push(word)\n    }\n\n    // Calculate the stats on the generated output\n\n    // Calculate the maximum number of words\n    let count = 0\n\n    for (let i = 0; i < pattArr.length; i++) {\n      let optCount = 1\n      if (pattArr[i].length === 0) {\n        optCount = 0\n        break\n      } else {\n        for (let j = 0; j < pattArr[i].length; j++) {\n          const variab = pattArr[i][j]\n          let addCount = 0\n          let multCount = 1\n          if (/[()[\\]^*\"]/.test(variab)) {\n            // For now, ignore the characters that will be used for operations\n            continue\n          } else if (!vars.includes(variab)) {\n            // If the current item in the Pattern is not a variable, add 1 to the count\n            addCount += 1\n          } else {\n            for (let k = 0; k < newData.subpatterns.length; k++) {\n              const subpattern = newData.subpatterns[k]\n              if (subpattern.selected === variab) {\n                // If the variable is defined, count how many options are in the Subpattern\n                multCount *= subpattern.subpattern.length\n                break\n              } else {\n                // If the variable is unused, skip it\n                continue\n              }\n            }\n          }\n          optCount *= multCount\n          optCount += addCount\n        }\n      }\n      count += optCount\n    }\n\n    // If there are results, count how many words there are\n    let words = 0\n    if (results[0].length !== 0) {\n      words = results.length\n    }\n\n    const filteredWords = Array.from(new Set(results))\n    const remaining = filteredWords.length\n    const filtered = newData.words - remaining\n\n    const response = {\n      status: status,\n      results: results,\n      stats: {\n        words: words,\n        maxWords: count,\n        filtered: filtered,\n        remaining: remaining\n      }\n    }\n\n    return response\n  }\n}\n\nconst genService = new GenService()\n\nexport default genService\n","import * as v from '../../styles/variables'\n\nconst styles = {\n  duplicate: {\n    outline: {\n      width: 1,\n      style: 'solid',\n      color: v.red.string()\n    }\n  },\n  subpsRow: {\n    width: '100%',\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'baseline',\n    alignContent: 'space-between'\n  },\n  addingRow: {\n    width: '100%',\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'flex-end',\n    alignItems: 'baseline',\n    alignContent: 'space-between',\n    padding: {\n      top: 1,\n      right: 0,\n      bottom: 1,\n      left: 0\n    },\n    margin: {\n      top: 1,\n      right: 0,\n      bottom: 1,\n      left: 0\n    }\n  },\n  subpatternInput: {\n    flexGrow: 1\n  },\n  patternInput: {\n    width: '100%',\n    padding: 1,\n    margin: {\n      top: 1,\n      right: 0,\n      bottom: 1,\n      left: 0\n    }\n  },\n  wordsInput: {\n    width: `${v.ms6}rem`\n  },\n  outText: {\n    whiteSpace: 'pre-wrap'\n  }\n}\n\nexport default styles\n","import React from 'react'\nimport injectSheet from 'react-jss'\nimport PropTypes from 'prop-types'\n\nimport Tool from '../../components/Tool'\n\nimport GenForm from './GenForm'\nimport GenResults from './GenResults'\nimport genService from './GenService'\nimport styles from './styles'\n\nexport const genInfo = {\n  title: 'Gen',\n  link: 'gen',\n  description:\n    'is a tool for automatically building a set of words based on arbitrary rules of phonotactics. This can be used to create a dummy vocabulary for linguistic experimentation, to generate words or names for a naming language in a work of fantasy or science fiction, or as the basis for building the vocabulary of a constructed language.'\n}\n\nclass Gen extends React.Component {\n  constructor (props) {\n    super(props)\n    this.onChangeInput = this.onChangeInput.bind(this)\n    this.state = {\n      data: genService.getData(),\n      status: ['ok'],\n      results: [''],\n      stats: {\n        words: 0,\n        maxWords: 0,\n        filtered: 0,\n        remaining: 0\n      }\n    }\n  }\n\n  onChangeInput (e) {\n    if (e.target.tagName === 'BUTTON') {\n      e.preventDefault()\n      if (e.target.type === 'submit') {\n        // Generate the output\n        const response = genService.generate(this.state.data)\n        this.setState(prevState => ({\n          status: response.status,\n          results: response.results,\n          stats: response.stats\n        }))\n        // Save the current state to storage\n        genService.setStorage(this.state.data)\n      } else if (e.target.type === 'button') {\n        if (e.target.id === 'save') {\n          // Save the current state to storage and generate a file\n          genService.save(this.state.data)\n        } else if (e.target.id === 'add') {\n          // When the add button is clicked, add a blank Subpattern to state\n          this.setState(prevState => ({\n            data: genService.add(this.state.data)\n          }))\n        } else if (e.target.id.slice(0, 1) === 'c') {\n          // When a Subpattern is cleared, delete the corresponding Subpattern from state\n          const id = e.target.id.slice(1)\n          this.setState(prevState => ({\n            data: genService.clear(id, this.state.data)\n          }))\n        }\n      }\n    } else if (e.target.type === 'file') {\n      e.preventDefault()\n      // Open a file and parse it to restore a saved state\n      const file = e.target.files[0]\n      const updateState = response => {\n        if (response) {\n          // Only change state if the file was successfully opened\n          this.setState(prevState => ({\n            data: response\n          }))\n        }\n      }\n      genService.open(file, updateState)\n    } else if (e.target.type === 'checkbox') {\n      const checked = e.target.checked\n      if (e.target.id === 'newline') {\n        // If the selection for new lines is changed, store that change in state\n        this.setState(prevState => ({\n          data: genService.changeNewline(checked, this.state.data)\n        }))\n      } else if (e.target.id === 'filterdupes') {\n        // If the selection for filtering duplicates is changed, store that change in state\n        this.setState(prevState => ({\n          data: genService.changeDupes(checked, this.state.data)\n        }))\n      }\n    } else {\n      const val = e.target.value\n      if (e.target.id === 'pattern') {\n        // When the pattern is changed, store the change in state\n        this.setState(prevState => ({\n          data: genService.changePattern(val, this.state.data)\n        }))\n      } else if (e.target.id === 'words') {\n        // When the number of desired words is changed, store that change in state\n        const response = genService.wordNumChange(val, this.state.data)\n        if (response) {\n          // Only update state if there's a change\n          this.setState(prevState => ({\n            data: response\n          }))\n        }\n      } else {\n        const id = e.target.id.slice(1)\n        const which = e.target.id.slice(0, 1)\n        if (which === 'v') {\n          // When a Subpattern variable is changed, store that change in state\n          this.setState(prevState => ({\n            data: genService.changeSelect(id, val, this.state.data)\n          }))\n        } else if (which === 'p') {\n          // When a Subpattern is changed, store that change in state\n          this.setState(prevState => ({\n            data: genService.changeSubpattern(id, val, this.state.data)\n          }))\n        }\n      }\n    }\n  }\n\n  render () {\n    const state = this.state\n\n    return (\n      <Tool toolInfo={genInfo}>\n        <GenForm\n          styles={this.props.classes}\n          data={state.data}\n          change={this.onChangeInput}\n        />\n        <GenResults\n          styles={this.props.classes}\n          newLine={state.data.newline}\n          filterDupes={state.data.filterdupes}\n          status={state.status}\n          results={state.results}\n          stats={state.stats}\n        />\n      </Tool>\n    )\n  }\n}\n\nGen.propTypes = {\n  classes: PropTypes.object\n}\n\nexport default injectSheet(styles)(Gen)\n","import React from 'react'\nimport injectSheet from 'react-jss'\nimport PropTypes from 'prop-types'\n\nconst styles = {\n  notice: {\n    fontStyle: 'italic'\n  }\n}\n\nconst Notice = props => <p className={props.classes.notice}>{props.children}</p>\n\nNotice.propTypes = {\n  classes: PropTypes.object,\n  children: PropTypes.string\n}\n\nexport default injectSheet(styles)(Notice)\n","import React from 'react'\nimport injectSheet from 'react-jss'\nimport classNames from 'classnames'\nimport PropTypes from 'prop-types'\n\nimport Button from '../../components/Button'\nimport Form from '../../components/Form'\nimport sharedFormStyles from '../../components/Form/sharedFormStyles'\nimport Control from '../../components/Control'\nimport ControlSide from '../../components/Control/Side'\nimport ControlPiece from '../../components/Control/Piece'\n\nconst MorphForm = props => {\n  const filePicker = React.createRef()\n\n  const join = data => data.join('\\n')\n\n  const invokeFilePicker = e => {\n    e.preventDefault()\n    filePicker.current.value = ''\n    filePicker.current.click()\n  }\n\n  return (\n    <Form>\n      <div className={props.styles.section}>\n        <div\n          className={classNames(\n            props.styles.categories,\n            props.styles.inputSection,\n            props.classes.part\n          )}\n        >\n          <h5 className={props.classes.sectionTitle}>Categories</h5>\n          <div className={props.styles.container}>\n            <textarea\n              id='categories'\n              name='categories'\n              className={classNames(\n                props.styles.categoriesInput,\n                props.styles.dataInput\n              )}\n              value={join(props.data.categories)}\n              onChange={props.change}\n              aria-label='Categories'\n            />\n            <div className={props.styles.textAreaSpacer}>\n              {join(props.data.categories)}\n              &nbsp;\n            </div>\n          </div>\n        </div>\n        <div\n          className={classNames(\n            props.styles.rewriteRules,\n            props.styles.inputSection,\n            props.classes.part\n          )}\n        >\n          <h5 className={props.classes.sectionTitle}>Rewrite Rules</h5>\n          <div className={props.styles.container}>\n            <textarea\n              id='rewriteRules'\n              name='rewriteRules'\n              className={classNames(\n                props.styles.rewriteRulesInput,\n                props.styles.dataInput\n              )}\n              value={join(props.data.rewriteRules)}\n              onChange={props.change}\n              aria-label='Rewrite rules'\n            />\n            <div className={props.styles.textAreaSpacer}>\n              {join(props.data.rewriteRules)}\n              &nbsp;\n            </div>\n          </div>\n        </div>\n        <div\n          className={classNames(\n            props.styles.soundChanges,\n            props.styles.inputSection,\n            props.classes.part\n          )}\n        >\n          <h5 className={props.classes.sectionTitle}>Sound Changes</h5>\n          <div className={props.styles.container}>\n            <textarea\n              id='soundChanges'\n              name='soundChanges'\n              className={classNames(\n                props.styles.soundChangesInput,\n                props.styles.dataInput\n              )}\n              value={join(props.data.soundChanges)}\n              onChange={props.change}\n              aria-label='Sound Changes'\n            />\n            <div className={props.styles.textAreaSpacer}>\n              {join(props.data.soundChanges)}\n              &nbsp;\n            </div>\n          </div>\n        </div>\n        <div\n          className={classNames(\n            props.styles.lexicon,\n            props.styles.inputSection,\n            props.classes.part\n          )}\n        >\n          <h5 className={props.classes.sectionTitle}>Lexicon</h5>\n          <div className={props.styles.container}>\n            <textarea\n              id='lexicon'\n              name='lexicon'\n              className={classNames(\n                props.styles.lexiconInput,\n                props.styles.dataInput\n              )}\n              value={join(props.data.lexicon)}\n              onChange={props.change}\n              aria-label='Lexicon'\n            />\n            <div className={props.styles.textAreaSpacer}>\n              {join(props.data.lexicon)}\n              &nbsp;\n            </div>\n          </div>\n        </div>\n      </div>\n      <Control addedClasses={props.classes.part}>\n        <ControlSide side='left'>\n          <ControlPiece>\n            <Button type='submit' ver='neutral' onClick={props.morph}>\n              Change\n            </Button>\n          </ControlPiece>\n          <ControlPiece>\n            <label htmlFor='outputFormat'>output format:</label>\n            <select\n              id='outputFormat'\n              name='outputFormat'\n              value={props.data.outputFormat}\n              onChange={props.change}\n            >\n              <option value='oo'>output</option>\n              <option value='io'>input &rarr; output</option>\n              <option value='oi'>output &larr; input</option>\n            </select>\n          </ControlPiece>\n          <ControlPiece>\n            <div>\n              <label>\n                <input\n                  type='checkbox'\n                  id='showChanges'\n                  name='options'\n                  value='showChanges'\n                  checked={props.data.showChanges}\n                  onChange={props.check}\n                />{' '}\n                italicize changes\n              </label>\n              <br />\n              <label>\n                <input\n                  type='checkbox'\n                  id='showDiff'\n                  name='options'\n                  value='showDiff'\n                  checked={props.data.showDiff}\n                  onChange={props.check}\n                />{' '}\n                bold differences\n              </label>\n            </div>\n            <div />\n          </ControlPiece>\n          <ControlPiece>\n            <div>\n              <label>\n                <input\n                  type='checkbox'\n                  id='ruleReport'\n                  name='options'\n                  value='ruleReport'\n                  checked={props.data.ruleReport}\n                  onChange={props.check}\n                />{' '}\n                report applied rules\n              </label>\n              <br />\n              <label>\n                <input\n                  type='checkbox'\n                  id='rewriteOutput'\n                  name='options'\n                  value='rewriteOutput'\n                  checked={props.data.rewriteOutput}\n                  onChange={props.check}\n                />{' '}\n                rewrite on output\n              </label>\n            </div>\n          </ControlPiece>\n        </ControlSide>\n        <ControlSide side='right'>\n          <ControlPiece>\n            <Button id='save' ver='success' onClick={props.save} type='button'>\n              Save\n            </Button>\n          </ControlPiece>\n          <ControlPiece>\n            <Button id='open' onClick={invokeFilePicker} type='button'>\n              Open\n            </Button>\n            <input\n              id='file'\n              name='file'\n              className={props.classes.hidden}\n              type='file'\n              ref={filePicker}\n              onChange={props.open}\n            />\n          </ControlPiece>\n        </ControlSide>\n      </Control>\n    </Form>\n  )\n}\n\nMorphForm.propTypes = {\n  classes: PropTypes.object,\n  styles: PropTypes.object,\n  data: PropTypes.shape({\n    categories: PropTypes.arrayOf(PropTypes.string).isRequired,\n    rewriteRules: PropTypes.arrayOf(PropTypes.string).isRequired,\n    soundChanges: PropTypes.arrayOf(PropTypes.string).isRequired,\n    lexicon: PropTypes.arrayOf(PropTypes.string).isRequired,\n    outputFormat: PropTypes.oneOf(['oo', 'io', 'oi']).isRequired,\n    showDiff: PropTypes.bool.isRequired,\n    showChanges: PropTypes.bool.isRequired,\n    ruleReport: PropTypes.bool.isRequired,\n    rewriteOutput: PropTypes.bool.isRequired\n  }).isRequired,\n  change: PropTypes.func.isRequired,\n  morph: PropTypes.func.isRequired,\n  check: PropTypes.func.isRequired,\n  save: PropTypes.func.isRequired,\n  open: PropTypes.func.isRequired\n}\n\nexport default injectSheet(sharedFormStyles)(MorphForm)\n","import React from 'react'\nimport injectSheet from 'react-jss'\nimport classNames from 'classnames'\nimport PropTypes from 'prop-types'\n\nimport Results from '../../components/Results'\nimport sharedResultsStyles from '../../components/Results/sharedResultsStyles'\n\nconst MorphResults = props => {\n  let resultsArr = props.results || []\n\n  const outputText = styles => {\n    // If there were errors, print them\n    if (typeof resultsArr[0] === 'string') {\n      return resultsArr.map((error, i) => (\n        <p className={classNames(styles.outText, props.classes.error)} key={i}>\n          {error}\n        </p>\n      ))\n    }\n\n    // Format the results according to the selected option\n    const format = result => {\n      if (props.outputFormat === 'oo') {\n        return result.output.trim()\n      } else if (props.outputFormat === 'io') {\n        return `${result.input.trim()} → ${result.output.trim()}`\n      } else if (props.outputFormat === 'oi') {\n        return `${result.output.trim()} ← ${result.input.trim()}`\n      }\n    }\n\n    // Assign the 'different' and 'changed' classes appropriately\n    const classes = result => {\n      if (props.showDiff && result.diff) {\n        if (props.showChanges && result.input !== result.output) {\n          return classNames(styles.outText, styles.different, styles.changed)\n        } else {\n          return classNames(styles.outText, styles.different)\n        }\n      } else {\n        if (props.showChanges && result.input !== result.output) {\n          return classNames(styles.outText, styles.changed)\n        } else {\n          return styles.outText\n        }\n      }\n    }\n\n    // Return the results text\n    return resultsArr.length > 0 ? (\n      resultsArr.map((result, i) => (\n        <p className={classes(result)} key={i}>\n          {format(result)}\n        </p>\n      ))\n    ) : (\n      <p className={styles.outText} />\n    )\n  }\n\n  const countStats = () => {\n    const totalWords = resultsArr.length\n    let unchangedWords = 0\n    let differentWords = 0\n    for (let i = 0; i < totalWords; i++) {\n      if (resultsArr[i].input === resultsArr[i].output) {\n        unchangedWords++\n      }\n      if (resultsArr[i].diff) {\n        differentWords++\n      }\n    }\n    const changedWords = totalWords - unchangedWords\n    const sameWords = totalWords - differentWords\n    return {\n      total: totalWords,\n      changed: changedWords,\n      unchanged: unchangedWords,\n      different: differentWords,\n      same: sameWords\n    }\n  }\n\n  const statsText = () => {\n    const stats = countStats()\n    return `${stats.changed} of ${stats.total} words changed (${\n      stats.unchanged\n    } unchanged); ${stats.different} of ${\n      stats.total\n    } words different from last time (${stats.same} the same)`\n  }\n\n  return (\n    <Results>\n      <div className={props.styles.output}>{outputText(props.styles)}</div>\n      <div className={props.classes.stats}>\n        <p className={props.classes.statsText}>{statsText()}</p>\n      </div>\n    </Results>\n  )\n}\n\nMorphResults.propTypes = {\n  classes: PropTypes.object,\n  styles: PropTypes.object,\n  outputFormat: PropTypes.string.isRequired,\n  results: PropTypes.oneOfType([\n    PropTypes.arrayOf(\n      PropTypes.shape({\n        input: PropTypes.string.isRequired,\n        output: PropTypes.string.isRequired,\n        diff: PropTypes.bool.isRequired\n      })\n    ).isRequired,\n    PropTypes.arrayOf(PropTypes.string.isRequired).isRequired\n  ]),\n  showDiff: PropTypes.bool.isRequired,\n  showChanges: PropTypes.bool.isRequired\n}\n\nexport default injectSheet(sharedResultsStyles)(MorphResults)\n","import { toast } from 'react-toastify'\nimport schema from 'js-schema'\n\nimport dataProcessor from '../../tools/dataProcessor'\nimport fileProcessor from '../../tools/fileProcessor'\n\nclass MorphService {\n  constructor () {\n    this.item = 'morph'\n    this.getData = this.getData.bind(this)\n    this.removeResults = this.removeResults.bind(this)\n    this.setStorage = this.setStorage.bind(this)\n    this.save = this.save.bind(this)\n    this.open = this.open.bind(this)\n    this.splitRewriteRules = this.splitRewriteRules.bind(this)\n    this.rewriteCats = this.rewriteCats.bind(this)\n    this.splitCategories = this.splitCategories.bind(this)\n    this.rewriteChanges = this.rewriteChanges.bind(this)\n    this.splitSoundChanges = this.splitSoundChanges.bind(this)\n    this.rewriteLex = this.rewriteLex.bind(this)\n    this.unrewriteLex = this.unrewriteLex.bind(this)\n    this.applyChanges = this.applyChanges.bind(this)\n    this.getResults = this.getResults.bind(this)\n    this.idDiff = this.idDiff.bind(this)\n    this.morph = this.morph.bind(this)\n  }\n\n  // Get the data from storage or from the default data\n  getData () {\n    return dataProcessor.getData(this.item)\n  }\n\n  // Remove the results from the data\n  removeResults (data) {\n    const dataNoResults = JSON.parse(JSON.stringify(data))\n    delete dataNoResults.results\n    return dataNoResults\n  }\n\n  // Store the current data in storage\n  setStorage (data) {\n    dataProcessor.setStorage(this.removeResults(data), this.item)\n  }\n\n  // Save the current state to storage and generate a file\n  save (data) {\n    fileProcessor.save(this.removeResults(data), this.item)\n  }\n\n  // Open a file and parse it to restore a saved state\n  open (file, callback) {\n    let response\n\n    const processResults = result => {\n      // If correct filetype\n      if (file.name.endsWith('.lngm')) {\n        // Define correct file structure\n        const DataSchema = schema({\n          categories: Array.of(String),\n          rewriteRules: Array.of(String),\n          soundChanges: Array.of(String),\n          lexicon: Array.of(String),\n          outputFormat: ['oo', 'io', 'oi'],\n          showDiff: Boolean,\n          ruleReport: Boolean,\n          rewriteOutput: Boolean\n        })\n\n        let content = JSON.parse(result)\n\n        if (content.results) {\n          content.results.words = +content.results.words\n        }\n\n        if (DataSchema(content)) {\n          // If the file's content contains valid Data, load it\n          toast.success(`Data loaded from ${file.name}.`, {\n            autoClose: 5000,\n            className: 'toast-opened',\n            bodyClassName: 'toast-opened-body',\n            progressClassName: 'toast-opened-progress'\n          })\n\n          this.setStorage(content)\n\n          response = content\n        } else {\n          // If the file's content does not contain valid Data, show an error\n          toast.info(`The content of ${file.name} is invalid.`, {\n            autoClose: 5000,\n            className: 'toast-unopened',\n            bodyClassName: 'toast-unopened-body',\n            progressClassName: 'toast-unopened-progress'\n          })\n\n          // eslint-disable-next-line\n          console.error(DataSchema.errors(content))\n\n          response = false\n        }\n      } else {\n        // If incorrect filetype\n        toast.info('Wrong filetype selected.', {\n          autoClose: 5000,\n          className: 'toast-unopened',\n          bodyClassName: 'toast-unopened-body',\n          progressClassName: 'toast-unopened-progress'\n        })\n\n        response = false\n      }\n\n      callback(response)\n    }\n\n    if (window.FileReader) {\n      // If the browser has access to the File APIs, open the file\n      fileProcessor.openFile(file, processResults)\n    } else {\n      // If the browser can't access the File APIs, display a notification\n      toast.info('Your browser is unable to open files.', {\n        autoClose: 5000,\n        className: 'toast-unopened',\n        bodyClassName: 'toast-unopened-body',\n        progressClassName: 'toast-unopened-progress'\n      })\n\n      response = false\n      callback(response)\n    }\n  }\n\n  // Split the rewrite rules into an array of objects\n  splitRewriteRules (rules) {\n    let splitRules = []\n    let errors = []\n\n    for (let i = 0; i < rules.length; i++) {\n      const split = rules[i].split('=')\n      if (split.length > 2) {\n        // If the string was split too many times, it had too many =\n        errors.push(`The rewrite rule ${rules[i]} has too many = signs.`)\n      } else if (split.length < 2) {\n        if (rules[i].length === 0) {\n          // If it was a blank line, ignore it\n          continue\n        } else {\n          // If the string wasn't split at all, it was missing a =\n          errors.push(`The rewrite rule ${rules[i]} is missing an = sign.`)\n        }\n      } else {\n        // Split the rewrite rule\n        splitRules.push({ rewriteFrom: split[0], rewriteTo: split[1] })\n      }\n    }\n\n    // If there are any errors that were logged, return the errors. Otherwise, return the split categories.\n    return errors.length ? errors : splitRules\n  }\n\n  // Apply the rewrite rules to the categories\n  rewriteCats (cat, rules) {\n    for (let i = 0; i < rules.length; i++) {\n      const rewriteFrom = new RegExp(rules[i].rewriteFrom, 'g')\n      cat[1] = cat[1].replace(rewriteFrom, rules[i].rewriteTo)\n    }\n    return cat\n  }\n\n  // Split the categories into an array of objects\n  splitCategories (cats, rules) {\n    let assignments = []\n    let errors = []\n\n    for (let i = 0; i < cats.length; i++) {\n      const split = cats[i].split('=')\n      if (split.length > 2) {\n        // If the string was split too many times, it had too many =\n        errors.push(`The category ${cats[i]} has too many = signs.`)\n      } else if (split.length < 2) {\n        if (cats[i].length === 0) {\n          // If it was a blank line, ignore it\n          continue\n        } else {\n          // If the string wasn't split at all, it was missing a =\n          errors.push(`The category ${cats[i]} is missing an = sign.`)\n        }\n      } else if (split[0].length > 1) {\n        // If the string to the left of the = is more than one character\n        errors.push(\n          `The category ${\n            cats[i]\n          } needs to be assigned to a single-character variable.`\n        )\n      } else {\n        const rwSplit = this.rewriteCats(split, rules)\n        // Split the variable from its assignments\n        assignments.push(rwSplit)\n      }\n    }\n\n    let splitCategories = []\n    for (let i = 0; i < assignments.length; i++) {\n      const thisCat = {}\n      thisCat.variable = assignments[i][0]\n      thisCat.categories = assignments[i][1].split('')\n      splitCategories.push(thisCat)\n    }\n\n    // If there are any errors that were logged, return the errors. Otherwise, return the split categories.\n    return errors.length ? errors : splitCategories\n  }\n\n  // Apply the rewrite rules to the sound change rules\n  rewriteChanges (change, rules) {\n    const newChange = JSON.parse(JSON.stringify(change))\n\n    for (let prop in newChange) {\n      if (newChange.hasOwnProperty(prop)) {\n        for (let i = 0; i < rules.length; i++) {\n          const rewriteFrom = new RegExp(rules[i].rewriteFrom, 'g')\n          newChange[prop] = newChange[prop].replace(\n            rewriteFrom,\n            rules[i].rewriteTo\n          )\n        }\n      }\n    }\n\n    return newChange\n  }\n\n  // Split the sound change rules into an array of objects\n  splitSoundChanges (cats, changes, rules) {\n    let splitChanges = []\n    let errors = []\n\n    const idChar = char => {\n      switch (char) {\n        case '_':\n          return 'target'\n        case '#':\n          return 'wordboundary'\n        case '[':\n          return 'brackopen'\n        case ']':\n          return 'brackclose'\n        case '(':\n          return 'parenopen'\n        case ')':\n          return 'parenclose'\n        default:\n          let cat = false\n          for (let i = 0; i < cats.length; i++) {\n            if (char === cats[i].variable) {\n              cat = true\n              break\n            }\n          }\n          return cat ? 'category' : 'literal'\n      }\n    }\n\n    for (let i = 0; i < changes.length; i++) {\n      const split = changes[i].split('/')\n      if (split.length > 4) {\n        // If hte string was split too many times, it had too many /\n        errors.push(`The sound change ${changes[i]} has too many / signs.`)\n      } else if (split.length < 2) {\n        if (changes[i].length === 0) {\n          // If it was a blank line, ignore it\n          continue\n        } else {\n          // If the string wasn't split at all, it was missing a /\n          errors.push(`The sound change ${changes[i]} is missing a / sign.`)\n        }\n      } else {\n        // Split the sound change rule into an object\n        const thisRule = {\n          changeFrom: split[0],\n          changeTo: split[1]\n        }\n        if (split[2]) {\n          thisRule.context = split[2]\n          if (!/_/.test(split[2])) {\n            errors.push(\n              `The context in the sound change ${\n                changes[i]\n              } is missing an _ sign.`\n            )\n          } else if (/_/.exec(split[2]).length > 2) {\n            errors.push(\n              `The context in the sound change ${\n                changes[i]\n              } has too many _ signs.`\n            )\n          }\n        }\n        if (split[3]) {\n          thisRule.exception = split[3]\n          if (!/_/.test(split[3])) {\n            errors.push(\n              `The exception in the sound change ${\n                changes[i]\n              } is missing an _ sign.`\n            )\n          } else if (/_/.exec(split[3]).length > 2) {\n            errors.push(\n              `The exception in the sound change ${\n                changes[i]\n              } has too many _ signs.`\n            )\n          }\n        }\n\n        const rwRule = this.rewriteChanges(thisRule, rules)\n\n        // ID all characters in each rule\n        let changeFromArr = []\n        for (let j = 0; j < rwRule.changeFrom.length; j++) {\n          changeFromArr.push(idChar(rwRule.changeFrom[j]))\n        }\n        rwRule.changeFromID = changeFromArr\n        let changeToArr = []\n        for (let j = 0; j < rwRule.changeTo.length; j++) {\n          changeToArr.push(idChar(rwRule.changeTo[j]))\n        }\n        rwRule.changeToID = changeToArr\n        let contextArr = []\n        if (rwRule.context) {\n          for (let j = 0; j < rwRule.context.length; j++) {\n            contextArr.push(idChar(rwRule.context[j]))\n          }\n          rwRule.contextID = contextArr\n        }\n        let exceptionArr = []\n        if (rwRule.exception) {\n          for (let j = 0; j < rwRule.exception.length; j++) {\n            exceptionArr.push(idChar(rwRule.exception[j]))\n          }\n          rwRule.exceptionID = exceptionArr\n        }\n\n        splitChanges.push(rwRule)\n      }\n    }\n\n    // If there are any errors that were logged, return the errors. Otherwise, return the split categories.\n    return errors.length ? errors : splitChanges\n  }\n\n  // Apply the rewrite rules to the lexicon\n  rewriteLex (lex, rules) {\n    let newLex = []\n\n    for (let i = 0; i < lex.length; i++) {\n      let word = lex[i]\n\n      for (let j = 0; j < rules.length; j++) {\n        const regRule = new RegExp(rules[j].rewriteFrom, 'g')\n        word = word.replace(regRule, rules[j].rewriteTo)\n      }\n\n      newLex.push(word)\n    }\n\n    return newLex\n  }\n\n  // Reverse-apply the rewrite rules to the output\n  unrewriteLex (results, rules) {\n    const newResults = JSON.parse(JSON.stringify(results))\n\n    for (let i = 0; i < newResults.length; i++) {\n      for (let j = 0; j < rules.length; j++) {\n        const regRule = new RegExp(rules[j].rewriteTo, 'g')\n        newResults[i].output = newResults[i].output.replace(\n          regRule,\n          rules[j].rewriteFrom\n        )\n      }\n    }\n\n    return newResults\n  }\n\n  // Apply the sound changes to a given word\n  applyChanges (cats, changes, word) {\n    let newWord = word\n\n    // For each rule\n    for (let i = 0; i < changes.length; i++) {\n      // Replace the # word boundary symbol with the regex \\b\n      let context = changes[i].context\n        ? changes[i].context.replace(/#/g, '\\\\b')\n        : undefined\n      let exception = changes[i].exception\n        ? changes[i].exception.replace(/#/g, '\\\\b')\n        : undefined\n\n      if (context) {\n      }\n      if (exception) {\n      }\n\n      let rpfc\n      let rptc\n      let rpe\n      let reg\n      if (changes[i].context) {\n        rpfc = changes[i].context.replace('_', changes[i].changeFrom)\n        rptc = changes[i].context.replace('_', changes[i].changeTo)\n        if (changes[i].exception) {\n          rpe = changes[i].exception.replace('_', changes[i].changeFrom)\n          // If there is an exception, replace in every context match except when it matches the exception\n          reg = new RegExp(`${rpe}|(${rpfc})`, 'g')\n          newWord = newWord.replace(reg, rptc)\n        } else {\n          // If there are no exceptions, replace in every context match\n          reg = new RegExp(rpfc, 'g')\n          newWord = newWord.replace(reg, rptc)\n        }\n      } else {\n        // If there is no context, replace in every match\n        const reg = new RegExp(changes[i].changeFrom, 'g')\n        newWord = newWord.replace(reg, changes[i].changeTo)\n      }\n    }\n\n    return newWord\n  }\n\n  // Build the results object array\n  getResults (cats, rules, changes, lexicon, rwOutput) {\n    const rwLexicon = this.rewriteLex(lexicon, rules)\n    let results = []\n\n    for (let i = 0; i < lexicon.length; i++) {\n      results.push({\n        input: lexicon[i],\n        output: this.applyChanges(cats, changes, rwLexicon[i])\n      })\n    }\n\n    // If 'rewrite on output' is selected, rewrite the results. Otherwise, just return the results as-is.\n    return rwOutput ? this.unrewriteLex(results, rules) : results\n  }\n\n  idDiff (data, results) {\n    const newResults = JSON.parse(JSON.stringify(results))\n\n    if (\n      data.results !== undefined &&\n      data.results.length &&\n      typeof data.results[0] !== 'string'\n    ) {\n      for (let i = 0; i < newResults.length; i++) {\n        newResults[i].diff =\n          newResults[i].input !== data.results[i].input ||\n          newResults[i].output !== data.results[i].output\n      }\n    } else {\n      for (let i = 0; i < newResults.length; i++) {\n        newResults[i].diff = true\n      }\n    }\n\n    return newResults\n  }\n\n  morph (data) {\n    const newData = JSON.parse(JSON.stringify(data))\n\n    // Process the input\n    const rewriteRules = this.splitRewriteRules(newData.rewriteRules)\n    const categories = this.splitCategories(newData.categories, rewriteRules)\n    const soundChanges = this.splitSoundChanges(\n      categories,\n      newData.soundChanges,\n      rewriteRules\n    )\n\n    // Return the errors if there are any\n    let allErrors = []\n    if (typeof categories[0] === 'string')\n      allErrors = allErrors.concat(categories)\n    if (typeof rewriteRules[0] === 'string')\n      allErrors = allErrors.concat(rewriteRules)\n    if (typeof soundChanges[0] === 'string')\n      allErrors = allErrors.concat(soundChanges)\n    if (allErrors.length) return allErrors\n\n    const results = this.getResults(\n      categories,\n      rewriteRules,\n      soundChanges,\n      newData.lexicon,\n      newData.rewriteOutput\n    )\n\n    return this.idDiff(newData, results)\n  }\n}\n\nconst morphService = new MorphService()\n\nexport default morphService\n","import * as v from '../../styles/variables'\n\nconst styles = {\n  section: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    justifyContent: 'space-between',\n    alignItems: 'stretch',\n    alignContent: 'flex-start',\n    width: '100%'\n  },\n  container: {\n    position: 'relative',\n    width: '100%',\n    height: `calc(100% - ${2 * v.lnht}rem)` /* 100% minus the header height */\n  },\n  dataInput: {\n    position: 'absolute',\n    width: '100%',\n    height: '100%',\n    resize: 'none',\n    wordWrap: 'normal',\n    padding: 2\n  },\n  textAreaSpacer: {\n    width: '100%',\n    height: '100%',\n    wordWrap: 'normal',\n    whiteSpace: 'pre',\n    padding: {\n      top: 2,\n      right: `${v.lnht}rem`,\n      bottom: `${v.lnht}rem`,\n      left: 2\n    },\n    borderWidth: 1,\n    visibility: 'hidden'\n  },\n  inputSection: {\n    minWidth: `${3 * v.ms6}rem`,\n    flexGrow: 2,\n    padding: `0 ${v.lnht / 2}rem`\n  },\n  outText: {\n    '&:not(:last-child)': {\n      marginBottom: 0\n    }\n  },\n  different: {\n    fontWeight: 'bold'\n  },\n  changed: {\n    fontStyle: 'italic'\n  }\n}\n\nexport default styles\n","import React from 'react'\nimport injectSheet from 'react-jss'\nimport PropTypes from 'prop-types'\n\nimport Notice from '../../components/Notice'\nimport Tool from '../../components/Tool'\n\nimport MorphForm from './MorphForm'\nimport MorphResults from './MorphResults'\nimport morphService from './MorphService'\nimport styles from './styles'\n\nexport const morphInfo = {\n  title: 'Morph',\n  link: 'morph',\n  description:\n    'is a tool for modeling historical sound change according to arbitrary rules of phonetic change.'\n}\n\nclass Morph extends React.Component {\n  constructor (props) {\n    super(props)\n    this.onChange = this.onChange.bind(this)\n    this.onMorph = this.onMorph.bind(this)\n    this.onCheck = this.onCheck.bind(this)\n    this.onSave = this.onSave.bind(this)\n    this.onOpen = this.onOpen.bind(this)\n    this.state = morphService.getData()\n  }\n\n  onChange (e) {\n    // When an input field is changed, update state\n    const name = e.target.name\n    let value\n    if (e.target.type === 'textarea') {\n      // Split the textarea inputs by newlines\n      value = e.target.value.split('\\n')\n    } else {\n      // Just get the value of the input\n      value = e.target.value\n    }\n    this.setState(prevState => ({\n      [name]: value\n    }))\n  }\n\n  onMorph (e) {\n    e.preventDefault()\n    // Generate the output\n    this.setState(prevState => ({\n      results: morphService.morph(this.state)\n    }))\n    // Save the current state to storage\n    morphService.setStorage(this.state)\n  }\n\n  onCheck (e) {\n    // When a checkbox option is changed, update state\n    const value = e.target.value\n    const checked = e.target.checked\n    this.setState(prevState => ({\n      [value]: checked\n    }))\n  }\n\n  onSave (e) {\n    e.preventDefault()\n    // Save the current state to storage and generate a file\n    morphService.save(this.state)\n  }\n\n  onOpen (e) {\n    e.preventDefault()\n    const file = e.target.files[0]\n    const updateState = response => {\n      if (response) {\n        // Only change state if the file was successfully opened\n        this.setState(prevState => response)\n      }\n    }\n    morphService.open(file, updateState)\n  }\n\n  render () {\n    return (\n      <Tool toolInfo={morphInfo}>\n        <Notice>This tool is still in development.</Notice>\n        <MorphForm\n          styles={this.props.classes}\n          data={this.state}\n          change={this.onChange}\n          morph={this.onMorph}\n          check={this.onCheck}\n          save={this.onSave}\n          open={this.onOpen}\n        />\n        <MorphResults\n          styles={this.props.classes}\n          outputFormat={this.state.outputFormat}\n          results={this.state.results}\n          showDiff={this.state.showDiff}\n          showChanges={this.state.showChanges}\n        />\n      </Tool>\n    )\n  }\n}\n\nMorph.propTypes = {\n  classes: PropTypes.object\n}\n\nexport default injectSheet(styles)(Morph)\n","import React from 'react'\nimport injectSheet from 'react-jss'\nimport classNames from 'classnames'\nimport PropTypes from 'prop-types'\n\nimport Button from '../../components/Button'\nimport Form from '../../components/Form'\nimport sharedFormStyles from '../../components/Form/sharedFormStyles'\nimport Control from '../../components/Control'\nimport ControlSide from '../../components/Control/Side'\nimport ControlPiece from '../../components/Control/Piece'\n\nconst DerivForm = props => {\n  const filePicker = React.createRef()\n\n  const lexemeRows = props.data.lexemes.map((lexeme, index) => (\n    <div key={index} className={props.styles.derivRow}>\n      <input\n        type='text'\n        id={`lw${index}`}\n        name={`lw${index}`}\n        className={props.styles.lexemeInput}\n        value={lexeme.lexeme}\n        onChange={props.change}\n        aria-label={`Word for lexeme ${index}`}\n      />\n      <input\n        type='text'\n        id={`ld${index}`}\n        name={`ld${index}`}\n        className={props.styles.lexemeDefInput}\n        value={lexeme.definition}\n        onChange={props.change}\n        aria-label={`Gloss for lexeme ${index}`}\n      />\n      <div className={props.styles.clearButton}>\n        <Button\n          id={`lc${index}`}\n          onClick={props.change}\n          ver='danger'\n          addClass='small'\n          type='button'\n          aria-label={`Delete lexeme ${index}`}\n        >\n          Delete\n        </Button>\n      </div>\n    </div>\n  ))\n\n  const derivationRows = props.data.derivations.map((derivation, index) => (\n    <div key={index} className={props.styles.derivRow}>\n      <input\n        type='text'\n        id={`da${index}`}\n        name={`da${index}`}\n        className={props.styles.derivationInput}\n        value={derivation.derivation}\n        onChange={props.change}\n        aria-label={`Affix ${index}`}\n      />\n      <input\n        type='text'\n        id={`dl${index}`}\n        name={`dl${index}`}\n        className={props.styles.derivationGlossInput}\n        value={derivation.gloss}\n        onChange={props.change}\n        aria-label={`Gloss for affix ${index}`}\n      />\n      <input\n        type='text'\n        id={`dd${index}`}\n        name={`dd${index}`}\n        className={props.styles.derivationDefInput}\n        value={derivation.definition}\n        onChange={props.change}\n        aria-label={`Definition for affix ${index}`}\n      />\n      <div className={props.styles.clearButton}>\n        <Button\n          id={`dc${index}`}\n          onClick={props.change}\n          ver='danger'\n          addClass='small'\n          type='button'\n          aria-label={`Delete lexeme ${index}`}\n        >\n          Delete\n        </Button>\n      </div>\n    </div>\n  ))\n\n  const addButton = which => {\n    return (\n      <div className={props.styles.addingRow}>\n        <Button\n          onClick={props.change}\n          id={`${which}Add`}\n          ver='success'\n          addClass='small'\n          type='button'\n        >\n          Add\n        </Button>\n      </div>\n    )\n  }\n\n  const invokeFilePicker = e => {\n    e.preventDefault()\n    filePicker.current.value = ''\n    filePicker.current.click()\n  }\n\n  return (\n    <Form>\n      <div className={classNames(props.styles.lexemes, props.classes.part)}>\n        <h5 className={props.classes.sectionTitle}>Lexemes</h5>\n        <div className={props.styles.derivRow}>\n          <h6\n            className={classNames(\n              props.styles.columnLabel,\n              props.styles.wordLabel\n            )}\n          >\n            Word\n          </h6>\n          <h6\n            className={classNames(\n              props.styles.columnLabel,\n              props.styles.definitionLabel\n            )}\n          >\n            Gloss\n          </h6>\n        </div>\n        {lexemeRows}\n        {addButton('lex')}\n      </div>\n      <div className={classNames(props.styles.derivations, props.classes.part)}>\n        <h5 className={props.classes.sectionTitle}>Derivational Affixes</h5>\n        <div className={props.styles.derivRow}>\n          <h6\n            className={classNames(\n              props.styles.columnLabel,\n              props.styles.affixLabel\n            )}\n          >\n            Affix\n          </h6>\n          <h6\n            className={classNames(\n              props.styles.columnLabel,\n              props.styles.glossLabel\n            )}\n          >\n            Gloss\n          </h6>\n          <h6\n            className={classNames(\n              props.styles.columnLabel,\n              props.styles.definitionLabel\n            )}\n          >\n            Definition\n          </h6>\n        </div>\n        {derivationRows}\n        {addButton('der')}\n      </div>\n      <Control addedClasses={props.classes.part}>\n        <ControlSide side='left'>\n          <ControlPiece>\n            <Button type='submit' ver='neutral' onClick={props.change}>\n              Derive\n            </Button>\n          </ControlPiece>\n          <ControlPiece>\n            <label htmlFor='words'>number of words to derive:</label>\n            <input\n              type='number'\n              id='words'\n              name='words'\n              min='1'\n              max='9999'\n              className={props.styles.wordsInput}\n              value={props.data.words}\n              onChange={props.change}\n            />\n          </ControlPiece>\n          <ControlPiece>\n            <label htmlFor='type'>output type:</label>\n            <select\n              id='type'\n              name='type'\n              value={props.data.type}\n              onChange={props.change}\n            >\n              <option value='any'>any base, any derivation</option>\n              <option value='single base'>single base</option>\n              <option value='single derivation'>single derivation</option>\n            </select>\n          </ControlPiece>\n        </ControlSide>\n        <ControlSide side='right'>\n          <ControlPiece>\n            <Button\n              id='save'\n              ver='success'\n              onClick={props.change}\n              type='button'\n            >\n              Save\n            </Button>\n          </ControlPiece>\n          <ControlPiece>\n            <Button id='open' onClick={invokeFilePicker} type='button'>\n              Open\n            </Button>\n            <input\n              id='file'\n              name='file'\n              className={props.classes.hidden}\n              type='file'\n              ref={filePicker}\n              onChange={props.change}\n            />\n          </ControlPiece>\n        </ControlSide>\n      </Control>\n    </Form>\n  )\n}\n\nDerivForm.propTypes = {\n  classes: PropTypes.object,\n  styles: PropTypes.object,\n  data: PropTypes.shape({\n    words: PropTypes.number.isRequired,\n    type: PropTypes.oneOf(['any', 'single base', 'single derivation'])\n      .isRequired,\n    lexemes: PropTypes.arrayOf(\n      PropTypes.shape({\n        lexeme: PropTypes.string.isRequired,\n        definition: PropTypes.string.isRequired\n      })\n    ),\n    derivations: PropTypes.arrayOf(\n      PropTypes.shape({\n        derivation: PropTypes.string.isRequired,\n        gloss: PropTypes.string.isRequired,\n        definition: PropTypes.string.isRequired\n      })\n    )\n  }).isRequired,\n  change: PropTypes.func.isRequired\n}\n\nexport default injectSheet(sharedFormStyles)(DerivForm)\n","import React from 'react'\nimport injectSheet from 'react-jss'\nimport classNames from 'classnames'\nimport PropTypes from 'prop-types'\n\nimport Results from '../../components/Results'\nimport sharedResultsStyles from '../../components/Results/sharedResultsStyles'\n\nclass DerivResults extends React.Component {\n  constructor (props) {\n    super(props)\n    this.outputBox = this.outputBox.bind(this)\n    this.output = this.output.bind(this)\n    this.statsText = this.statsText.bind(this)\n    this.hoverAffix = this.hoverAffix.bind(this)\n    this.unhoverAffix = this.unhoverAffix.bind(this)\n    this.state = {\n      hovered: null\n    }\n  }\n\n  outputBox (which, item, styles, classes, i) {\n    if (which === 'affix') {\n      return (\n        <div className={styles.outputBox}>\n          <p className={styles.term}>{item.derivation}</p>\n          <p\n            className={classNames(\n              styles.affixGloss,\n              styles.gloss,\n              // Dynamically assign the hovered class if hovered\n              i === this.state.hovered ? styles.hoveredGloss : null\n            )}\n            onMouseOver={() => this.hoverAffix(i)}\n            onMouseOut={() => this.unhoverAffix(i)}\n          >\n            {item.gloss}\n          </p>\n        </div>\n      )\n    } else if (which === 'lexeme') {\n      return (\n        <div className={styles.outputBox}>\n          <p className={styles.term}>{item.lexeme}</p>\n          <p className={classNames(styles.lexGloss, styles.gloss)}>\n            {item.definition}\n          </p>\n        </div>\n      )\n    } else if (which === 'error') {\n      return (\n        <div className={styles.outputBox}>\n          <p className={classNames(classes.error, styles.gloss)}>{item}</p>\n        </div>\n      )\n    } else {\n      return null\n    }\n  }\n\n  output (styles, classes) {\n    if (this.props.results) {\n      if (this.props.results.newWords.length) {\n        return this.props.results.newWords.map((newWord, i) => (\n          <div\n            key={i}\n            className={classNames(styles.derivRow, styles.outputRow)}\n          >\n            <div className={classNames(styles.outputBox, styles.rowNumber)}>\n              {i + 1}.\n            </div>\n            <div>\n              <div className={classNames(styles.derivRow, styles.outputRow)}>\n                {newWord.prefix\n                  ? this.outputBox('affix', newWord.prefix, styles, classes, i)\n                  : null}\n                {newWord.lexeme\n                  ? this.outputBox('lexeme', newWord.lexeme, styles, classes)\n                  : null}\n                {newWord.suffix\n                  ? this.outputBox('affix', newWord.suffix, styles, classes, i)\n                  : null}\n                {newWord.error\n                  ? this.outputBox('error', newWord.error, styles, classes)\n                  : null}\n              </div>\n              <p\n                className={classNames(\n                  styles.affixDef,\n                  // Dynamically assign the hovered class if hovered\n                  i === this.state.hovered ? styles.hoveredDef : null\n                )}\n              >\n                {newWord.prefix\n                  ? newWord.prefix.definition\n                  : newWord.suffix\n                    ? newWord.suffix.definition\n                    : ''}\n              </p>\n            </div>\n          </div>\n        ))\n      }\n    }\n    return null\n  }\n\n  statsText () {\n    let words = 0\n    let possible = 0\n    if (this.props.results) {\n      words = this.props.results.newWords.length.toLocaleString()\n      possible = this.props.results.possible.toLocaleString()\n    }\n    return `words: ${words}; maximum derivations possible: ${possible}`\n  }\n\n  hoverAffix (i) {\n    this.setState(prevState => ({\n      hovered: i\n    }))\n  }\n\n  unhoverAffix (i) {\n    this.setState(prevState => ({\n      hovered: null\n    }))\n  }\n\n  render () {\n    return (\n      <Results>\n        <div className={this.props.styles.output}>\n          {this.output(this.props.styles, this.props.classes)}\n        </div>\n        <div className={this.props.classes.stats}>\n          <p className={this.props.classes.statsText}>{this.statsText()}</p>\n        </div>\n      </Results>\n    )\n  }\n}\n\nDerivResults.propTypes = {\n  classes: PropTypes.object,\n  styles: PropTypes.object,\n  results: PropTypes.shape({\n    newWords: PropTypes.arrayOf(\n      PropTypes.shape({\n        lexeme: PropTypes.shape({\n          lexeme: PropTypes.string.isRequired,\n          definition: PropTypes.string.isRequired\n        }).isRequired,\n        prefix: PropTypes.shape({\n          derivation: PropTypes.string.isRequired,\n          gloss: PropTypes.string.isRequired,\n          definition: PropTypes.string.isRequired\n        }),\n        suffix: PropTypes.shape({\n          derivation: PropTypes.string.isRequired,\n          gloss: PropTypes.string.isRequired,\n          definition: PropTypes.string.isRequired\n        }),\n        error: PropTypes.string\n      })\n    ),\n    possible: PropTypes.number\n  })\n}\n\nexport default injectSheet(sharedResultsStyles)(DerivResults)\n","import { toast } from 'react-toastify'\nimport schema from 'js-schema'\n\nimport dataProcessor from '../../tools/dataProcessor'\nimport fileProcessor from '../../tools/fileProcessor'\n\nclass DerivService {\n  constructor () {\n    this.item = 'deriv'\n    this.getData = this.getData.bind(this)\n    this.save = this.save.bind(this)\n    this.open = this.open.bind(this)\n    this.setStorage = this.setStorage.bind(this)\n    this.add = this.add.bind(this)\n    this.clear = this.clear.bind(this)\n    this.changeInput = this.changeInput.bind(this)\n    this.derive = this.derive.bind(this)\n  }\n\n  // Get the data from storage or from the default data\n  getData () {\n    return dataProcessor.getData(this.item)\n  }\n\n  // Store the current data in storage\n  setStorage (data) {\n    dataProcessor.setStorage(data, this.item)\n  }\n\n  // Save the current state to storage and generate a file\n  save (data) {\n    fileProcessor.save(data, this.item)\n  }\n\n  // Open a file and parse it to restore a saved state\n  open (file, callback) {\n    let response\n\n    const processResults = result => {\n      // If correct filetype\n      if (file.name.endsWith('.lngd')) {\n        // Define correct file structure\n        const lexemeSchema = schema({\n          lexeme: String,\n          definition: String\n        })\n\n        const derivationSchema = schema({\n          derivation: String,\n          gloss: String,\n          definition: String\n        })\n\n        const DataSchema = schema({\n          words: Number,\n          type: ['any', 'single base', 'single derivation'],\n          lexemes: Array.of(lexemeSchema),\n          derivations: Array.of(derivationSchema)\n        })\n\n        let content = JSON.parse(result)\n\n        if (content.results) {\n          content.results.words = +content.results.words\n        }\n\n        if (DataSchema(content)) {\n          // If the file's content contains valid Data, load it\n          toast.success(`Data loaded from ${file.name}.`, {\n            autoClose: 5000,\n            className: 'toast-opened',\n            bodyClassName: 'toast-opened-body',\n            progressClassName: 'toast-opened-progress'\n          })\n\n          this.setStorage(content)\n\n          response = content\n        } else {\n          // If the file's content does not contain valid Data, show an error\n          toast.info(`The content of ${file.name} is invalid.`, {\n            autoClose: 5000,\n            className: 'toast-unopened',\n            bodyClassName: 'toast-unopened-body',\n            progressClassName: 'toast-unopened-progress'\n          })\n\n          // eslint-disable-next-line\n          console.error(DataSchema.errors(content))\n\n          response = false\n        }\n      } else {\n        // If incorrect filetype\n        toast.info('Wrong filetype selected.', {\n          autoClose: 5000,\n          className: 'toast-unopened',\n          bodyClassName: 'toast-unopened-body',\n          progressClassName: 'toast-unopened-progress'\n        })\n\n        response = false\n      }\n\n      callback(response)\n    }\n\n    if (window.FileReader) {\n      // If the browser has access to the File APIs, open the file\n      fileProcessor.openFile(file, processResults)\n    } else {\n      // If the browser can't access the File APIs, display a notification\n      toast.info('Your browser is unable to open files.', {\n        autoClose: 5000,\n        className: 'toast-unopened',\n        bodyClassName: 'toast-unopened-body',\n        progressClassName: 'toast-unopened-progress'\n      })\n\n      response = false\n      callback(response)\n    }\n  }\n\n  // Add a new row to the form\n  add (data, which) {\n    let newData = JSON.parse(JSON.stringify(data))\n    if (which === 'lex') {\n      newData.lexemes.push({ lexeme: '', definition: '' })\n    } else {\n      newData.derivations.push({ derivation: '', gloss: '', definition: '' })\n    }\n    return newData\n  }\n\n  // Remove a row from the form\n  clear (data, num, which) {\n    let newData = JSON.parse(JSON.stringify(data))\n    if (which === 'l') {\n      newData.lexemes.splice(num, 1)\n    } else {\n      newData.derivations.splice(num, 1)\n    }\n    return newData\n  }\n\n  // Update an input field\n  changeInput (data, num, which, val) {\n    let newData = JSON.parse(JSON.stringify(data))\n    switch (which) {\n      case 'lw':\n        newData.lexemes[num].lexeme = val\n        break\n      case 'ld':\n        newData.lexemes[num].definition = val\n        break\n      case 'da':\n        newData.derivations[num].derivation = val\n        break\n      case 'dl':\n        newData.derivations[num].gloss = val\n        break\n      case 'dd':\n        newData.derivations[num].definition = val\n        break\n      default:\n        break\n    }\n    return newData\n  }\n\n  // When the number of desired words is changed, create a new version of state\n  wordNumChange (data, val) {\n    val = +val\n    // Limit number entry to between 1 and 9999\n    if (val < 1) {\n      val = 1\n    } else if (val > 9999) {\n      val = 9999\n    }\n\n    // Only change state if the number is between 1 and 9999\n    if (val > 0 && val < 10000) {\n      let newData = JSON.parse(JSON.stringify(data))\n      newData.words = val\n      return newData\n    } else {\n      // Otherwise, keep state the same\n      return false\n    }\n  }\n\n  // Derive words from the data\n  derive (data) {\n    const newData = JSON.parse(JSON.stringify(data))\n    // Compute the total possible number of results\n    const computePossible = filter => {\n      if (filter === 'single base') {\n        return newData.derivations.length\n      } else if (filter === 'single derivation') {\n        return newData.lexemes.length\n      } else {\n        return newData.lexemes.length * newData.derivations.length\n      }\n    }\n    const possible = computePossible(newData.type)\n    // If the user has selected to derive more than the total number possible, limit the results to the number that is possible\n    let remaining = newData.words > possible ? possible : newData.words\n\n    // Classify each of the affixes\n    const derivations = newData.derivations.map(affix => {\n      affix.derivation = affix.derivation.replace(/-+/g, '-')\n      if (/-/.test(affix.derivation)) {\n        // If the affix entered contains a hyphen\n        if (affix.derivation.match(/-/g).length === 1) {\n          // If the affix entered caintains no more than one hyphen\n          if (/-$/.test(affix.derivation)) {\n            // Prefix\n            affix.gloss = `${affix.gloss}-`\n            return { prefix: affix }\n          } else if (/^-/.test(affix.derivation)) {\n            // Suffix\n            affix.gloss = `-${affix.gloss}`\n            return { suffix: affix }\n          } else {\n            // Circumfix\n            const circum = affix.derivation.split(/-/)\n            let prefix = JSON.parse(JSON.stringify(affix))\n            let suffix = JSON.parse(JSON.stringify(affix))\n            prefix.derivation = `${circum[0]}-`\n            prefix.gloss = `${prefix.gloss}-`\n            suffix.derivation = `-${circum[1]}`\n            suffix.gloss = `-${suffix.gloss}`\n            return { prefix: prefix, suffix: suffix }\n          }\n        } else {\n          // If the affix entered contains more than one hyphen\n          return {\n            error: `The affix ${affix.derivation} contains too many hyphens.`\n          }\n        }\n      } else {\n        // If the affix entered contains no hyphens\n        return { error: `The affix ${affix.derivation} is missing a hyphen.` }\n      }\n    })\n\n    // Attach words to their affixes on the correct side(s)\n    const attachAffix = (lexeme, affix) => {\n      return {\n        prefix: affix.prefix,\n        lexeme: lexeme,\n        suffix: affix.suffix,\n        error: affix.error\n      }\n    }\n\n    // Derive from a single base\n    const deriveFromSingleBase = () => {\n      const base =\n        newData.lexemes[Math.floor(Math.random() * newData.lexemes.length)]\n      const list = []\n      while (remaining > 0) {\n        const randInd = Math.floor(Math.random() * derivations.length)\n        const randAff = derivations[randInd]\n        list.push(attachAffix(base, randAff))\n        derivations.splice(randInd, 1)\n        remaining--\n      }\n      return list\n    }\n\n    // Derive from a single derivation\n    const deriveFromSingleDerivation = () => {\n      const der = derivations[Math.floor(Math.random() * derivations.length)]\n      const list = []\n      while (remaining > 0) {\n        const randInd = Math.floor(Math.random() * newData.lexemes.length)\n        const randLex = newData.lexemes[randInd]\n        list.push(attachAffix(randLex, der))\n        newData.lexemes.splice(randInd, 1)\n        remaining--\n      }\n      return list\n    }\n\n    // Derive from any base and any derivation\n    const deriveFromAny = () => {\n      const list = []\n      // Find only unique pairs of lexemes and affixes\n      const getUniqueItem = () => {\n        const randLex =\n          newData.lexemes[Math.floor(Math.random() * newData.lexemes.length)]\n        const randAff =\n          derivations[Math.floor(Math.random() * derivations.length)]\n        let newItem = attachAffix(randLex, randAff)\n        let isUnique = true\n        for (let i = 0; i < list.length; i++) {\n          if (JSON.stringify(newItem) === JSON.stringify(list[i])) {\n            isUnique = false\n            break\n          }\n        }\n        if (!isUnique) {\n          newItem = getUniqueItem()\n        }\n        return newItem\n      }\n      while (remaining > 0) {\n        list.push(getUniqueItem())\n        remaining--\n      }\n      return list\n    }\n\n    if (newData.type === 'single base') {\n      return { newWords: deriveFromSingleBase(), possible: possible }\n    } else if (newData.type === 'single derivation') {\n      return { newWords: deriveFromSingleDerivation(), possible: possible }\n    } else {\n      return { newWords: deriveFromAny(), possible: possible }\n    }\n  }\n}\n\nconst derivService = new DerivService()\n\nexport default derivService\n","import * as v from '../../styles/variables'\n\nconst styles = {\n  wordsInput: {\n    width: `${v.ms6}rem`\n  },\n  derivRow: {\n    width: '100%',\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'baseline',\n    alignContent: 'space-between'\n  },\n  outputRow: {\n    justifyContent: 'flex-start'\n  },\n  columnLabel: {\n    margin: {\n      top: `${v.ms0}rem`,\n      bottom: 0\n    }\n  },\n  lexemeInput: {\n    width: `${2 * v.ms5}rem`\n  },\n  lexemeDefInput: {\n    flexGrow: 1\n  },\n  wordLabel: {\n    width: `${2 * v.ms5}rem`\n  },\n  definitionLabel: {\n    flexGrow: 1\n  },\n  derivationInput: {\n    width: `${2 * v.ms4}rem`\n  },\n  affixLabel: {\n    width: `${2 * v.ms4}rem`\n  },\n  derivationGlossInput: {\n    width: `${2 * v.ms5}rem`\n  },\n  glossLabel: {\n    width: `${2 * v.ms5}rem`\n  },\n  derivationDefInput: {\n    flexGrow: 1\n  },\n  addingRow: {\n    width: '100%',\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'flex-end',\n    alignItems: 'baseline',\n    alignContent: 'space-between',\n    padding: {\n      top: 1,\n      right: 0,\n      bottom: 1,\n      left: 0\n    },\n    margin: {\n      top: 1,\n      right: 0,\n      bottom: 1,\n      left: 0\n    }\n  },\n  outputBox: {\n    margin: {\n      right: `${v.ms0}rem`,\n      left: `${v.ms0}rem`\n    },\n    '&:first-child': {\n      marginLeft: 0\n    },\n    '&:last-child': {\n      marginRight: 0\n    }\n  },\n  rowNumber: {\n    width: `${v.ms4}rem`\n  },\n  term: {\n    marginBottom: 0,\n    fontWeight: 'bold'\n  },\n  gloss: {\n    marginBottom: 0\n  },\n  lexGloss: {\n    fontStyle: 'italic'\n  },\n  affixGloss: {\n    textTransform: 'lowercase',\n    fontVariant: 'small-caps',\n    borderBottom: {\n      width: 1,\n      style: 'dotted',\n      color: v.blu.string()\n    },\n    transition: ['border-bottom', '200ms']\n  },\n  affixDef: {\n    color: v.black.lighten(5).string(),\n    fontSize: `${v.ms0}rem`,\n    visibility: 'hidden',\n    opacity: 0,\n    transition: [\n      {\n        property: 'opacity',\n        duration: '200ms'\n      },\n      {\n        property: 'visibility',\n        duration: '0ms',\n        delay: '200ms'\n      }\n    ]\n  },\n  hoveredGloss: {\n    borderBottom: {\n      width: 1,\n      style: 'dotted',\n      color: v.ong.string()\n    }\n  },\n  hoveredDef: {\n    visibility: 'visible',\n    opacity: 1,\n    transition: [\n      {\n        property: 'opacity',\n        duration: '200ms'\n      },\n      {\n        property: 'visibility',\n        duration: '0ms',\n        delay: '0ms'\n      }\n    ]\n  }\n}\n\nexport default styles\n","import React from 'react'\nimport injectSheet from 'react-jss'\nimport PropTypes from 'prop-types'\n\nimport Tool from '../../components/Tool'\n\nimport DerivForm from './DerivForm'\nimport DerivResults from './DerivResults'\nimport derivService from './DerivService'\nimport styles from './styles'\n\nexport const derivInfo = {\n  title: 'Deriv',\n  link: 'deriv',\n  description:\n    'is a tool for modeling word derivation based on a given list of lexemes and affixes.'\n}\n\nclass Deriv extends React.Component {\n  constructor (props) {\n    super(props)\n    this.onChange = this.onChange.bind(this)\n    this.state = derivService.getData()\n  }\n\n  onChange (e) {\n    if (e.target.tagName === 'BUTTON') {\n      e.preventDefault()\n      if (e.target.type === 'submit') {\n        // Derive the output\n        const response = derivService.derive(this.state)\n        this.setState(prevState => ({\n          results: response\n        }))\n        // Save the current state to storage\n        derivService.setStorage(this.state)\n      } else if (e.target.id === 'save') {\n        // Save the current state to storage and generate a file\n        derivService.save(this.state)\n      } else if (e.target.id.slice(3) === 'Add') {\n        const which = e.target.id.slice(0, 3)\n        // When the add button is clicked, add a blank row to state\n        this.setState(prevState => derivService.add(this.state, which))\n      } else if (e.target.id.slice(1, 2) === 'c') {\n        // When a row is cleared, delete the corresponding row from state\n        const idNum = e.target.id.slice(2)\n        const which = e.target.id.slice(0, 1)\n        this.setState(prevState => derivService.clear(this.state, idNum, which))\n      }\n    } else if (e.target.type === 'file') {\n      e.preventDefault()\n      // Open a file and parse it to restore saved state\n      const file = e.target.files[0]\n      const updateState = response => {\n        if (response) {\n          // Only change state if the file was successfully opened\n          this.setState(prevState => response)\n        }\n      }\n      derivService.open(file, updateState)\n    } else {\n      const idNum = e.target.id.slice(2)\n      const which = e.target.id.slice(0, 2)\n      const val = e.target.value\n      const name = e.target.name\n      if (\n        which === 'lw' ||\n        which === 'ld' ||\n        which === 'da' ||\n        which === 'dl' ||\n        which === 'dd'\n      ) {\n        this.setState(prevState =>\n          derivService.changeInput(this.state, idNum, which, val)\n        )\n      } else if (e.target.name === 'words') {\n        const response = derivService.wordNumChange(this.state, val)\n        if (response) {\n          this.setState(prevState => response)\n        }\n        this.setState(prevState => derivService.wordNumChange(this.state, val))\n      } else {\n        this.setState(prevState => ({\n          [name]: val\n        }))\n      }\n    }\n  }\n\n  componentWillUnmount () {\n    this.setState(prevState => ({\n      results: undefined\n    }))\n  }\n\n  render () {\n    return (\n      <Tool toolInfo={derivInfo}>\n        <DerivForm\n          styles={this.props.classes}\n          data={this.state}\n          change={this.onChange}\n        />\n        <DerivResults\n          styles={this.props.classes}\n          results={this.state.results}\n        />\n      </Tool>\n    )\n  }\n}\n\nDeriv.propTypes = {\n  classes: PropTypes.object\n}\n\nexport default injectSheet(styles)(Deriv)\n","import React from 'react'\nimport injectSheet from 'react-jss'\nimport classNames from 'classnames'\nimport PropTypes from 'prop-types'\n\nimport Button from '../../components/Button'\nimport Form from '../../components/Form'\nimport sharedFormStyles from '../../components/Form/sharedFormStyles'\nimport Control from '../../components/Control'\nimport ControlSide from '../../components/Control/Side'\nimport ControlPiece from '../../components/Control/Piece'\n\nconst FrequenForm = props => {\n  const filePicker = React.createRef()\n\n  const invokeFilePicker = e => {\n    e.preventDefault()\n    filePicker.current.value = ''\n    filePicker.current.click()\n  }\n\n  return (\n    <Form>\n      <div className={classNames(props.styles.corpus, props.classes.part)}>\n        <h5 className={props.classes.sectionTitle}>Text Corpus</h5>\n        <textarea\n          className={classNames(props.styles.corpusInput, props.styles.input)}\n          id='corpus'\n          name='corpus'\n          value={props.state.corpus}\n          onChange={props.onChangeInput}\n          aria-label='Text corpus'\n        />\n      </div>\n      <div className={classNames(props.styles.consonants, props.classes.part)}>\n        <h5 className={props.classes.sectionTitle}>Consonants</h5>\n        <input\n          className={props.styles.input}\n          id='consonants'\n          name='consonants'\n          type='text'\n          value={props.state.consonants}\n          onChange={props.onChangeInput}\n          aria-label='Consonants'\n        />\n      </div>\n      <div className={classNames(props.styles.vowels, props.classes.part)}>\n        <h5 className={props.classes.sectionTitle}>Vowels</h5>\n        <input\n          className={props.styles.input}\n          id='vowels'\n          name='vowels'\n          type='text'\n          value={props.state.vowels}\n          onChange={props.onChangeInput}\n          aria-label='Vowels'\n        />\n      </div>\n      <Control addedClasses={props.classes.part}>\n        <ControlSide side='left'>\n          <ControlPiece>\n            <Button type='submit' ver='neutral' onClick={props.onAnalyze}>\n              Analyze\n            </Button>\n          </ControlPiece>\n          <ControlPiece>\n            <label htmlFor='distinguishCase'>\n              <input\n                type='checkbox'\n                id='distinguishCase'\n                name='distinguishCase'\n                value='distinguishCase'\n                checked={props.state.distinguishCase}\n                onChange={props.onChangeInput}\n              />{' '}\n              distinguish upper and lower case\n            </label>\n          </ControlPiece>\n        </ControlSide>\n        <ControlSide side='right'>\n          <ControlPiece>\n            <Button\n              id='save'\n              ver='success'\n              onClick={props.onChangeInput}\n              type='button'\n            >\n              Save\n            </Button>\n          </ControlPiece>\n          <ControlPiece>\n            <Button id='open' onClick={invokeFilePicker} type='button'>\n              Open\n            </Button>\n            <input\n              id='file'\n              name='file'\n              className={props.classes.hidden}\n              type='file'\n              ref={filePicker}\n              onChange={props.onChangeInput}\n            />\n          </ControlPiece>\n        </ControlSide>\n      </Control>\n    </Form>\n  )\n}\n\nFrequenForm.propTypes = {\n  classes: PropTypes.object,\n  styles: PropTypes.object,\n  state: PropTypes.object.isRequired,\n  onChangeInput: PropTypes.func.isRequired,\n  onAnalyze: PropTypes.func.isRequired\n}\n\nexport default injectSheet(sharedFormStyles)(FrequenForm)\n","import React from 'react'\nimport injectSheet from 'react-jss'\nimport classNames from 'classnames'\nimport 'react-vis/dist/style.css'\nimport {\n  FlexibleWidthXYPlot,\n  HorizontalBarSeries,\n  HorizontalGridLines,\n  VerticalGridLines,\n  XAxis,\n  YAxis,\n  Hint\n} from 'react-vis'\nimport PropTypes from 'prop-types'\n\nimport * as v from '../../styles/variables'\n\nimport Results from '../../components/Results'\nimport sharedResultsStyles from '../../components/Results/sharedResultsStyles'\nimport Control from '../../components/Control'\nimport ControlPiece from '../../components/Control/Piece'\n\nclass FrequenResults extends React.Component {\n  constructor (props) {\n    super(props)\n    this.onChangeInput = this.onChangeInput.bind(this)\n    this.twoDecimals = this.twoDecimals.bind(this)\n    this.whichData = this.whichData.bind(this)\n    this.headerCells = this.headerCells.bind(this)\n    this.dataRows = this.dataRows.bind(this)\n  }\n\n  onChangeInput (e) {\n    e.preventDefault()\n    const name = e.target.name\n    let val = e.target.val\n    this.setState(prevState => ({\n      [name]: val\n    }))\n  }\n\n  twoDecimals (num) {\n    return (Math.round(num * 100) / 100).toFixed(2)\n  }\n\n  whichData () {\n    switch (this.props.filterSeg) {\n      case 'consonants':\n        return this.props.results.consonants\n      case 'vowels':\n        return this.props.results.vowels\n      default:\n        return this.props.results.all\n    }\n  }\n\n  headerCells () {\n    let data = []\n    for (let prop in this.props.results) {\n      if (this.props.results.hasOwnProperty(prop)) {\n        let count = 0\n\n        this.props.results[prop].forEach(el => {\n          count += el.count\n        })\n\n        data.push({\n          name: prop,\n          total: count\n        })\n      }\n    }\n    const filterData = () => {\n      let newData = {}\n      data.forEach(el => {\n        if (el.name === this.props.filterSeg) {\n          newData = {\n            name: el.name,\n            total: el.total\n          }\n        }\n      })\n      return newData\n    }\n    if (this.props.filterSeg !== 'all') {\n      return (\n        <th className={this.props.classes.headerCell}>\n          {`% of ${filterData().name}`}\n          <br />\n          {`total: ${filterData().total}`}\n        </th>\n      )\n    } else {\n      return data.map((d, i) => (\n        <th className={this.props.classes.headerCell} key={i}>\n          {`% of ${d.name}`}\n          <br />\n          {`total: ${d.total}`}\n        </th>\n      ))\n    }\n  }\n\n  dataRows () {\n    const allData = JSON.parse(JSON.stringify(this.whichData())).sort(\n      (a, b) => {\n        return b.count - a.count\n      }\n    )\n\n    const findPercent = (arr, y) => {\n      let i = -1\n      for (let j = 0; j < arr.length; j++) {\n        if (arr[j].y === y) {\n          i = j\n        }\n      }\n\n      if (i > -1) {\n        return this.twoDecimals(arr[i].x) + '%'\n      } else {\n        return this.twoDecimals(0) + '%'\n      }\n    }\n\n    return allData.map(seg => {\n      const segment = seg.y\n      const count = seg.count\n      const percent = this.twoDecimals(seg.x)\n      const consPercent = findPercent(this.props.results.consonants, segment)\n      const vowsPercent = findPercent(this.props.results.vowels, segment)\n\n      return (\n        <tr className={this.props.classes.dataRow} key={seg.i}>\n          <td className={this.props.classes.dataCell}>{segment}</td>\n          <td className={this.props.classes.dataCell}>{count}</td>\n          <td className={this.props.classes.dataCell}>{percent + '%'}</td>\n          {this.props.filterSeg === 'all' ? (\n            <React.Fragment>\n              <td className={this.props.classes.dataCell}>\n                {seg.type === 'consonant' ? consPercent : null}\n              </td>\n              <td className={this.props.classes.dataCell}>\n                {seg.type === 'vowel' ? vowsPercent : null}\n              </td>\n            </React.Fragment>\n          ) : null}\n        </tr>\n      )\n    })\n  }\n\n  render () {\n    const axisStyle = {\n      fontSize: `${v.ms0}rem`,\n      text: {\n        fill: `${v.black.lighten(9).string()}`\n      },\n      line: {\n        stroke: `${v.black.lighten(20).string()}`\n      }\n    }\n\n    const gridStyle = { stroke: `${v.black.lighten(20).string()}` }\n\n    if (this.props.analyzed) {\n      return (\n        <Results>\n          <Control>\n            <ControlPiece>\n              <select\n                id='filterSeg'\n                name='filterSeg'\n                value={this.props.filterSeg}\n                onChange={this.props.onChangeInput}\n              >\n                <option value='all'>All Segments</option>\n                <option value='consonants'>Consonants</option>\n                <option value='vowels'>Vowels</option>\n              </select>\n            </ControlPiece>\n          </Control>\n          <div\n            className={classNames(\n              this.props.classes.barChart,\n              this.props.classes.resultsSection\n            )}\n          >\n            <FlexibleWidthXYPlot\n              yType='ordinal'\n              height={\n                v.ms1 * 16 * this.whichData().length /* bar height */ +\n                v.ms3 * (this.whichData().length - 1) /* bar spacing */ +\n                64 /* top and bottom axes */\n              }\n              margin={{\n                top: v.ms3 * 16,\n                right: v.ms5 * 16,\n                bottom: v.ms3 * 16,\n                left: v.ms5 * 16\n              }}\n              onMouseLeave={this.props.onMouseOut}\n            >\n              <VerticalGridLines style={gridStyle} />\n              <HorizontalGridLines style={gridStyle} />\n              <XAxis\n                tickFormat={t => `${t}%`}\n                style={axisStyle}\n                orientation='top'\n              />\n              <XAxis\n                tickFormat={t => `${t}%`}\n                style={axisStyle}\n                orientation='bottom'\n              />\n              <YAxis style={axisStyle} orientation='left' />\n              <YAxis style={axisStyle} orientation='right' />\n              <HorizontalBarSeries\n                data={this.whichData()}\n                animation\n                colorType='literal'\n                onValueMouseOver={this.props.onMouseOver}\n                onMouseOut={this.props.onMouseOut}\n              />\n              {this.props.hovered ? (\n                <Hint\n                  value={{\n                    [`/${this.props.hovered.y}/ (${\n                      this.props.hovered.type\n                    })`]: `${this.props.hovered.count} (${this.twoDecimals(\n                      this.props.hovered.x\n                    )}%)`\n                  }}\n                />\n              ) : null}\n            </FlexibleWidthXYPlot>\n          </div>\n          <div\n            className={classNames(\n              this.props.classes.dataTable,\n              this.props.classes.resultsSection\n            )}\n          >\n            <table className={this.props.classes.table}>\n              <thead className={this.props.classes.tableHead}>\n                <tr className={this.props.classes.headerRow}>\n                  <th className={this.props.classes.headerCell}>Segment</th>\n                  <th className={this.props.classes.headerCell}>Count</th>\n                  {this.headerCells()}\n                </tr>\n              </thead>\n              <tbody className={this.props.classes.tableBody}>\n                {this.dataRows()}\n              </tbody>\n            </table>\n          </div>\n        </Results>\n      )\n    } else {\n      return <div className={this.props.classes.results} />\n    }\n  }\n}\n\nFrequenResults.propTypes = {\n  classes: PropTypes.object,\n  results: PropTypes.object,\n  hovered: PropTypes.object,\n  filterSeg: PropTypes.string.isRequired,\n  analyzed: PropTypes.bool.isRequired,\n  onChangeInput: PropTypes.func.isRequired,\n  onMouseOver: PropTypes.func.isRequired,\n  onMouseOut: PropTypes.func.isRequired\n}\n\nexport default injectSheet(sharedResultsStyles)(FrequenResults)\n","import { toast } from 'react-toastify'\nimport schema from 'js-schema'\n\nimport dataProcessor from '../../tools/dataProcessor'\nimport fileProcessor from '../../tools/fileProcessor'\nimport * as v from '../../styles/variables'\n\nclass FrequenService {\n  constructor () {\n    this.item = 'frequen'\n    this.getData = this.getData.bind(this)\n    this.setStorage = this.setStorage.bind(this)\n    this.save = this.save.bind(this)\n    this.open = this.open.bind(this)\n    this.analyze = this.analyze.bind(this)\n  }\n\n  // Get the data from storage or from the default data\n  getData () {\n    return dataProcessor.getData(this.item)\n  }\n\n  // Store the current data in storage\n  setStorage (data) {\n    dataProcessor.setStorage(data, this.item)\n  }\n\n  // Save the current state to storage and generate a file\n  save (data) {\n    fileProcessor.save(data, this.item)\n  }\n\n  // Open a file and parse it to restore a saved state\n  open (file, callback) {\n    let response\n\n    const processResults = result => {\n      // If correct filetype\n      if (file.name.endsWith('.lngf')) {\n        // Define correct file structure\n        const resultSchema = schema({\n          color: String,\n          count: Number,\n          i: Number,\n          type: String,\n          x: Number,\n          y: String\n        })\n\n        const DataSchema = schema({\n          corpus: String,\n          consonants: String,\n          vowels: String,\n          distinguishCase: Boolean,\n          analyzed: Boolean,\n          '?results': {\n            all: Array.of(resultSchema),\n            consonants: Array.of(resultSchema),\n            vowels: Array.of(resultSchema)\n          },\n          '?hovered': resultSchema,\n          filter: String\n        })\n\n        let content = JSON.parse(result)\n\n        if (content.hovered) {\n          content.hovered.count = +content.hovered.count\n          content.hovered.i = +content.hovered.i\n          content.hovered.x = +content.hovered.x\n        }\n\n        if (content.results) {\n          content.results.all.forEach(el => {\n            el.count = +el.count\n            el.i = +el.i\n            el.x = +el.x\n          })\n          content.results.consonants.forEach(el => {\n            el.count = +el.count\n            el.i = +el.i\n            el.x = +el.x\n          })\n          content.results.vowels.forEach(el => {\n            el.count = +el.count\n            el.i = +el.i\n            el.x = +el.x\n          })\n        }\n\n        content.analyzed = false\n\n        if (DataSchema(content)) {\n          // If the file's content contains valid Data, load it\n          toast.success(`Data loaded from ${file.name}.`, {\n            autoClose: 5000,\n            className: 'toast-opened',\n            bodyClassName: 'toast-opened-body',\n            progressClassName: 'toast-opened-progress'\n          })\n\n          this.setStorage(content)\n\n          response = content\n        } else {\n          // If the file's content does not contain valid Data, show an error\n          toast.info(`The content of ${file.name} is invalid.`, {\n            autoClose: 5000,\n            className: 'toast-unopened',\n            bodyClassName: 'toast-unopened-body',\n            progressClassName: 'toast-unopened-progress'\n          })\n\n          // eslint-disable-next-line\n          console.error(DataSchema.errors(content))\n\n          response = false\n        }\n      } else {\n        // If incorrect filetype\n        toast.info('Wrong filetype selected.', {\n          autoClose: 5000,\n          className: 'toast-unopened',\n          bodyClassName: 'toast-unopened-body',\n          progressClassName: 'toast-unopened-progress'\n        })\n\n        response = false\n      }\n\n      callback(response)\n    }\n\n    if (window.FileReader) {\n      // If the browser has access to the File APIs, open the file\n      fileProcessor.openFile(file, processResults)\n    } else {\n      // If the browser can't access the File APIs, display a notification\n      toast.info('Your browser is unable to open files.', {\n        autoClose: 5000,\n        className: 'toast-unopened',\n        bodyClassName: 'toast-unopened-body',\n        progressClassName: 'toast-unopened-progress'\n      })\n\n      response = false\n      callback(response)\n    }\n  }\n\n  // Analyze the data\n  analyze (data) {\n    // Break the input into arrays and remove duplicates\n    const splitBySlash = arr => {\n      let newArr = Array.from(new Set(arr.split('/')))\n      // Remove any blanks\n      if (newArr.indexOf('') > -1) {\n        newArr.splice(newArr.indexOf(''), 1)\n      }\n      return newArr\n    }\n    // Break each element in an array into a sub-array\n    const makeSubArrays = arr => {\n      let newArr = []\n      arr.forEach(el => {\n        newArr.push(el.split(','))\n      })\n      return newArr\n    }\n    const consonants = makeSubArrays(splitBySlash(data.consonants))\n    const vowels = makeSubArrays(splitBySlash(data.vowels))\n\n    // Flatten arrays and make sure there are no duplicates\n    const flattenArrays = arr => Array.from(new Set([].concat(...arr)))\n    // Distinguish upper/lower case if that option is selected\n    const distinguishCase = arr => {\n      let newArr = []\n      if (!data.distinguishCase) {\n        arr.forEach(el => newArr.push(el.toLowerCase()))\n      } else {\n        newArr = arr\n      }\n      return Array.from(new Set(newArr))\n    }\n    // And sort the flattened arrays by length so the longest segments are first\n    const sortArrays = arr => {\n      return arr.sort((a, b) => b.length - a.length)\n    }\n    const consonantsFlat = sortArrays(\n      distinguishCase(flattenArrays(consonants))\n    )\n    const vowelsFlat = sortArrays(distinguishCase(flattenArrays(vowels)))\n\n    let rawResults = {}\n\n    // Add each element in the flattened arrays to the results object and indicate which type they are\n    const initResults = (arr, type) => {\n      arr.forEach(el => {\n        rawResults[el] = {}\n        rawResults[el].count = 0\n        rawResults[el].type = type\n      })\n    }\n    initResults(consonantsFlat, 'consonant')\n    initResults(vowelsFlat, 'vowel') // Currently, if an element appears in both consonants and vowels, its vowel instance will take precedence\n\n    // Label which segments are allophones\n    const labelAllophones = arr => {\n      arr.forEach((elArr, i) => {\n        if (elArr.length > 1) {\n          elArr.forEach((el, j) => {\n            if (j > 0) {\n              rawResults[arr[i][j]].allophoneOf = arr[i][0]\n            }\n          })\n        }\n      })\n    }\n    labelAllophones(consonants)\n    labelAllophones(vowels)\n\n    // Build a single array and sort by segment length\n    const fullArr = sortArrays(consonantsFlat.concat(vowelsFlat))\n\n    // If not distinguishing case, convert the corpus to lowercase\n    let corpus = data.distinguishCase ? data.corpus : data.corpus.toLowerCase()\n\n    // For every instance of the segment in the text, increment the count and slice the instance out of the text\n    const sliceAndCount = seg => {\n      if (corpus.indexOf(seg) > -1) {\n        rawResults[seg].count += 1\n        corpus =\n          corpus.slice(0, corpus.indexOf(seg)) +\n          corpus.slice(corpus.indexOf(seg) + seg.length)\n      }\n    }\n\n    // Loop through all segments counting and slicing all instances of each.\n    fullArr.forEach(el => {\n      while (corpus.indexOf(el) > -1) {\n        sliceAndCount(el)\n      }\n    })\n\n    // Find allophones and combine their counts\n    for (let seg in rawResults) {\n      if (rawResults.hasOwnProperty(seg)) {\n        if (rawResults[seg].hasOwnProperty('allophoneOf')) {\n          rawResults[rawResults[seg].allophoneOf].count += rawResults[seg].count\n          delete rawResults[seg]\n        }\n      }\n    }\n\n    // Assemble the data\n    const assembleData = filter => {\n      // Add the results to a results array\n      let resArr = []\n\n      for (let seg in rawResults) {\n        if (rawResults[seg].type === filter || filter === undefined) {\n          resArr.push({\n            segment: seg,\n            count: rawResults[seg].count,\n            type: rawResults[seg].type\n          })\n        }\n      }\n\n      // Sort by smallest count\n      resArr.sort((a, b) => {\n        return a.count - b.count\n      })\n\n      // Count the total number of counted segments\n      let count = 0\n\n      resArr.forEach(elObj => {\n        count += elObj.count\n      })\n\n      // If a segment occurs 0 times, remove it from the results\n      let numToRemove = 0\n\n      resArr.forEach(elObj => {\n        if (elObj.count === 0) {\n          numToRemove += 1\n        }\n      })\n\n      resArr.splice(0, numToRemove)\n\n      return resArr.map((d, i) => ({\n        x: (d.count / count) * 100,\n        y: d.segment,\n        count: d.count,\n        type: d.type,\n        i: i,\n        color:\n          d.type === 'consonant' ? v.blu.string() : v.blu.darken(0.2).string()\n      }))\n    }\n\n    const results = {\n      all: assembleData(),\n      consonants: assembleData('consonant'),\n      vowels: assembleData('vowel')\n    }\n\n    return results\n  }\n}\n\nconst frequenService = new FrequenService()\n\nexport default frequenService\n","import * as v from '../../styles/variables'\n\nconst styles = {\n  input: {\n    width: '100%'\n  },\n  corpusInput: {\n    height: `${2 * v.ms6}rem`\n  }\n}\n\nexport default styles\n","import React from 'react'\nimport injectSheet from 'react-jss'\nimport PropTypes from 'prop-types'\n\nimport Tool from '../../components/Tool'\n\nimport FrequenForm from './FrequenForm'\nimport FrequenResults from './FrequenResults'\nimport frequenService from './FrequenService'\nimport styles from './styles'\n\nexport const frequenInfo = {\n  title: 'Frequen',\n  link: 'frequen',\n  description: 'is a tool for analyzing phoneme frequencies in a given text.'\n}\n\nclass Frequen extends React.Component {\n  constructor (props) {\n    super(props)\n    this.onChangeInput = this.onChangeInput.bind(this)\n    this.onAnalyze = this.onAnalyze.bind(this)\n    this.onMouseOver = this.onMouseOver.bind(this)\n    this.onMouseOut = this.onMouseOut.bind(this)\n    this.state = frequenService.getData()\n  }\n\n  onChangeInput (e) {\n    if (e.target.tagName === 'BUTTON') {\n      e.preventDefault()\n      if (e.target.id === 'save') {\n        // Save the current state to storage and generate a file\n        frequenService.save(this.state)\n      }\n    } else if (e.target.type === 'file') {\n      e.preventDefault()\n      // Open a file and parse it to restore a saved state\n      const file = e.target.files[0]\n      const updateState = response => {\n        if (response) {\n          // Only change state if the file was successfully opened\n          this.setState(prevState => response)\n        }\n      }\n      frequenService.open(file, updateState)\n    } else {\n      const val =\n        e.target.type === 'checkbox' ? e.target.checked : e.target.value\n      const name = e.target.name\n      this.setState(prevState => ({\n        [name]: val\n      }))\n    }\n  }\n\n  onAnalyze (e) {\n    e.preventDefault()\n    this.setState(\n      prevState => ({\n        analyzed: false\n      }),\n      () => {\n        // Save the current state to storage\n        frequenService.setStorage(this.state)\n\n        const response = frequenService.analyze(this.state)\n\n        this.setState(prevState => ({\n          results: response,\n          analyzed: true\n        }))\n      }\n    )\n  }\n\n  onMouseOver (datapoint) {\n    this.setState(prevState => ({\n      hovered: datapoint\n    }))\n  }\n\n  onMouseOut () {\n    this.setState(prevState => ({\n      hovered: undefined\n    }))\n  }\n\n  render () {\n    return (\n      <Tool toolInfo={frequenInfo}>\n        <FrequenForm\n          styles={this.props.classes}\n          state={this.state}\n          onChangeInput={this.onChangeInput}\n          onAnalyze={this.onAnalyze}\n        />\n        <FrequenResults\n          styles={this.props.classes}\n          results={this.state.results}\n          hovered={this.state.hovered}\n          filterSeg={this.state.filterSeg}\n          analyzed={this.state.analyzed}\n          onChangeInput={this.onChangeInput}\n          onMouseOver={this.onMouseOver}\n          onMouseOut={this.onMouseOut}\n        />\n      </Tool>\n    )\n  }\n}\n\nFrequen.propTypes = {\n  classes: PropTypes.object\n}\n\nexport default injectSheet(styles)(Frequen)\n","import React from 'react'\nimport injectSheet from 'react-jss'\nimport PropTypes from 'prop-types'\n\nimport Form from '../../components/Form'\nimport sharedFormStyles from '../../components/Form/sharedFormStyles'\n\nconst TreeForm = props => <Form />\n\nTreeForm.propTypes = {\n  classes: PropTypes.object,\n  styles: PropTypes.object\n}\n\nexport default injectSheet(sharedFormStyles)(TreeForm)\n","import React from 'react'\nimport injectSheet from 'react-jss'\nimport PropTypes from 'prop-types'\n\nimport Results from '../../components/Results'\nimport sharedResultsStyles from '../../components/Results/sharedResultsStyles'\n\nconst TreeResults = props => <Results />\n\nTreeResults.propTypes = {\n  classes: PropTypes.object,\n  styles: PropTypes.object\n}\n\nexport default injectSheet(sharedResultsStyles)(TreeResults)\n","const styles = {}\n\nexport default styles\n","import React from 'react'\nimport injectSheet from 'react-jss'\nimport PropTypes from 'prop-types'\n\nimport Notice from '../../components/Notice'\nimport Tool from '../../components/Tool'\n\nimport TreeForm from './TreeForm'\nimport TreeResults from './TreeResults'\nimport styles from './styles'\n\nexport const treeInfo = {\n  title: 'Tree',\n  link: 'tree',\n  description: 'is a tool for drawing and labeling syntax trees.'\n}\n\nconst Tree = props => (\n  <Tool toolInfo={treeInfo}>\n    <Notice>This tool is still in planning.</Notice>\n    <TreeForm styles={props.classes} />\n    <TreeResults styles={props.classes} />\n  </Tool>\n)\n\nTree.propTypes = {\n  classes: PropTypes.object\n}\n\nexport default injectSheet(styles)(Tree)\n","import React from 'react'\nimport injectSheet from 'react-jss'\nimport PropTypes from 'prop-types'\n\nimport Form from '../../components/Form'\nimport sharedFormStyles from '../../components/Form/sharedFormStyles'\n\nconst LexForm = props => <Form />\n\nLexForm.propTypes = {\n  classes: PropTypes.object,\n  styles: PropTypes.object\n}\n\nexport default injectSheet(sharedFormStyles)(LexForm)\n","import React from 'react'\nimport injectSheet from 'react-jss'\nimport PropTypes from 'prop-types'\n\nimport Results from '../../components/Results'\nimport sharedResultsStyles from '../../components/Results/sharedResultsStyles'\n\nconst LexResults = props => <Results />\n\nLexResults.propTypes = {\n  classes: PropTypes.object,\n  styles: PropTypes.object\n}\n\nexport default injectSheet(sharedResultsStyles)(LexResults)\n","const styles = {}\n\nexport default styles\n","import React from 'react'\nimport injectSheet from 'react-jss'\nimport PropTypes from 'prop-types'\n\nimport Notice from '../../components/Notice'\nimport Tool from '../../components/Tool'\n\nimport LexForm from './LexForm'\nimport LexResults from './LexResults'\nimport styles from './styles'\n\nexport const lexInfo = {\n  title: 'Lex',\n  link: 'lex',\n  description:\n    'is a tool for building a lexicon or dictionary for a language and exporting it to various formats.'\n}\n\nconst Lex = props => (\n  <Tool toolInfo={lexInfo}>\n    <Notice>This tool is still in planning.</Notice>\n    <LexForm styles={props.classes} />\n    <LexResults styles={props.classes} />\n  </Tool>\n)\n\nLex.propTypes = {\n  classes: PropTypes.object\n}\n\nexport default injectSheet(styles)(Lex)\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport classNames from 'classnames'\nimport PropTypes from 'prop-types'\n\nconst HomePanel = props => (\n  <Link\n    to={props.linkTo}\n    className={\n      props.disabled\n        ? classNames(props.classes.panel, props.classes.disabled)\n        : props.classes.panel\n    }\n  >\n    <h2 className={props.classes.toolTitle}>{props.toolTitle}</h2>\n    <p className={props.classes.toolDescription}>{props.children}</p>\n  </Link>\n)\n\nHomePanel.propTypes = {\n  classes: PropTypes.object,\n  linkTo: PropTypes.string.isRequired,\n  toolTitle: PropTypes.string.isRequired,\n  children: PropTypes.string.isRequired,\n  disabled: PropTypes.bool\n}\n\nexport default HomePanel\n","import * as v from '../../styles/variables'\n\nconst styles = {\n  grid: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'baseline',\n    flexWrap: 'wrap'\n  },\n  panel: {\n    '&:link, &:visited, &:hover, &:active': {\n      color: v.black.string(),\n      width: '49%',\n      marginBottom: `${v.lnht}rem`,\n      padding: `${v.ms0}rem`,\n      textDecoration: 'none',\n      boxSizing: 'border-box'\n    },\n    '&:hover': {\n      outline: {\n        width: '1px',\n        style: 'solid',\n        color: v.blu\n          .darken(0.15)\n          .alpha(0.3)\n          .string()\n      }\n    }\n  },\n  disabled: {\n    opacity: 0.5,\n    '&:hover': {\n      opacity: 0.8\n    },\n    '& p': {\n      fontStyle: 'italic'\n    }\n  },\n  toolDescription: {\n    margin: 0\n  }\n}\n\nexport default styles\n","import React from 'react'\nimport injectSheet from 'react-jss'\nimport PropTypes from 'prop-types'\n\nimport { siteTitle } from '../../App'\n\nimport { genInfo } from '../Gen'\nimport { morphInfo } from '../Morph'\nimport { derivInfo } from '../Deriv'\nimport { frequenInfo } from '../Frequen'\nimport { treeInfo } from '../Tree'\nimport { lexInfo } from '../Lex'\n\nimport HomePanel from './HomePanel'\nimport styles from './styles'\n\nconst Home = props => (\n  <div className={props.classes.home}>\n    <p className={props.classes.siteDescription}>\n      Langua is a suite of language tools that can be used for testing,\n      experimentation, learning, analysis, or creation.\n    </p>\n    <div className={props.classes.grid}>\n      <HomePanel\n        classes={props.classes}\n        linkTo={`${genInfo.link}/`}\n        toolTitle={genInfo.title}\n      >\n        {`${siteTitle}${genInfo.title} ${genInfo.description}`}\n      </HomePanel>\n      <HomePanel\n        classes={props.classes}\n        linkTo={`${morphInfo.link}/`}\n        toolTitle={morphInfo.title}\n        disabled\n      >\n        {`${siteTitle}${morphInfo.title} ${morphInfo.description}`}\n      </HomePanel>\n      <HomePanel\n        classes={props.classes}\n        linkTo={`${derivInfo.link}/`}\n        toolTitle={derivInfo.title}\n      >\n        {`${siteTitle}${derivInfo.title} ${derivInfo.description}`}\n      </HomePanel>\n      <HomePanel\n        classes={props.classes}\n        linkTo={`${frequenInfo.link}/`}\n        toolTitle={frequenInfo.title}\n      >\n        {`${siteTitle}${frequenInfo.title} ${frequenInfo.description}`}\n      </HomePanel>\n      <HomePanel\n        classes={props.classes}\n        linkTo={`${treeInfo.link}/`}\n        toolTitle={treeInfo.title}\n        disabled\n      >\n        {`${siteTitle}${treeInfo.title} ${treeInfo.description}`}\n      </HomePanel>\n      <HomePanel\n        classes={props.classes}\n        linkTo={`${lexInfo.link}/`}\n        toolTitle={lexInfo.title}\n        disabled\n      >\n        {`${siteTitle}${lexInfo.title} ${lexInfo.description}`}\n      </HomePanel>\n    </div>\n    <p className={props.classes.siteDescription}>\n      {siteTitle} is a full Progressive Web App; once the site has been loaded,\n      its full functionality is available even offline. {siteTitle} can also be\n      added to the homescreen of your tablet or mobile device for easy access.\n    </p>\n  </div>\n)\n\nHome.propTypes = {\n  classes: PropTypes.object\n}\n\nexport default injectSheet(styles)(Home)\n","const styles = {}\n\nexport default styles\n","import React from 'react'\nimport { Helmet } from 'react-helmet'\nimport injectSheet from 'react-jss'\nimport PropTypes from 'prop-types'\n\nimport styles from './styles'\nimport ButtonLink from '../Button/Link'\n\nimport { canonical, siteTitle } from '../../App'\n\nconst Help = props => (\n  <div className={props.classes.help}>\n    <Helmet>\n      <title>\n        {siteTitle}\n        {props.toolInfo.title} Help\n      </title>\n      <meta\n        name='description'\n        content={`${siteTitle}${props.toolInfo.title} ${\n          props.toolInfo.description\n        }`}\n      />\n      <link rel='canonical' href={`${canonical + props.toolInfo.link}/help/`} />\n    </Helmet>\n    <ButtonLink route={`/${props.toolInfo.link}`}>Back</ButtonLink>\n    <h2 className='toolTitle'>{`Langua${props.toolInfo.title}`} Help</h2>\n    <p id='description'>\n      {siteTitle}\n      {props.toolInfo.title} {props.toolInfo.description}\n    </p>\n    {props.children}\n  </div>\n)\n\nHelp.propTypes = {\n  classes: PropTypes.object,\n  toolInfo: PropTypes.objectOf(PropTypes.string).isRequired,\n  children: PropTypes.oneOfType([\n    PropTypes.element,\n    PropTypes.string,\n    PropTypes.arrayOf(\n      PropTypes.oneOfType([PropTypes.element, PropTypes.string])\n    )\n  ])\n}\n\nexport default injectSheet(styles)(Help)\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport { siteTitle } from '../../../App'\nimport Help from '../../../components/Help'\n\nimport { derivInfo } from '../'\n\nconst DerivHelp = props => (\n  <Help toolInfo={derivInfo}>\n    <h3 id='using'>\n      Using {siteTitle}\n      {derivInfo.title}\n    </h3>\n    <h4 id='lexemes'>Lexemes</h4>\n    <p>\n      Enter a list of all lexemes that should be used as roots to be derived\n      from. Also add a brief gloss for each of the lexemes.\n    </p>\n    <h4 id='derivations'>Derivational Affixes</h4>\n    <p>\n      Enter a list of all derivational affixes that should be used to derive new\n      words. Each gloss should contain a single hyphen that marks the point at\n      which the affix attaches to the root. If the hyphen is placed at the\n      start, the affix will be a suffix. If the hyphen is placed at the end, the\n      affix will be a prefix. If the hyphen is placed within the affix, it will\n      be split and attached as a circumfix on either side of the root. Add a\n      gloss for each of the affixes and a brief definition of the change the\n      affix creates.\n    </p>\n    <h4 id='derive'>Derive</h4>\n    <p>\n      When the list of lexemes and affixes is ready, click the Derive button to\n      generate a list of roots with possible derivational affixes added to them.\n      Hovering over the affix glosses in the results will display the\n      affix&rsquo;s definition below that gloss.\n    </p>\n    <p>\n      There are also a couple adjustments you can make. First, you can choose\n      the total number of words that should be derived from the input. The tool\n      will always filter out duplicates, so there will never be more results\n      than are mathematically possible given the input. Second, you can choose\n      the type of output that should be generated. You can choose to use just a\n      single root and generate the chosen number of words using different\n      affixes on that root, you can choose to use just a single affix and\n      generate the chosen number of words by attaching it to different roots, or\n      you can choose to randomly combine any root with any affix.\n    </p>\n    <p>\n      After the derivations have been generated, some statistics are shown\n      below, including how many derivations were printed to the output and how\n      many derivations are possible based on the number of lexemes and affixes\n      provided.\n    </p>\n    <h4 id='files'>Saving and Loading Settings</h4>\n    <p>\n      Clicking the <strong>Save</strong> button will save the current settings\n      to the browser&rsquo;s local storage and generate a small{' '}\n      <code>.lngd</code> text file containing the current settings that can be\n      saved to your disk. This <code>.lngd</code> file can be loaded using the{' '}\n      <strong>Open</strong> button to reload saved settings.\n    </p>\n    <h3 id='acknowledgments'>Acknowledgments</h3>\n    <p>\n      Much thanks should be given to Jan Strasser and{' '}\n      <a\n        href='http://akana.conlang.org/tools/derivizer.html'\n        target='_blank'\n        rel='noopener noreferrer'\n      >\n        the Derivizer\n      </a>\n      . {siteTitle}\n      {derivInfo.title} was mainly built as a modernized and updated version of\n      the Derivizer.\n    </p>\n  </Help>\n)\n\nDerivHelp.propTypes = {\n  classes: PropTypes.object\n}\n\nexport default DerivHelp\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport { siteTitle } from '../../../App'\nimport Help from '../../../components/Help'\nimport Notice from '../../../components/Notice'\n\nimport { frequenInfo } from '../'\n\nconst FrequenHelp = props => (\n  <Help toolInfo={frequenInfo}>\n    <h3 id='using'>\n      Using {siteTitle}\n      {frequenInfo.title}\n    </h3>\n    <h4 id='corpus'>Text Corpus</h4>\n    <p>\n      Input a corpus of text in the <strong>Text Corpus</strong> field. This is\n      the text that will be analyzed. The text can be phomic or phonetic, or it\n      can simply use the language&rsquo;s standard spelling system. For best\n      results, however, each sound that should be analyzed separately will need\n      its own grapheme or grapheme cluster. For example, in English, the letter{' '}\n      <code>y</code> would need to be differentiated based on when it occurs as\n      a consonant vs. when it occurs as a vowel. It does not matter if\n      punctuation is removed from the corpus, as any graphemes not identified\n      for analysis in the next step will be ignored by the tool.\n    </p>\n    <h4 id='phonemes'>Phonemes</h4>\n    <p>\n      Next, add a list of consonants and vowels accordingly to the{' '}\n      <strong>Consonants</strong> and <strong>Vowels</strong> lists. Separate\n      each of the segments with a forward slash (<code>/</code>\n      ). These segments can be single graphemes or grapheme clusters, and a\n      cluster can contain characters that are used in shorter segments. For\n      example, given the corpus <code>kanto</code> and the consonants{' '}\n      <code>n/t/nt</code>, the tool will identify one occurance of{' '}\n      <code>nt</code>, but no occurances of <code>n</code> or <code>t</code>.\n      Any graphemes not identified for analysis will be ignored. In the previous\n      example, since <code>k</code> was not added to the list of consonants, the\n      tool would not count its occurance.\n    </p>\n    <h4 id='allophones'>Allophones</h4>\n    <p>\n      Allophones can be added after a segment to indicate that multiple segments\n      should all be counted as occurances of the same segment. Separate\n      allophones with a comma (<code>,</code>\n      ). For example, given the corpus <code>potaná</code>, if the vowels list\n      contained <code>a/á/o</code>, the tool would identify one occurance each\n      of <code>a</code>, <code>á</code>, and <code>o</code>, but if the vowels\n      list contained <code>a,á/o</code>, the tool would identify two occurances\n      of <code>a</code> and one occurance of <code>o</code>.\n    </p>\n    <h4 id='analysis'>Analysis</h4>\n    <p>\n      When ready, click the <strong>Analyze</strong> button to run the analysis.\n      The tool will draw a graph and display a table showing the frequencies of\n      each of the identified segments in the text corpus. Segments that never\n      occur will be omitted from the graph and table.\n    </p>\n    <h4 id='filtering'>Filtering</h4>\n    <Notice>This feature is still in development.</Notice>\n    <p>\n      After a text has been analyzed, the results can be filtered to show only\n      certain segments. Choosing a filter will show the percentages in the data\n      as it compares to only segments of that type, rather than comparing to all\n      segments.\n    </p>\n    <p>\n      Currently, the results can be filtered to show only consonants or only\n      vowels. Additional filtering options will be added in the future.\n    </p>\n    <h4 id='files'>Saving and Loading Settings</h4>\n    <p>\n      Clicking the <strong>Save</strong> button will save the current settings\n      to the browser’s local storage and generate a small <code>.lngf</code>{' '}\n      text file containing the current settings that can be saved to your disk.\n      This <code>.lngf</code> file can be loaded using the <strong>Open</strong>{' '}\n      button to reload saved settings.\n    </p>\n    <h3 id='acknowledgments'>Acknowledgments</h3>\n    <p>\n      Much thanks should be given to Jan Strasser and{' '}\n      <a\n        href='http://akana.conlang.org/tools/frequentizer.html'\n        target='_blank'\n        rel='noopener noreferrer'\n      >\n        the Frequentizer\n      </a>\n      . {siteTitle}\n      {frequenInfo.title} was mainly built as a modernized and updated version\n      of the Frequentizer.\n    </p>\n  </Help>\n)\n\nFrequenHelp.propTypes = {\n  classes: PropTypes.object\n}\n\nexport default FrequenHelp\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport { siteTitle } from '../../../App'\nimport Help from '../../../components/Help'\nimport Notice from '../../../components/Notice'\n\nimport { genInfo } from '../'\n\nconst GenHelp = props => (\n  <Help toolInfo={genInfo}>\n    <h3 id='using'>\n      Using {siteTitle}\n      {genInfo.title}\n    </h3>\n    <p>\n      The most important part of the tool is the <strong>Pattern</strong>. This\n      field defines how words will be formed using a specific syntax, defined{' '}\n      <a href='#syntax'>below</a>. This field can define specific letters that\n      can be used, or it can contain references to Subpatterns.\n    </p>\n    <p>\n      Up to 26 <strong>Subpatterns</strong> are available for use. These\n      subpatterns are defined in exactly the same way as the Pattern. Their\n      power lies in the fact that each Subpattern can be referenced by the\n      Pattern, allowing significantly more variability in word generation.\n    </p>\n    <p>\n      In the most common usage, a Subpattern generally represents a class of\n      phonemes while the Pattern represents the possible combinations of all the\n      phoneme classes. For example, one might use a Subpattern named{' '}\n      <code>V</code> to represent vowels, <code>C</code> to represent\n      consonants, and <code>N</code> to represent nasals. Alternatively, one\n      might use a Subpattern named <code>O</code> to represent the syllable\n      onset, <code>N</code> to represent the nucleus, and <code>C</code> to\n      represent the coda. There is great flexibility in Subpattern use.\n    </p>\n    <h4 id='syntax'>Syntax</h4>\n    <p>\n      The syntax is identical for all Pattern and Subpattern fields. Uppercase\n      versions of the standard English letters (e.g. <code>C</code>,{' '}\n      <code>V</code>, or <code>N</code>) are variables referring to Subpatterns\n      while any other letter (e.g. <code>a</code>, <code>s</code>, or{' '}\n      <code>n</code>) represents that specific glyph.\n    </p>\n    <h5 id='options'>\n      Options &ndash; <code>/</code>\n    </h5>\n    <p>\n      Multiple options can be separated using forward slashes (<code>/</code>\n      ). For each word, the tool will randomly select one of the options. By\n      default, each option will have the same chance of being chosen. This can\n      be changed by assigning <a href='#weights'>weights</a>. For example, with\n      the Subpatterns <code>V: a/i</code>, <code>C: t/s</code>, and{' '}\n      <code>N: m/n</code> and the Pattern <code>CVN</code>, the tool will output\n      the words <samp>sam tan tam tin sim san tim sin</samp>.\n    </p>\n    <h5 id='units'>\n      Single Units &ndash; <code>[ ]</code>\n    </h5>\n    <Notice>This functionality has not yet been implemented.</Notice>\n    <p>\n      Everything contained within brackets (<code>[ ]</code>) is treated as a\n      single unit. For example, the Pattern <code>as[tu/top/kan]</code> will\n      produce the output <code>astu astop askan</code>. Brackets and parentheses\n      can be nested unlimitedly.\n    </p>\n    <h5 id='optional'>\n      Optional Units &ndash; <code>( )</code>\n    </h5>\n    <Notice>This functionality has not yet been implemented.</Notice>\n    <p>\n      Everything contained within parentheses (<code>( )</code>) is treated as a\n      single unit that is optional. For example, the Pattern{' '}\n      <code>as(tu/top/kan)</code> will produce the output{' '}\n      <code>as astu astop askan</code>. Parentheses and brackets can be nested\n      unlimitedly.\n    </p>\n    <h5 id='weights'>\n      Weights &ndash; <code>*</code>\n    </h5>\n    <Notice>This functionality has not yet been implemented.</Notice>\n    <p>\n      Weights can be added to certain choices using an asterisk <code>*</code>{' '}\n      and a number to improve the likelihood of it being chosen. For example,\n      with the pattern <code>a/e*3/i*2/o/u*5</code>, the tool would output{' '}\n      <code>a</code> or <code>o</code> with equal probability, but compared to\n      these would be twice as likely to output <code>i</code>, three times as\n      likely to output <code>e</code>, and five times as likely to output{' '}\n      <code>u</code>. The number used as a weight must be an integer between 1\n      and 128.\n    </p>\n    <h5 id='filtering'>\n      Filtering &ndash; <code>^</code>\n    </h5>\n    <Notice>This functionality has not yet been implemented.</Notice>\n    <p>\n      Filtering can be added to units using a caret <code>^</code> and a\n      potential output to restrict the possible results. Multiple filters can be\n      added to the same unit to filter out multiple options. For example, with\n      the Subpattern <code>V: a/i/u</code> and hte Pattern{' '}\n      <code>t[VV]^aa^ii^uu</code>, the tool will output{' '}\n      <code>tai tau tia tiu tua tui</code>, filtering out{' '}\n      <code>taa tii tuu</code>.\n    </p>\n    <h5 id='escaping'>\n      Esaping Characters &ndash; <code>&quot; &quot;</code>\n    </h5>\n    <Notice>This functionality has not yet been implemented.</Notice>\n    <p>\n      Special characters otherwise used for the tool&rsquo;s syntax can be\n      escaped using double quotes <code>&quot; &quot;</code>. For example, with\n      the Subpattern <code>V: a/i/u</code> and the Pattern{' '}\n      <code>Vt&quot;V[n/m]&quot;</code>, the tool will produce the output{' '}\n      <code>atV[n/m] itV[n/m] utV[n/m]</code>.\n    </p>\n    <h4 id='generating'>Generating Words</h4>\n    <p>\n      Once the Pattern and all Subpatterns have been set up, you can click the{' '}\n      <strong>Generate</strong> button to generate words. There are also several\n      adjustments you can make, including the total number of words that should\n      be generated, whether each word should be written on a new line, and\n      whether the tool should filter out duplicate words.\n    </p>\n    <p>\n      After the words have been generated, some statistics are shown below,\n      including how many words were printed to the output, how many duplicates\n      were filtered out of the results (if any), and how many words are possible\n      based on the given Pattern and Subpatterns. (Note that the number of{' '}\n      <em>unique</em> words possible may actually be lower if there are multiple\n      ways to obtain the same word.)\n    </p>\n    <h4 id='files'>Saving and Loading Settings</h4>\n    <p>\n      Clicking the <strong>Save</strong> button will save the current settings\n      to the browser’s local storage and generate a small <code>.lngg</code>{' '}\n      text file containing the current settings that can be saved to your disk.\n      This <code>.lngg</code> file can be loaded using the <strong>Open</strong>{' '}\n      button to reload saved settings.\n    </p>\n    <h3 id='acknowledgments'>Acknowledgments</h3>\n    <p>\n      Much thanks should be given to Petr Mejzlík and{' '}\n      <a\n        href='https://github.com/nai888/awkwords'\n        target='_blank'\n        rel='noopener noreferrer'\n      >\n        Awkwords\n      </a>\n      . {siteTitle}\n      {genInfo.title} was mainly built as a modernized and updated version of\n      Awkwords.\n    </p>\n  </Help>\n)\n\nGenHelp.propTypes = {\n  classes: PropTypes.object\n}\n\nexport default GenHelp\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport { siteTitle } from '../../../App'\nimport Help from '../../../components/Help'\nimport Notice from '../../../components/Notice'\n\nimport { morphInfo } from '../'\n\nconst MorphHelp = props => (\n  <Help toolInfo={morphInfo}>\n    <Notice>This tool is still in development.</Notice>\n    <h3 id='using'>\n      Using {siteTitle}\n      {morphInfo.title}\n    </h3>\n    <h3 id='acknowledgments'>Acknowledgments</h3>\n    <p>\n      Much thanks should be given to Mark Rosenfelder and{' '}\n      <a\n        href='http://www.zompist.com/sca2.html'\n        target='_blank'\n        rel='noopener noreferrer'\n      >\n        the Sound Change Applier 2\n      </a>{' '}\n      (SCA\n      <sup>2</sup>\n      ). {siteTitle}\n      {morphInfo.title} was mainly built as a modernized and updated version of\n      SCA\n      <sup>2</sup>.\n    </p>\n  </Help>\n)\n\nMorphHelp.propTypes = {\n  classes: PropTypes.object\n}\n\nexport default MorphHelp\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport { siteTitle } from '../../../App'\nimport Help from '../../../components/Help'\nimport Notice from '../../../components/Notice'\n\nimport { treeInfo } from '../'\n\nconst TreeHelp = props => (\n  <Help toolInfo={treeInfo}>\n    <Notice>This tool is still in planning.</Notice>\n    <h3 id='using'>\n      Using {siteTitle}\n      {treeInfo.title}\n    </h3>\n  </Help>\n)\n\nTreeHelp.propTypes = {\n  classes: PropTypes.object\n}\n\nexport default TreeHelp\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport { siteTitle } from '../../../App'\nimport Help from '../../../components/Help'\nimport Notice from '../../../components/Notice'\n\nimport { lexInfo } from '../'\n\nconst LexHelp = props => (\n  <Help toolInfo={lexInfo}>\n    <Notice>This tool is still in planning.</Notice>\n    <h3 id='using'>\n      Using {siteTitle}\n      {lexInfo.title}\n    </h3>\n  </Help>\n)\n\nLexHelp.propTypes = {\n  classes: PropTypes.object\n}\n\nexport default LexHelp\n","import * as v from '../../styles/variables'\n\nconst styles = {\n  main: {\n    minHeight: `${10 * v.lnht}rem`,\n    padding: {\n      top: `${2 * v.lnht}rem`,\n      right: 0,\n      bottom: `${2 * v.lnht}rem`,\n      left: 0\n    }\n  }\n}\n\nexport default styles\n","import React from 'react'\nimport { Switch, Route } from 'react-router-dom'\nimport injectSheet from 'react-jss'\nimport { ToastContainer, toast, Flip } from 'react-toastify'\nimport 'react-toastify/dist/ReactToastify.css'\nimport PropTypes from 'prop-types'\n\nimport Home from '../../routes/Home'\nimport Deriv from '../../routes/Deriv'\nimport DerivHelp from '../../routes/Deriv/Help'\nimport Frequen from '../../routes/Frequen'\nimport FrequenHelp from '../../routes/Frequen/Help'\nimport Gen from '../../routes/Gen'\nimport GenHelp from '../../routes/Gen/Help'\nimport Morph from '../../routes/Morph'\nimport MorphHelp from '../../routes/Morph/Help'\nimport Tree from '../../routes/Tree'\nimport TreeHelp from '../../routes/Tree/Help'\nimport Lex from '../../routes/Lex'\nimport LexHelp from '../../routes/Lex/Help'\n\nimport styles from './styles'\n\nconst Main = props => (\n  <main>\n    <div className={props.classes.main}>\n      <Switch>\n        <Route path='/deriv/help' component={DerivHelp} />\n        <Route path='/deriv/' component={Deriv} />\n        <Route path='/frequen/help' component={FrequenHelp} />\n        <Route path='/frequen' component={Frequen} />\n        <Route path='/gen/help' component={GenHelp} />\n        <Route path='/gen' component={Gen} />\n        <Route path='/morph/help' component={MorphHelp} />\n        <Route path='/morph' component={Morph} />\n        <Route path='/tree/help' component={TreeHelp} />\n        <Route path='/tree' component={Tree} />\n        <Route path='/lex/help' component={LexHelp} />\n        <Route path='/lex' component={Lex} />\n        <Route path='/' component={Home} />\n      </Switch>\n    </div>\n    <ToastContainer\n      draggablePercent={60}\n      position={toast.POSITION.BOTTOM_CENTER}\n      transition={Flip}\n    />\n  </main>\n)\n\nMain.propTypes = {\n  classes: PropTypes.object\n}\n\nexport default injectSheet(styles)(Main)\n","import * as v from '../../styles/variables'\n\nconst styles = {\n  footer: {\n    textAlign: 'center',\n    borderTop: {\n      width: 1,\n      style: 'solid',\n      color: v.blu.darken(0.15).string()\n    },\n    padding: {\n      top: `${2 * v.lnht}rem`,\n      right: 0,\n      bottom: `${2 * v.lnht}rem`,\n      left: 0\n    },\n    '& a, & a:link, & a:visited, & a:hover, & a:active': {\n      textDecoration: 'none'\n    }\n  }\n}\n\nexport default styles\n","import React from 'react'\nimport injectSheet from 'react-jss'\nimport PropTypes from 'prop-types'\n\nimport styles from './styles'\n\nconst Footer = props => {\n  const getCopyrightYear = () => {\n    const initYear = 2017\n    const d = new Date()\n    const y = d.getFullYear()\n    return y > initYear ? `${initYear}–${y}` : initYear.toString()\n  }\n\n  const author = 'Ian A. Cook'\n  const authorURL = 'https://github.com/nai888'\n  const appGhURL = 'https://github.com/nai888/langua'\n  const appBpURL = 'https://beerpay.io/nai888/langua'\n  const version = '0.4.3'\n\n  return (\n    <footer>\n      <div className={props.classes.footer}>\n        <p className={props.classes.copyright}>\n          <a\n            href={appGhURL + '/blob/master/CHANGELOG.md'}\n            target='_blank'\n            rel='noopener noreferrer'\n          >\n            Version <i className='fas fa-code' /> {version}\n          </a>\n          . Built by{' '}\n          <a href={authorURL} target='_blank' rel='noopener noreferrer'>\n            {author}\n          </a>\n          , copyright <i className='far fa-copyright' /> {getCopyrightYear()}{' '}\n          under the{' '}\n          <a\n            href='https://choosealicense.com/licenses/agpl-3.0/'\n            target='_blank'\n            rel='noopener noreferrer'\n          >\n            AGPL-3.0 <i className='fas fa-gavel' /> license\n          </a>\n          .\n        </p>\n        <p className={props.classes.links}>\n          <a href={appGhURL} target='_blank' rel='noopener noreferrer'>\n            View this project on <i className='fab fa-github' /> GitHub\n          </a>{' '}\n          or{' '}\n          <a href={appBpURL} target='_blank' rel='noopener noreferrer'>\n            buy {author} a <i className='fas fa-beer' /> beer\n          </a>\n          .\n        </p>\n      </div>\n    </footer>\n  )\n}\n\nFooter.propTypes = {\n  classes: PropTypes.object\n}\n\nexport default injectSheet(styles)(Footer)\n","import React from 'react'\nimport { Helmet } from 'react-helmet'\nimport injectSheet from 'react-jss'\nimport 'normalize.css/normalize.css'\nimport '@fortawesome/fontawesome-free/css/all.css'\nimport PropTypes from 'prop-types'\n\nimport * as v from './styles/variables'\nimport styles from './styles/app'\n\nimport Header from './components/Header'\nimport Main from './components/Main'\nimport Footer from './components/Footer'\n\nexport const canonical = 'https://nai888.github.io/langua/'\nexport const siteTitle = 'Langua'\n\n// String.endsWith() polyfill\nif (!String.prototype.endsWith) {\n  // eslint-disable-next-line\n  String.prototype.endsWith = (search, thisLen) => {\n    if (thisLen === undefined || thisLen > this.length) {\n      thisLen = this.length\n    }\n    return this.substring(thisLen - search.length, thisLen) === search\n  }\n}\n\nconst App = props => (\n  <div className={props.classes.app}>\n    <Helmet>\n      <title>{siteTitle} | Language Tools</title>\n      <meta\n        name='description'\n        content='Langua is a suite of language tools that can be used for testing, experimentation, learning, analysis, or creation.'\n      />\n      <meta name='theme-color' content={v.blu.string()} />\n      <link rel='canonical' href={canonical} />\n    </Helmet>\n    <Header />\n    <Main />\n    <Footer />\n  </div>\n)\n\nApp.propTypes = {\n  classes: PropTypes.object\n}\n\nexport default injectSheet(styles)(App)\n","import React from 'react'\nimport { BrowserRouter } from 'react-router-dom'\nimport injectSheet from 'react-jss'\n\nimport styles from './styles/global'\nimport App from './App'\n\nconst Router = () => (\n  <BrowserRouter\n    // If deploying to the subfolder '/langua', leave as-is.\n    // If deploying to a different subfolder, change the basename below accordingly.\n    // If deploying to the root of a site, remove the basename prop completely.\n    basename={'/langua'}\n  >\n    <App />\n  </BrowserRouter>\n)\n\nexport default injectSheet(styles)(Router)\n","import 'react-app-polyfill/ie9'\nimport React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport registerServiceWorker from './registerServiceWorker'\nimport Router from './Router'\n\nconst rootElement = document.getElementById('root')\n\nif (rootElement.hasChildNodes()) {\n  ReactDOM.hydrate(<Router />, rootElement)\n} else {\n  ReactDOM.render(<Router />, rootElement)\n}\n\nregisterServiceWorker()\n"],"sourceRoot":""}