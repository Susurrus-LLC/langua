{"version":3,"sources":["webpack:///./src/components/button/index.js","webpack:///./src/pages/morph/help/index.js","webpack:///./src/components/notice/index.js","webpack:///./src/components/help/index.js","webpack:///./src/components/button/button.module.sass","webpack:///./src/components/notice/notice.module.sass"],"names":["Button","ver","onClick","id","small","type","role","route","link","children","assignClasses","classes","styles","btn","find","el","href","className","buttonLink","PureMorphHelp","data","metadata","site","siteMetadata","toolInfo","morph","title","target","rel","MorphHelp","props","useStaticQuery","Notice","notice","PureHelp","canonical","toolTitle","description","Help","module","exports"],"mappings":"6IAoEeA,IA/DA,SAAC,GAUT,IATLC,EASI,EATJA,IACAC,EAQI,EARJA,QACAC,EAOI,EAPJA,GACAC,EAMI,EANJA,MACAC,EAKI,EALJA,KACAC,EAII,EAJJA,KACAC,EAGI,EAHJA,MACAC,EAEI,EAFJA,KACAC,EACI,EADJA,SAEMC,EAAgB,WACpB,IAAIC,EAAUC,IAAOC,IAUrB,MARI,CAAC,UAAW,UAAW,UAAUC,MAAK,SAAAC,GAAE,OAAIA,IAAOd,OACrDU,GAAO,IAAQC,IAAOX,IAGpBG,IACFO,GAAO,IAAQC,IAAOR,OAGjBO,GAGT,OAAIH,EAEA,mBACEQ,KAAI,IAAMT,EACVJ,GAAIA,EACJc,UAAcP,IAAL,IAAwBE,IAAOM,WAH1C,SAKGT,IAKH,wBACEP,QAASA,EACTC,GAAIA,EACJc,UAAWP,IACXL,KAAMA,GAAQ,SACdC,KAAMA,GAAQ,SALhB,SAOGG,M,yJC3CIU,EAAgB,SAAC,GAAc,IAAD,IAAXC,EAAW,EAAXA,KACxBC,EAAWD,SAAH,UAAGA,EAAME,YAAT,aAAG,EAAYC,aACvBC,EAAWH,SAAH,UAAGA,EAAUG,gBAAb,aAAG,EAAoBC,MAErC,OACE,eAAC,IAAD,CAAMD,SAAUA,EAAhB,UACE,cAAC,IAAD,iDACA,qBAAIrB,GAAG,QAAP,mBACSkB,EAASK,MACfF,EAASE,SAEZ,oBAAIvB,GAAG,kBAAP,6BACA,oFACsD,IACpD,mBACEa,KAAK,mCACLW,OAAO,SACPC,IAAI,sBAHN,wCAMK,IARP,OASM,oCATN,MASsBP,EAASK,MAC5BF,EAASE,MAVZ,+DAWK,oCAXL,WAsCSG,UArBG,SAAAC,GAChB,IAAMV,EAAOW,yBAAe,YAiB5B,OAAO,cAACZ,EAAD,iBAAmBW,EAAnB,CAA0BV,KAAMA,O,mFC1C1BY,IANA,SAAC,GAAD,IAAGvB,EAAH,EAAGA,SAAH,OAAkB,mBAAGQ,UAAWL,IAAOqB,OAArB,SAA8BxB,M,mICKlDyB,EAAW,SAAC,GAAkC,IAAD,EAA/Bd,EAA+B,EAA/BA,KAAMI,EAAyB,EAAzBA,SAAUf,EAAe,EAAfA,SACnCY,EAAWD,SAAH,UAAGA,EAAME,YAAT,aAAG,EAAYC,aAE7B,OACE,eAAC,IAAD,WACE,cAAC,IAAD,CACEG,MAAK,IAAKL,aAAL,EAAKA,EAAUK,QAAQF,aAAvB,EAAuBA,EAAUE,OAAjC,QACLS,WAAcX,aAAL,EAAKA,EAAUhB,MAAf,UAEX,cAAC,IAAD,CAAQA,MAAI,EAACD,MAAOiB,aAAF,EAAEA,EAAUhB,KAA9B,kBAGA,oBACES,UAAWL,IAAOwB,UADpB,aAEKf,aAFL,EAEKA,EAAUK,QAAQF,aAFvB,EAEuBA,EAAUE,OAFjC,UAGA,mBAAGvB,GAAIS,IAAOyB,YAAd,aACMhB,aADN,EACMA,EAAUK,QAAQF,aADxB,EACwBA,EAAUE,OADlC,KAC2CF,aAD3C,EAC2CA,EAAUa,eAEpD5B,MAmCQ6B,IAdF,SAAAR,GACX,IAAMV,EAAOW,yBAAe,cAU5B,OAAO,cAACG,EAAD,iBAAcJ,EAAd,CAAqBV,KAAMA,O,uBC3DpCmB,EAAOC,QAAU,CAAC,IAAM,4BAA4B,QAAU,gCAAgC,QAAU,gCAAgC,OAAS,+BAA+B,MAAQ,8BAA8B,WAAa,sC,uBCAnOD,EAAOC,QAAU,CAAC,OAAS,iC","file":"component---src-pages-morph-help-index-js-921dd93af9d0c971af26.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport styles from './button.module.sass'\n\nconst Button = ({\n  ver,\n  onClick,\n  id,\n  small,\n  type,\n  role,\n  route,\n  link,\n  children\n}) => {\n  const assignClasses = () => {\n    let classes = styles.btn\n\n    if (['neutral', 'success', 'danger'].find(el => el === ver)) {\n      classes += ` ${styles[ver]}`\n    }\n\n    if (small) {\n      classes += ` ${styles.small}`\n    }\n\n    return classes\n  }\n\n  if (link) {\n    return (\n      <a\n        href={`/${route}`}\n        id={id}\n        className={`${assignClasses()} ${styles.buttonLink}`}\n      >\n        {children}\n      </a>\n    )\n  } else {\n    return (\n      <button\n        onClick={onClick}\n        id={id}\n        className={assignClasses()}\n        type={type || 'button'}\n        role={role || 'button'}\n      >\n        {children}\n      </button>\n    )\n  }\n}\n\nButton.propTypes = {\n  ver: PropTypes.oneOf(['neutral', 'success', 'danger']),\n  onClick: PropTypes.func,\n  id: PropTypes.string,\n  small: PropTypes.bool,\n  type: PropTypes.string,\n  role: PropTypes.string,\n  classes: PropTypes.object,\n  route: PropTypes.string,\n  link: PropTypes.bool,\n  children: PropTypes.string\n}\n\nexport default Button\n","import React from 'react'\nimport { graphql, useStaticQuery } from 'gatsby'\n\nimport Notice from '../../../components/notice'\nimport Help from '../../../components/help'\n\nexport const PureMorphHelp = ({ data }) => {\n  const metadata = data?.site?.siteMetadata\n  const toolInfo = metadata?.toolInfo?.morph\n\n  return (\n    <Help toolInfo={toolInfo}>\n      <Notice>This tool is still in development.</Notice>\n      <h3 id='using'>\n        Using {metadata.title}\n        {toolInfo.title}\n      </h3>\n      <h3 id='acknowledgments'>Acknowledgments</h3>\n      <p>\n        Much thanks should be given to Mark Rosenfelder and{' '}\n        <a\n          href='http://www.zompist.com/sca2.html'\n          target='_blank'\n          rel='noopener noreferrer'\n        >\n          the Sound Change Applier 2\n        </a>{' '}\n        (SCA<sup>2</sup>). {metadata.title}\n        {toolInfo.title} was mainly built as a modernized and updated version of\n        SCA<sup>2</sup>.\n      </p>\n    </Help>\n  )\n}\n\nconst MorphHelp = props => {\n  const data = useStaticQuery(graphql`\n    query MorphHelpQuery {\n      site {\n        siteMetadata {\n          title\n          toolInfo {\n            morph {\n              title\n              link\n              description\n            }\n          }\n        }\n      }\n    }\n  `)\n\n  return <PureMorphHelp {...props} data={data} />\n}\n\nexport default MorphHelp\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport styles from './notice.module.sass'\n\nconst Notice = ({ children }) => <p className={styles.notice}>{children}</p>\n\nNotice.propTypes = {\n  children: PropTypes.string\n}\n\nexport default Notice\n","import React from 'react'\nimport { graphql, useStaticQuery } from 'gatsby'\nimport PropTypes from 'prop-types'\n\nimport Layout from '../layout'\nimport SEO from '../seo'\nimport Button from '../button'\n\nimport styles from './help.module.sass'\n\nexport const PureHelp = ({ data, toolInfo, children }) => {\n  const metadata = data?.site?.siteMetadata\n\n  return (\n    <Layout>\n      <SEO\n        title={`${metadata?.title}${toolInfo?.title} Help`}\n        canonical={`${toolInfo?.link}/help`}\n      />\n      <Button link route={toolInfo?.link}>\n        Back\n      </Button>\n      <h2\n        className={styles.toolTitle}\n      >{`${metadata?.title}${toolInfo?.title} Help`}</h2>\n      <p id={styles.description}>\n        {`${metadata?.title}${toolInfo?.title} ${toolInfo?.description}`}\n      </p>\n      {children}\n    </Layout>\n  )\n}\n\nPureHelp.propTypes = {\n  data: PropTypes.object,\n  toolInfo: PropTypes.shape({\n    title: PropTypes.string,\n    link: PropTypes.string,\n    description: PropTypes.string\n  }).isRequired,\n  children: PropTypes.oneOfType([\n    PropTypes.element,\n    PropTypes.string,\n    PropTypes.arrayOf(\n      PropTypes.oneOfType([PropTypes.element, PropTypes.string])\n    )\n  ])\n}\n\nconst Help = props => {\n  const data = useStaticQuery(graphql`\n    query HelpTitleQuery {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n    }\n  `)\n\n  return <PureHelp {...props} data={data} />\n}\n\nexport default Help\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"button-module--btn--1Vo01\",\"neutral\":\"button-module--neutral--3CChK\",\"success\":\"button-module--success--MfUtK\",\"danger\":\"button-module--danger--3YJms\",\"small\":\"button-module--small--gFeIB\",\"buttonLink\":\"button-module--button-link--2l7Ks\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"notice\":\"notice-module--notice--14xfk\"};"],"sourceRoot":""}